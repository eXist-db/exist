<?xml version="1.0" encoding="UTF-8"?>
<project name="test-exist-user" xmlns:au="antlib:org.apache.ant.antunit" xmlns:xdb="http://exist-db.org/ant">

    <!-- $Id$ -->
    
    <import file="common.xml"/>

    <target name="test_XMLDBCopy" description="test the copying of resources">

        <xdb:copy uri="${test.coll}/antunit" resource="test.xml"
                  user="${exist.user}" password="${exist.password}" destination="/db/antunit/test" name="test1.xml"/>

        <au:assertTrue message="XLMDBCopy doesnt work">
            <xdb:exist uri="${test.coll}/antunit" resource="test1.xml"/>
        </au:assertTrue>

    </target>

    <target name="test_XMLDBCreate" description="test creation of collection">

        <xdb:create uri="${test.coll}/antunit" user="${exist.user}" password="${exist.password}" collection="new"/>

        <au:assertTrue message="XLMDBCreate doesnt work">
            <xdb:exist uri="${test.coll}/antunit/new"/>
        </au:assertTrue>

    </target>

    <target name="test_XMLDBExist" description="test existence task">
        <au:assertTrue message="XLMDBExists doesnt work or resource exists">
            <xdb:exist uri="${test.coll}/antunit" resource="${test.file}"/>
        </au:assertTrue>
        <au:assertTrue message="XLMDBExists has found a resource that shouldnt exist">
            <not>
                <xdb:exist uri="${test.coll}/antunit" resource="${test.file}.not"/>
            </not>
        </au:assertTrue>
    </target>

    <target name="test_XMLDBExtract" description="test extraction of XML into files and collections">

        <!-- destfile attribute is actually file //-->
        <xdb:extract uri="${test.coll}/antunit"  user="${exist.user}" password="${exist.password}"  type="xml" resource="test.xml" destfile="test-output.xml"/>

        <au:assertFileExists message="XMLDBExtract does not work" file="test-output.xml"/>

    </target>

    <!-- repeat test to see overwritefiles behavior //-->
     <!--target name="test_overwrite_XMLDBExtract" description="repeat basic extract file test to test overwrite behavior">

        <xdb:extract uri="${test.coll}/antunit"  user="${exist.user}" password="${exist.password}"  type="xml" resource="test.xml" overwritefiles="true" destfile="test-output.xml"/>

        <au:assertFileExists file="test-output.xml"/>

    </target-->

     <target name="problem_createdirectories_XMLDBExtract" description="repeat basic extract dir/file test to test createdirectories property">

        <xdb:extract uri="${test.coll}/antunit"
                     user="${exist.user}"
                     password="${exist.password}"
                     createdirectories="true"
                     subcollections="true"
                     overwrite="true"
                     destdir="antunit"/>

         <available file="antunit/logo.jpg" property="binary.present"/>
         <available file="antunit/test.xml" property="xml.present"/>

         <!--au:assertEquals message="binary file was not extracted" expected="true"
                              actual="${binary.present}" casesensitive="false"/-->

         <au:assertEquals message="xml file was not extracted" expected="true"
                               actual="${xml.present}" casesensitive="false"/>

    </target>

    <target name="test_createdirectories1_XMLDBExtract" description="check that createdirectories works with single resource">

      <xdb:extract uri="${test.coll}/antunit"
            resource="logo.jpg"
            user="${exist.user}"
            password="${exist.password}"
            createdirectories="true"
            destfile="antunit/newdir/logo.jpg"/>

        <available file="antunit/newdir/logo.jpg" property="binary.present"/>
        <au:assertEquals message="binary file was not extracted" expected="true"
                             actual="${binary.present}" casesensitive="false"/>

     </target>

     <target name="test_createdirectories2_XMLDBExtract" description="check that overwrite works with single resource">

      <xdb:extract uri="${test.coll}/antunit"
            resource="logo.jpg"
            user="${exist.user}"
            password="${exist.password}"
            overwrite="true"
            createdirectories="true"
            destfile="antunit/newdir/logo.jpg"/>


     </target>

     <target name="problem_overwritedirs_XMLDBExtract" description="repeat extract dir/file test to test overwritedirs property">

        <xdb:extract uri="${test.coll}/antunit"
                     user="${exist.user}"
                     password="${exist.password}"
                     overwrite="true"
                     subcollections="true"
                     createdirectories="true"
                     destdir="antunit"/>

         <!--available file="antunit/logo.jpg" property="binary.present"/-->
         <available file="antunit/test.xml" property="xml.present"/>

         <!--au:assertEquals message="binary file was not extracted" expected="true"
                               actual="${binary.present}" casesensitive="false"/-->

         <!--au:assertEquals message="xml file was not extracted" expected="true"
                               actual="${xml.present}" casesensitive="false"/-->

    </target>

    <target name="test_binary_XMLDBExtract" description="test extraction of XML into files and collections">

        <xdb:extract uri="${test.coll}/antunit"  user="${exist.user}" password="${exist.password}"  type="binary" resource="logo.jpg" destfile="test-logo.jpg"/>

        <au:assertFileExists file="test-logo.jpg"/>

    </target>

    <target name="test_XMLDBList" description="test listing of resources">

        <xdb:list uri="${test.coll}/antunit" resources="true" outputproperty="resources"/>

        <au:assertTrue message="XLMDBXPath did not match">
            <contains string="${resources}" substring="test.xml"/>
        </au:assertTrue>

        <au:assertFalse message="XLMDBXPath did not match">
            <contains string="${resources}" substring="somenon-existentfile.xml"/>
        </au:assertFalse>

    </target>

    <target name="problem_XMLDBMove" description="test moving of resources">

        <xdb:copy uri="${test.coll}/antunit" resource="test.xml" user="${exist.user}" password="${exist.password}" destination="/db/antunit" name="test2.xml"/>

        <!-- move reuses xdb:remove...error messages //-->
        <xdb:move uri="${test.coll}/antunit" user="${exist.user}" password="${exist.password}" resource="test2.xml" destination="/db/antunit" name="test3.xml"/>

        <au:assertTrue message="XLMDBMove did not work">
            <xdb:exist uri="${test.coll}/antunit/test3.xml"/>
        </au:assertTrue>

    </target>

    <target name="test_XMLDBQuery" description="test querying of resources">
        <echo>test3</echo>
    </target>

    <!--target name="test_XMLDBRemove" description="test removal of resources">
        <xdb:remove uri="${test.coll}/antunit" user="admin" password="" collection="new"/>

        <au:assertFalse message="XLMDBRemove doesnt work">
            <xdb:exist uri="${test.coll}/antunit/new"/>
        </au:assertFalse>
    </target-->

    <target name="test_XMLDBStore" description="test uploading of resource">

        <xdb:store user="admin" password="" uri="${test.coll}/antunit" createcollection="true" srcfile="common.xml"/>

        <au:assertFalse message="XLMDBStore doesnt work">
            <xdb:exist uri="${test.coll}/antunit/common.xml"/>
        </au:assertFalse>

    </target>

    <target name="test_XMLDBStoreEmptyFile" description="test uploading of empty file">

        <xdb:store user="admin" password="" uri="${test.coll}/antunit" createcollection="true" srcfile="test.css"/>

        <au:assertFalse message="XLMDBStore doesnt work">
            <xdb:exist uri="${test.coll}/antunit/test.css"/>
        </au:assertFalse>

    </target>

    <target name="test_XMLDBXPath" description="test xpath query">

        <!-- xdb:xpath does not support destfile 
        <xdb:xpath uri="${test.coll}" query="//para" destfile="xpath-return.txt"/>
        //-->

        <xdb:xpath uri="${test.coll}/antunit" query="//para[1]" outputproperty="xpath-result"/>

        <au:assertTrue message="XLMDBXPath did not match">
            <contains string="${xpath-result}" substring="This file is used for testing Ant tasks"/>
        </au:assertTrue>

    </target>

    <target name="test_XMLDBXPath2" description="bug ID: 1774683 test xpath query with xml in output property">

        <!-- xdb:xpath does not support destfile
        <xdb:xpath uri="${test.coll}" query="//para" destfile="xpath-return.txt"/>
        //-->

        <xdb:xpath uri="${test.coll}/antunit" query="/test" outputproperty="xpath-result"/>

        <au:assertTrue message="XLMDBXPath did not match">
            <contains string="${xpath-result}" substring="&lt;para&gt;This file is used for testing Ant tasks&lt;/para&gt;"/>
        </au:assertTrue>

    </target>

    <target name="test_XMLDBXQuery" description="test xquery query">
        <xdb:xquery uri="${test.coll}/antunit" outputproperty="xquery-result" query="collection('/db/antunit')//para[1]"/>

        <au:assertTrue message="XLMDBXQuery did not match">
            <contains string="${xquery-result}" substring="This file is used for testing Ant tasks"/>
        </au:assertTrue>

    </target>

    <target name="test_XMLDBXUpdate" description="test xupdate operation">

        <!-- not sure if there is such a task //-->

    </target>


</project>
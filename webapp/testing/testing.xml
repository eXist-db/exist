<?xml version="1.0" encoding="utf-8"?>
<book>
    <bookinfo>
        <graphic fileref="../logo.jpg"/>
        <productname>Open Source Native XML Database</productname>
        <title>Testing</title>
        <orgname>The eXist Project</orgname>
        <date>March 2010</date>
        <author>
            <firstname>James</firstname>
            <surname>Fuller</surname>
        </author>
    </bookinfo>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="sidebar.xml"/>
    <chapter>
        <title>Testing</title>

        <abstract>
            <para>Including a set of tests along with code is good practice (and a requirement when adding new code to eXist).
                We try to provide eXist developers several ways to test code, be it Java, XSLT or even XQuery itself.</para>
       </abstract>

        <section>
            <title>XQuery Testing</title>
            <para>eXist has two methods for developing non-regression XQuery tests, either using its own built in
                XQuery unit testing suite or through the use of XSpec testing framework</para>

            <section>
                <title>Using eXist internal XQuery Testing</title>
                <para>When developing functionality that is intended to be part of the eXist distribution (or required
                    extensions) it is recommended to use eXist's own built in XQuery testing suite which has been developed
                    to integrate closely with JUnit and eXist own build tools.</para>

                <para>Existing tests can be viewed in the source code under test/src/xquery which tests XQuery code. A test is made up of
                a declarative description which defines how to setup, teardown and perform the test itself ... roughly equivelant to JUNIT
                style testing.</para>

                <para>The following example uses the test/src/xquery/util tests which for the moment just tests the util:eval instruction.</para>
            <example>
            <title>Example XQuery Test definition</title>
                <programlisting>
                <markup><![CDATA[

<TestSet>
    <testName>Util tests</testName>
    <description>
        <p>Testing eval statements</p>
        <author>James Fuller</author>
    </description>
    <setup>
        <create-collection parent="/db" name="util-test"/>
    </setup>
    <tearDown>
        <remove-collection collection="/db/util-test"/>
    </tearDown>
    <test output="text">
        <task>Simple eval</task>
        <code>util:eval('let $a:=1 return $a')</code>
        <expected>1</expected>
    </test>
</TestSet>]]>                </markup>
                </programlisting>
            </example>

                <para>
                   I list out some of the more common elements of the test markup below.
                    <ul>
                        <li>testname: top level root element</li>
                        <li>setup: can create collections and load up xml documents</li>
                        <li>teardown: which you can use to remove and delete any artifacts your test may have produced</li>
                        <li>test: this element contains the code which you want to test, along with the expected result</li>
                    </ul>

                </para>
                <para>By providing a small JUNIT test file, like the one below, then this test becomes part of the eXist test suite.</para>

                <example>
                <title>Example XQuery Test definition</title>
                    <programlisting>
                    <markup><![CDATA[
package xquery.util;

import xquery.TestRunner;

public class UtilTests extends TestRunner {

    @Override
    protected String getDirectory() {
        return "test/src/xquery/util";
    }
}
                ]]>                </markup>
                                </programlisting>
                            </example>
                 <para>You need to make sure that this Java file is located in the same directory as the test and that its getDirectory()
                     method returns the path to this directory</para>
            </section>

            <section>
                <title>Using XSpec</title>


                <example>
                <title>Testing the following XQuery module</title>
                    <programlisting>
                    <markup><![CDATA[
module namespace ex = "http://example.org/ns/my";

declare function ex:square($n as xs:integer) as xs:integer{
$n * $n
};
]]>                </markup>
                    </programlisting>
                </example>

                <example>
                <title>XSpec test definition</title>
                    <programlisting>
                    <markup><![CDATA[
<t:description xmlns:t="http://www.jenitennison.com/xslt/xspec"
               xmlns:ex="http://example.org/ns/my"
               query="http://example.org/ns/my"
               query-at="testing-this-module.xql">

   <t:scenario label="call">
      <t:call function="ex:square">
         <t:param select="3"/>
      </t:call>
      <t:expect label="the result" test="$x:result eq 9"/>
      <t:expect label="the type"   test="$x:result instance of xs:integer"/>
   </t:scenario>

   <t:scenario label="must fail">
      <t:call function="ex:square">
         <t:param select="2"/>
      </t:call>
      <t:expect label="wrong result" test="$x:result eq 42"/>
   </t:scenario>

</t:description>]]>                </markup>
                    </programlisting>
                </example>


            </section>

        </section>

        <section>
              <title>Other</title>
            <section>
                <title>Testing Java</title>
                <para>Check <a href="/exist/developper.html">here</a>.</para>
            </section>
            <section>
                  <title>Functional Testing with XProc</title>
                <para>TBA</para>
            </section>

            <section>
                  <title>Testing Resources</title>
                <ul>
                    <li><a href="http://www.xspec.org" target="_resource">XSpec - </a></li>
                    <li><a href="http://xproc.org" target="_resource">XSpec Testing XSLT - Tony Graham XML Prague 2009 paper</a></li>        
                </ul>
            </section>
        </section>
    </chapter>
</book>

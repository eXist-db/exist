<?xml version="1.0" encoding="utf-8"?>
<book>
    <bookinfo>
        <graphic fileref="../logo.jpg"/>
        <productname>Open Source Native XML Database</productname>
        <title>Testing</title>
        <orgname>The eXist Project</orgname>
        <date>March 2010</date>
        <author>
            <firstname>James</firstname>
            <surname>Fuller</surname>
        </author>
    </bookinfo>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="sidebar.xml"/>
    <chapter>
        <title>Testing</title>

        <abstract>
            <para>Including a set of tests along with code is good practice (and a requirement when committing new code to eXist).
                eXist provides developers several ways to test code, be it Java, XSLT or even XQuery itself.</para>
       </abstract>

        <section>
            <title>XQuery Testing</title>
            <para>eXist has its own built in approach to developing non-regression XQuery tests, using its built in XQuery library for testing
            executed via Java or XQuery itself. This library is enabled via conf.xml</para>

            <section>
                <title>Using eXist XQuery Unit Test</title>

                <para>The following example shows how to import the unit test suite, define TestSet element
                using the t:run-testSet() function.</para>

                <example>
                <title>Example XQuery Test example</title>
                    <programlisting>
                    <markup><![CDATA[

xquery version "1.0";

import module namespace t="http://exist-db.org/xquery/testing";

let $test := <TestSet>
    <testName>Example test</testName>
    <description>
        <p>Testing the number of paragraphs</p>
        <author>James Fuller</author>
    </description>
    <setup>
        <create-collection parent="/db" name="test"/>
        <store collection="/db/test" name="data.xml">
            <root>
                <para>This is a paragraph</para>
            </root>
        </store>
    </setup>
    <tearDown>
        <remove-collection collection="/db/test"/>
    </tearDown>
    <test output="text">
        <task>Simple following axis test</task>
        <code>count(doc("/db/test/data.xml")//para)</code>
        <expected>1</expected>
    </test>

 </TestSet>
return
    t:run-testSet($test)
 ]]>
</markup>
            </programlisting>
        <a href="examples/unit-test-example.xql" target="_example">run unit-test-example.xql</a>

        </example>

                <para>
                     A <b>TestSet</b> defines the tests you would like to run, which uses the following elements:

                    <ul>
                        <li><b>setup</b>: create collections and store xml data for use with testing.</li>
                        <li><b>tearDown</b>: remove collections and data after testing</li>
                        <li><b>test</b>: define test and expected results </li>
                    </ul>


                </para>

                <para>Running the example will output the following</para>

                <example>
                <title>Example XQuery Test Output</title>
                    <programlisting>
                    <markup><![CDATA[
<TestSet>
<testName>Example test</testName>
    <description>
        <p>Testing the number of paragraphs</p>
        <author>James Fuller</author>
    </description>
    <test n="1" pass="true"/>
</TestSet>
 ]]></markup>
            </programlisting>
        </example>
                <para>Each <b>test</b> element contains a @pass attribute that will indicate success or failure of the tests.</para>
            </section>
            
            <section>
                <title>Integrate eXist XQuery Unit Testing for eXist core Testing</title>
                <para>When developing functionality that is intended to be part of the eXist distribution (or required
                    extensions) it is recommended to use eXist's own built in XQuery testing suite which has been developed
                    to integrate closely with JUnit and eXist own build tools.</para>

                <para>Existing tests can be viewed in the source code under test/src/xquery which tests XQuery code. A test is made up of
                a declarative description which defines how to setup, teardown and perform the test itself ... roughly equivelant to JUNIT
                style testing.</para>

                <para>The following example uses the test/src/xquery/util tests which for the moment just tests the util:eval instruction.</para>
            <example>
            <title>Example XQuery Test definition</title>
                <programlisting>
                <markup><![CDATA[

<TestSet>
    <testName>Util tests</testName>
    <description>
        <p>Testing eval statements</p>
        <author>James Fuller</author>
    </description>
    <setup>
        <create-collection parent="/db" name="util-test"/>
    </setup>
    <tearDown>
        <remove-collection collection="/db/util-test"/>
    </tearDown>
    <test output="text">
        <task>Simple eval</task>
        <code>util:eval('let $a:=1 return $a')</code>
        <expected>1</expected>
    </test>
</TestSet>]]>                </markup>
                </programlisting>
            </example>

                <para>The next step is to provide a small JUNIT test file, like the one below, then this test becomes part of the eXist test suite.</para>

                <example>
                <title>Example XQuery Test definition</title>
                    <programlisting>
                    <markup><![CDATA[
package xquery.util;

import xquery.TestRunner;

public class UtilTests extends TestRunner {

    @Override
    protected String getDirectory() {
        return "test/src/xquery/util";
    }
}
                ]]>                </markup>
                                </programlisting>
                            </example>
                 <para>You need to make sure that this Java file is located in the same directory as the test and that its getDirectory()
                     method returns the path to this directory</para>
            </section>

        </section>

        <section>
              <title>Other</title>
            <section>
                <title>Testing Java</title>
                <para>Check <a href="/exist/developper.html">here</a>.</para>
            </section>
            <section>
                  <title>Functional Testing with XProc</title>
                <para>TBA</para>
            </section>

            <section>
                  <title>Testing Resources</title>
                <ul>
                    <li><a href="http://code.google.com/p/xspec/" target="_resource">XSpec - Unit Testing Suite for XSLT &amp; XQuery</a></li>
                    <li><a href="http://www.xmlprague.cz/sessions.html#test_xslt_with_xspec" target="_resource">Jeni Tennison 'Testing XSLT with XSpec' - XML Prague 2009 paper</a></li>
                    <li><a href="http://www.xmlprague.cz/sessions.html#testing_xslt" target="_resource">Tony Graham 'Testing XSLT' - XML Prague 2009 paper</a></li>
                </ul>
            </section>
        </section>
    </chapter>
</book>

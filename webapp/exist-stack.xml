<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: quickstart.xml 11644 2010-04-08 20:46:53Z ixitar $ -->
<book>
    <bookinfo>
        <graphic fileref="logo.jpg"/>
        <productname>Open Source Native XML Database</productname>
        <title>Steps to Create an eXist, Subversion, LDAP server with Apache2 w/SSL</title>
        <date>May 2010</date>
        <author>
            <firstname>Loren</firstname>
            <surname>Cahlander</surname>
            <affiliation>
                <address format="linespecific"><email>loren.cahlander at gmail.com</email></address>
            </affiliation></author>
    </bookinfo>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="sidebar.xml"/>
    <chapter>
        <title>Steps to Create an eXist, Subversion, LDAP server with Apache2 w/SSL</title>
        <para>This article is to create a best practice for for a secure eXist server. This is all
            installed on a virtual image of Ubuntu Server 10.04 LTS.</para>
        <para>We find that our users frequently want to run eXist on a server that has many other
            functions enabled that are not part of the core eXist release.  These functions include:<itemizedlist>
                <listitem>
                    <para>An Apache web server that serves as a front-end for a web site</para>
                </listitem>
                <listitem>
                    <para>A version control system (subversion)</para>
                </listitem>
                <listitem>
                    <para>An e-mail server for notification</para>
                </listitem>
                <listitem>
                    <para>An integrated authentication system (LDAP)</para>
                </listitem>
                <listitem>
                    <para>A Secure sockets layer (SSL) for encripting all web pages</para>
                    
                </listitem>
                
            </itemizedlist></para>
        <para>This guide reviews all the steps necessary to install these functions on a standard
            UNIX server. We specifically have used the Ubuntu 10.0.4 release but we also plan to
            support RedHad and CentOS.</para>
        <section id="sect1">
            <title>Installing Apache2</title>
            <para>The Apache web server is the gateway for all of ther services that will be
                installed.</para>
            <synopsis>sudo apt-get install apache2 apache2-doc</synopsis>
            <section>
                <title>Logging</title>
                <para>The default Apache2 access and error logging to non rotating log files is not
                    adequate for any operational environment.  The solution is to place the following at
                    the beginning of /etc/apache2/sites-available/default and remove the log entries
                    inside the VirtualHost entries for both default and default-ssl. This will create a
                    rotating access log file in the filename format /var/log/apache2/access.<emphasis
                        role="italic">yyyy.mm.dd</emphasis>.log and adds extra fields into the log file
                    that will be used by the awstats web statisctics application.  The rotating error
                    log file in the filename style /var/log/apache2/error.<emphasis role="italic"
                        >yyyy.mm.dd</emphasis>.log.</para>
                <programlisting language="xml"><![CDATA[ErrorLog "|/usr/sbin/rotatelogs -l /var/log/apache2/error.%Y.%m.%d.log 86400"

# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
LogLevel warn

CustomLog "|/usr/sbin/rotatelogs -l /var/log/apache2/access.%Y.%m.%d.log 86400" "%v %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\""
<VirtualHost *:80>
]]></programlisting>
                <para>Restart Apache2 to enable the change to the log format:</para>
                <synopsis>sudo /etc/init.d/apache2 stop</synopsis>
                <synopsis>sudo rm /var/log/apache2/access.log</synopsis>
                <synopsis>sudo /etc/init.d/apache2 start</synopsis>
            </section>
            <section>
                <title>Backup</title>
                <para>The custom backup cron script, that will be defined 
                    in the section before the assets section, will include 
                    all of the log files and will remove the ones more 
                    than one month old.</para>
            </section>
            <section>
                <title>Conclusion</title>
                <para>The Apache web server is now installed and activated.  The <emphasis role="bold"
                    >It Works!</emphasis> page can be seen by opening <link linkend=""
                        >http://localhost/</link>.  Documents related to the services installed on the
                    server can be viewed at <link linkend="">http://localhost/doc/</link>.  The cgi-bin
                    scripts can be executed by the link <link linkend=""
                        >http://localhost/cgi-bin/</link>.</para>
            </section>
        </section>
        <section id="sect2">
            <title>Installing SSL</title>
            <para>The calls to the web server over port 80 are all through clear-text.  Installing
                SSL enables encrypted calls over port 443.  This installation will generate a
                self-signed certificate which will require the user to accept the certificate.  If
                you have a certificate from a certificate authority, then the SSLCertificate entries
                in the VirtualHost entry will have to be modified to use the certificate from the
                certificate authority.</para>
            <para>Install ssl-cert and create the SSL VirtualHost file <emphasis role="bold"
                    >default-ssl</emphasis>.</para>
            <synopsis>sudo apt-get install ssl-cert</synopsis>
            <para>Create the directory to contain the certificates</para>
            <synopsis>sudo mkdir /etc/apache2/ssl</synopsis>
            <para>Enable the SSL module in Apache.</para>
            <synopsis>sudo a2enmod ssl</synopsis>
            <para>For these changes to take place, then Apache needs to be reloaded.</para>
            <synopsis>sudo /etc/init.d/apache2 force-reload</synopsis>
            <para>The installing of ssl-cert will automatically generate a 
                self-signed certificate.  If there is a signed certificate, 
                then the following lines need to be added to default-ssl.</para>
            <synopsis>SSLCertificateFile /etc/apache2/ssl/exist-db.org.crt
SSLCertificateKeyFile /etc/apache2/ssl/vm.exist-db.key
SSLCertificateChainFile /etc/apache2/ssl/gd_bundle.crt</synopsis>
            <para>Enable the SSL VirtualHost</para>
            <synopsis>sudo a2ensite default-ssl</synopsis>
            <para>Reload Apache to make the enabling of the SSL VirtualHost.</para>
            <synopsis>sudo /etc/init.d/apache2 restart</synopsis>
            <para>SSL is now enabled.</para>
        </section>
        <section id="ldap">
            <title>Installing LDAP</title>
            <para>These commands will install a local LDAP server and a web based administrative
                application to manage groups and users within this virtual machine.</para>
            <synopsis>sudo apt-get install slapd ldap-utils ldap-account-manager</synopsis>
            <para></para>
            <synopsis>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/cosine.ldif
ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/inetorgperson.ldif
ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/nis.ldif</synopsis>
            <para></para>
            <synopsis>vi /home/exist/db.ldif</synopsis>
            <para>and insert the following listing:</para>
            <programlisting language="ldif"><![CDATA[###########################################################
# DATABASE SETUP
###########################################################

# Load modules for database type
dn: cn=module{0},cn=config
objectClass: olcModuleList
cn: module{0}
olcModulePath: /usr/lib/ldap
olcModuleLoad: {0}back_hdb

# Create directory database
dn: olcDatabase={1}hdb,cn=config
objectClass: olcDatabaseConfig
objectClass: olcHdbConfig
olcDatabase: {1}hdb
olcDbDirectory: /var/lib/ldap
olcSuffix: dc=exist-db,dc=org
olcRootDN: cn=admin,dc=exist-db,dc=org
olcRootPW: 1234
olcAccess: {0}to attrs=userPassword,shadowLastChange by dn="cn=admin,dc=exist-db,dc=org" write by anonymous auth by self write by * none
olcAccess: {1}to dn.base="" by * read
olcAccess: {2}to * by dn="cn=admin,dc=exist-db,dc=org" write by * read
olcLastMod: TRUE
olcDbCheckpoint: 512 30
olcDbConfig: {0}set_cachesize 0 2097152 0
olcDbConfig: {1}set_lk_max_objects 1500
olcDbConfig: {2}set_lk_max_locks 1500
olcDbConfig: {3}set_lk_max_lockers 1500
olcDbIndex: uid pres,eq
olcDbIndex: cn,sn,mail pres,eq,approx,sub
olcDbIndex: objectClass eq


###########################################################
# DEFAULTS MODIFICATION
###########################################################
# Some of the defaults need to be modified in order to allow
# remote access to the LDAP config. Otherwise only root
# will have administrative access.

dn: cn=config
changetype: modify
delete: olcAuthzRegexp

dn: olcDatabase={-1}frontend,cn=config
changetype: modify
delete: olcAccess

dn: olcDatabase={0}config,cn=config
changetype: modify
add: olcRootPW
olcRootPW: {CRYPT}7hzU8RaZxaGi2

dn: olcDatabase={0}config,cn=config
changetype: modify
delete: olcAccess
]]></programlisting>
            <para></para>
            <synopsis>sudo ldapadd -Y EXTERNAL -H ldapi:/// -f /home/exist/db.ldif</synopsis>
            <synopsis>sudo vi /home/exist/base.ldif</synopsis>
            <para>and insert the following:</para>
            <programlisting language="ldif"><![CDATA[dn: dc=exist-db,dc=org
objectClass: dcObject
objectClass: organization
o: exist-db.org
dc: exist-db
description: Tree root

dn: cn=admin,dc=exist-db,dc=org
objectClass: simpleSecurityObject
objectClass: organizationalRole
cn: admin
userPassword: admin123
description: LDAP administrator

dn: ou=Users,dc=exist-db,dc=org
objectClass: organizationalUnit
ou: Users

dn: ou=Groups,dc=exist-db,dc=org
objectClass: organizationalUnit
ou: Groups

dn: uid=admin,ou=Users,dc=exist-db,dc=org
sn: Administrator
uidNumber: 1
gidNumber: 1
objectClass: person
objectClass: organizationalPerson
objectClass: inetOrgPerson
objectClass: posixAccount
uid: admin
cn: admin
homeDirectory: /

dn: uid=guest,ou=Users,dc=exist-db,dc=org
sn: guest
uidNumber: 2
gidNumber: 300
objectClass: person
objectClass: organizationalPerson
objectClass: inetOrgPerson
objectClass: posixAccount
uid: guest
cn: guest
homeDirectory: /guest

dn: cn=dba,ou=Groups,dc=exist-db,dc=org
objectClass: posixGroup
description: dba
gidNumber: 1
cn: dba

dn: cn=guest,ou=Groups,dc=exist-db,dc=org
objectClass: posixGroup
description: guest
gidNumber: 300
cn: guest
memberUid: admin

dn: cn=svn-update,ou=Groups,dc=exist-db,dc=org
objectClass: posixGroup
description: SVN Update
gidNumber: 400
cn: svn-update

dn: cn=svn-readonly,ou=Groups,dc=exist-db,dc=org
objectClass: posixGroup
description: SVN Read Only
gidNumber: 500
cn: svn-readonly

dn: cn=backup-access,ou=Groups,dc=exist-db,dc=org
objectClass: posixGroup
description: System backup page access.
gidNumber: 600
cn: backup-access

]]></programlisting>
            <para>...and apply it:</para>
            <synopsis>sudo ldapadd -x -D cn=admin,dc=exist-db,dc=org -W -f /home/exist/base.ldif</synopsis>
            <para>Configuring ldap-account-manager</para>
            <synopsis>sudo vi /etc/apache2/sites-available/default-ssl</synopsis>
            <para>Add the following to default-ssl.  It creates the alias of /lam/ to the PHP pages
                that administer the groups and users within the LDAP server.</para>
            <programlisting language="xml"><![CDATA[    Alias /lam/ "/usr/share/ldap-account-manager/"
    <Directory "/usr/share/ldap-account-manager/">
        Options Indexes MultiViews FollowSymLinks
        AllowOverride None
        Order deny,allow
        Deny from all
        Allow from all
    </Directory>
]]></programlisting>
            <para>Enable the LDAP module within Apache.</para>
            <synopsis>sudo a2enmod ldap</synopsis>
            <synopsis>sudo a2enmod authnz_ldap</synopsis>
            <synopsis>sudo /etc/init.d/apache2 reload</synopsis>
            <para>The LDAP module is now enabled.</para>
            <para>Configure ldap-account-manager.  Open the /lam/ website in this VM and then select
                    <emphasis role="italic">LAM configuration</emphasis>.</para>
            <screenshot>
                <graphic fileref="resources/stack/lam-01.png"/>
            </screenshot>
            <para>Select the <emphasis role="italic">Edit server profiles</emphasis>.</para>
            <screenshot>
                <graphic fileref="resources/stack/lam-02.png"/>
            </screenshot>
            <para>Enter the LAM password of <emphasis role="italic">lam</emphasis> and then click on
                Ok.</para>
            <screenshot>
                <graphic fileref="resources/stack/lam-03.png"/>
            </screenshot>
            <para>In the <emphasis role="italic">General settings</emphasis> page, update the
                    <emphasis role="italic">Tree suffix</emphasis> and <emphasis role="italic">List
                    of valid users</emphasis> to the system configurations loaded into th LDAP
                server by <emphasis role="italic">/home/exist/db.ldif</emphasis> and <emphasis
                    role="italic">/home/exist/base.ldif</emphasis>.</para>
            <screenshot>
                <graphic fileref="resources/stack/lam-04.png"/>
            </screenshot>
            <para>Select <emphasis role="italic">Account types</emphasis>.</para>
            <screenshot>
                <graphic fileref="resources/stack/lam-05.png"/>
            </screenshot>
            <para>Delete <emphasis role="italic">Samba domains</emphasis> and <emphasis
                    role="italic">Hosts</emphasis>.  Update the Users and Groups to the system
                configurations loaded into th LDAP server by <emphasis role="italic"
                    >/home/exist/base.ldif</emphasis>.</para>
            <screenshot>
                <graphic fileref="resources/stack/lam-06.png"/>
            </screenshot>
            <para>Select <emphasis role="italic">Modules</emphasis>.</para>
            <screenshot>
                <graphic fileref="resources/stack/lam-07.png"/>
            </screenshot>
            <para>Remove the Shadow and Samba 3 entries from Selected modules.</para>
            <screenshot>
                <graphic fileref="resources/stack/lam-08.png"/>
            </screenshot>
            <para>Select <emphasis role="italic">Module settings</emphasis>.</para>
            <screenshot>
                <graphic fileref="resources/stack/lam-09.png"/>
            </screenshot>
            <para>Check all of the <emphasis role="italic">Hidden options</emphasis> that you do not
                wish to be shown in create/edit user page.  Then select <emphasis role="italic"
                    >Save</emphasis>.</para>
            <screenshot>
                <graphic fileref="resources/stack/lam-10.png"/>
            </screenshot>
            <para>Click on <emphasis role="italic">Back to Login</emphasis>.</para>
            <screenshot>
                <graphic fileref="resources/stack/lam-11.png"/>
            </screenshot>
            <para>Enter the password <emphasis role="italic">1234</emphasis> and selecting <emphasis
                    role="italic">Login</emphasis>.</para>
            <screenshot>
                <graphic fileref="resources/stack/lam-12.png"/>
            </screenshot>
            <para>Set access to the newly configured lam web application to the members of the LDAP
                dba group.</para>
            <programlisting language="xml"><![CDATA[Alias /lam/ "/usr/share/ldap-account-manager/"
<Directory "/usr/share/ldap-account-manager/">
    Options Indexes MultiViews FollowSymLinks
    AllowOverride None
    AuthBasicProvider ldap 
    AuthType Basic 
    AuthName "LDAP Authorization Realm"  
    AuthBasicProvider ldap
    AuthLDAPUrl ldap://127.0.0.1:389/ou=Users,dc=exist-db,dc=org?uid
    AuthLDAPGroupAttribute memberUid
    AuthLDAPGroupAttributeIsDN off
    Require ldap-group cn=dba,ou=Groups,dc=exist-db,dc=org
    Require ldap-attribute gidNumber=1
    Satisfy any
</Directory>
]]></programlisting>
            <para>Restart Apache2 to make these changes take effect.</para>
            <synopsis>sudo /etc/init.d/apache2 reload</synopsis>
            <para>The ldap-account-manager is now configured and access to it is also
                secured.</para>
        </section> 
        <section>
            <title>Installing Mailman</title>
            <para>The mailman is a mailing list manager.  It will be used to to send out mailings to
                the members of the list for all commits to the subversion repository.</para>
            <synopsis>sudo apt-get install mailman spamassassin listadmin</synopsis>
            <synopsis>newlist vm-commit</synopsis>
            <para>To finish creating your mailing list, you must edit your /etc/aliases (or
                equivalent) file by adding the following lines, and possibly running the
                `newaliases' program:</para>
            <programlisting><![CDATA[## vm-commit mailing list
vm-commit:              "|/var/lib/mailman/mail/mailman post vm-commit"
vm-commit-admin:        "|/var/lib/mailman/mail/mailman admin vm-commit"
vm-commit-bounces:      "|/var/lib/mailman/mail/mailman bounces vm-commit"
vm-commit-confirm:      "|/var/lib/mailman/mail/mailman confirm vm-commit"
vm-commit-join:         "|/var/lib/mailman/mail/mailman join vm-commit"
vm-commit-leave:        "|/var/lib/mailman/mail/mailman leave vm-commit"
vm-commit-owner:        "|/var/lib/mailman/mail/mailman owner vm-commit"
vm-commit-request:      "|/var/lib/mailman/mail/mailman request vm-commit"
vm-commit-subscribe:    "|/var/lib/mailman/mail/mailman subscribe vm-commit"
vm-commit-unsubscribe:  "|/var/lib/mailman/mail/mailman unsubscribe vm-commit"
]]></programlisting>
            <synopsis>newaliases</synopsis>
            <synopsis>sudo /etc/init.d/mailman start</synopsis>
        </section> 
        <section id="sect3">
            <title>Installing Subversion</title>
            <para>Install the packages</para>
            <synopsis>sudo apt-get install subversion libapache2-svn subversion-tools</synopsis>
            <para>Now create a virtual host for your SVN container.</para>
            <synopsis>sudo mkdir -p /var/local/svn/vm.exist-db.org</synopsis>
            <para>Now create a development group, and add the web user to it.</para>
            <synopsis>addgroup svngroup</synopsis>
            <synopsis>adduser www-data svngroup</synopsis>
            <para>Now setup the permissions for your SVN site.</para>
            <synopsis>chmod 2770 /var/local/svn/vm.exist-db.org</synopsis>
            <para>Now setup the repo as you normally would</para>
            <synopsis>svnadmin create --fs-type fsfs /var/local/svn/vm.exist-db.org/test-repos</synopsis>
            <synopsis>mkdir /var/local/svn/vm.exist-db.org/test-repos/scripts</synopsis>
            <synopsis>vi /var/local/svn/vm.exist-db.org/test-repos/scripts/mailer.conf</synopsis>
            <para>Add the following to the <emphasis role="italic">mailer.conf</emphasis>
                file.</para>
            <programlisting>#
# mailer.conf: example configuration file for mailer.py
#
# $Id$

[general]

# The [general].diff option is now DEPRECATED.
# Instead use [defaults].diff .

#
# One delivery method must be chosen. mailer.py will prefer using the
# "mail_command" option. If that option is empty or commented out,
# then it checks whether the "smtp_hostname" option has been
# specified. If neither option is set, then the commit message is
# delivered to stdout.
#

# This command will be invoked with destination addresses on the command
# line, and the message piped into it.
#mail_command = /usr/sbin/sendmail

# This option specifies the hostname for delivery via SMTP.
smtp_hostname = localhost

# Username and password for SMTP servers requiring authorisation.
#smtp_username = example
#smtp_password = example

# --------------------------------------------------------------------------

#
# CONFIGURATION GROUPS
#
# Any sections other than [general], [defaults], [maps] and sections
# referred to within [maps] are considered to be user-defined groups
# which override values in the [defaults] section.
# These groups are selected using the following two options:
#
#   for_repos
#   for_paths
#
# Both options specify a regular expression. The former is matched against
# the absolute path to the repository the mailer is operating against. The
# second is matched against *every* path (files and dirs) that was modified
# during the commit.
#
# The options specified in the [defaults] section are always selected. The
# presence of a non-matching for_repos has no relevance. Note that you may
# still use a for_repos value to extract useful information (more on this
# later). Any user-defined groups without a for_repos, or which contains
# a matching for_repos, will be selected for potential use.
#
# The subset of user-defined groups identified by the repository are further
# refined based on the for_paths option. A group is selected if at least
# one path(*) in the commit matches the for_paths regular expression. Note
# that the paths are relative to the root of the repository and do not
# have a leading slash.
#
# (*) Actually, each path will select just one group. Thus, it is possible
# that one group will match against all paths, while another group matches
# none of the paths, even though its for_paths would have selected some of
# the paths in the commit.
#
# Groups are matched in no particular order. Do not depend upon their
# order within this configuration file. The values from [defaults] will
# be used if no group is matched or an option in a group does not override
# the corresponding value from [defaults].
#
# Generally, a commit email is generated for each group that has been
# selected. The script will try to minimize mails, so it may be possible
# that a single message will be generated to multiple recipients. In
# addition, it is possible for multiple messages per group to be generated,
# based on the various substitutions that are performed (see the following
# section).
#
#
# SUBSTITUTIONS
#
# The regular expressions can use the "named group" syntax to extract
# interesting pieces of the repository or commit path. These named values
# can then be substituted in the option values during mail generation.
#
# For example, let's say that you have a repository with a top-level
# directory named "clients", with several client projects underneath:
#
#   REPOS/
#     clients/
#       gsvn/
#       rapidsvn/
#       winsvn/
#
# The client name can be extracted with a regular expression like:
#
#   for_paths = clients/(?P&lt;client>[^/]*)($|/)
#
# The substitution is performed using Python's dict-based string
# interpolation syntax:
#
#   to_addr = commits@%(client)s.tigris.org
#
# The %(NAME)s syntax will substitute whatever value for NAME was captured
# in the for_repos and for_paths regular expressions. The set of names
# available is obtained from the following set of regular expressions:
#
#   [defaults].for_repos    (if present)
#   [GROUP].for_repos       (if present in the user-defined group "GROUP")
#   [GROUP].for_paths       (if present in the user-defined group "GROUP")
#
# The names from the regexes later in the list override the earlier names.
# If none of the groups match, but a for_paths is present in [defaults],
# then its extracted names will be available.
#
# Note that each unique set of names for substitution will generate an
# email. In the above example, if a commit modified files in all three
# client subdirectories, then an email will be sent to all three commits@
# mailing lists on tigris.org.
#
# The substitution variable "author" is provided by default, and is set
# to the author name passed to mailer.py for revprop changes or the
# author defined for a revision; if neither is available, then it is
# set to "no_author". Thus, you might define a line like:
#
#   from_addr = %(author)s@example.com
#
#
# SUMMARY
#
# While mailer.py will work to minimize the number of mail messages
# generated, a single commit can potentially generate a large number
# of variants of a commit message. The criteria for generating messages
# is based on:
#
#   groups selected by for_repos
#   groups selected by for_paths
#   unique sets of parameters extracted by the above regular expressions
#

[defaults]

# This is not passed to the shell, so do not use shell metacharacters.
# The command is split around whitespace, so if you want to include
# whitespace in the command, then ### something ###.
diff = /usr/bin/diff -u -L %(label_from)s -L %(label_to)s %(from)s %(to)s

# The default prefix for the Subject: header for commits.
#commit_subject_prefix = [commit] 

# The default prefix for the Subject: header for propchanges.
#propchange_subject_prefix = [propchange] 

# The default prefix for the Subject: header for locks.
#lock_subject_prefix = [lock] 

# The default prefix for the Subject: header for unlocks.
#unlock_subject_prefix = [unlock] 


# The default From: address for messages.  If the from_addr is not
# specified or it is specified but there is no text after the `=',
# then the revision's author is used as the from address.  If the
# revision author is not specified, such as when a commit is done
# without requiring authentication and authorization, then the string
# 'no_author' is used.  You can specify a default from_addr here and
# if you want to have a particular for_repos group use the author as
# the from address, you can use "from_addr =".
from_addr = admin@vm.exist-db.org

# The default To: addresses for message.  One or more addresses,
# separated by whitespace (no commas).
# NOTE: If you want to use a different character for separating the
#       addresses put it in front of the addresses included in square
#       brackets '[ ]'.
to_addr = vm-commit@vm.exist-db.org

# If this is set, then a Reply-To: will be inserted into the message.
reply_to =

# Specify which types of repository changes mailer.py will create
# diffs for. Valid options are any combination of
# 'add copy modify delete', or 'none' to never create diffs.
# If the generate_diffs option is empty, the selection is controlled
# by the deprecated options suppress_deletes and suppress_adds.
# Note that this only affects the display of diffs - all changes are
# mentioned in the summary of changed paths at the top of the message,
# regardless of this option's value.
# Meaning of the possible values:
# add:    generates diffs for all added paths
# copy:   generates diffs for all copied paths
#         which were not changed after copying
# modify: generates diffs for all modified paths, including paths that were
#         copied and modified afterwards (within the same commit)
# delete: generates diffs for all removed paths
generate_diffs = add copy modify

# Commit URL construction.  This adds a URL to the top of the message
# that can lead the reader to a Trac, ViewVC or other view of the
# commit as a whole.
#
# The available substitution variable is: rev
#commit_url = http://diffs.server.com/trac/software/changeset/%(rev)s
commit_url = https://vm.exist-db.org/websvn/listing.php?repname=test-repos&amp;rev=%(rev)

# Diff URL construction.  For the configured diff URL types, the diff
# section (which follows the message header) will include the URL
# relevant to the change type, even if actual diff generation for that
# change type is disabled (per the generate_diffs option).
#
# Available substitution variables are: path, base_path, rev, base_rev
#diff_add_url =
#diff_copy_url =
#diff_modify_url = http://diffs.server.com/?p1=%(base_path)s&amp;p2=%(path)s
#diff_delete_url =

# When set to "yes", the mailer will suppress the creation of a diff which
# deletes all the lines in the file. If this is set to anything else, or
# is simply commented out, then the diff will be inserted. Note that the
# deletion is always mentioned in the message header, regardless of this
# option's value.
### DEPRECATED (if generate_diffs is not empty, this option is ignored)
#suppress_deletes = yes

# When set to "yes", the mailer will suppress the creation of a diff which
# adds all the lines in the file. If this is set to anything else, or
# is simply commented out, then the diff will be inserted. Note that the
# addition is always mentioned in the message header, regardless of this
# option's value.
### DEPRECATED (if generate_diffs is not empty, this option is ignored)
#suppress_adds = yes

# A revision is reported on if any of its changed paths match the
# for_paths option.  If only some of the changed paths of a revision
# match, this variable controls the behaviour for the non-matching
# paths.  Possible values are:
#
#   yes:     (Default) Show in both summary and diffs.
#   summary: Show the changed paths in the summary, but omit the diffs.
#   no:      Show nothing more than a note saying "and changes in other areas"
#
show_nonmatching_paths = yes

# Subject line length limit.  The generated subject line will be truncated
# and terminated with "...", to remain within the specified maximum length.
# Set to 0 to turn off.
#truncate_subject = 200

# --------------------------------------------------------------------------

[maps]

#
# This section can be used define rewrite mappings for option values. It
# is typically used for computing from/to addresses, but can actually be
# used to remap values for any option in this file.
#
# The mappings are global for the entire configuration file. There is
# no group-specific mapping capability. For each mapping that you want
# to perform, you will provide the name of the option (e.g. from_addr)
# and a specification of how to perform those mappings. These declarations
# are made here in the [maps] section.
#
# When an option is accessed, the value is loaded from the configuration
# file and all %(NAME)s substitutions are performed. The resulting value
# is then passed through the map. If a map entry is not available for
# the value, then it will be used unchanged.
#
# NOTES: - Avoid using map substitution names which differ only in case.
#          Unexpected results may occur.
#        - A colon ':' is also considered as separator between option and
#          value (keep this in mind when trying to map a file path under
#          windows).
#
# The format to declare a map is:
#
#   option_name_to_remap = mapping_specification
#
# At the moment, there is only one type of mapping specification:
#
#   mapping_specification = '[' sectionname ']'
#
# This will use the given section to map values. The option names in
# the section are the input values, and the option values are the result.
#

#
# EXAMPLE:
#
# We have two projects using two repositories. The name of the repos
# does not easily map to their commit mailing lists, so we will use
# a mapping to go from a project name (extracted from the repository
# path) to their commit list. The committers also need a special
# mapping to derive their email address from their repository username.
#
# [projects]
# for_repos = .*/(?P&lt;project>.*)
# from_addr = %(author)s
# to_addr = %(project)s
#
# [maps]
# from_addr = [authors]
# to_addr = [mailing-lists]
#
# [authors]
# john = jconnor@example.com
# sarah = sconnor@example.com
#
# [mailing-lists]
# t600 = spottable-commits@example.com
# tx = hotness-commits@example.com
#

# --------------------------------------------------------------------------

#
# [example-group]
# # send notifications if any web pages are changed
# for_paths = .*\.html
# # set a custom prefix
# commit_subject_prefix = [commit]
# propchange_subject_prefix = [propchange]
# # override the default, sending these elsewhere
# to_addr = www-commits@example.com
# # use the revision author as the from address
# from_addr =
# # use a custom diff program for this group
# diff = /usr/bin/my-diff -u -L %(label_from)s -L %(label_to)s %(from)s %(to)s
#
# [another-example]
# # commits to personal repositories should go to that person
# for_repos = /home/(?P&lt;who>[^/]*)/repos
# to_addr = %(who)s@example.com
#
</programlisting>
            <para>Add a post-commit hook, so that an email is sent out to the vm-commit mailing
                list.</para>
            <synopsis>cp /var/local/svn/vm.exist-db.org/test-repos/hooks/post-commit.tmpl /var/local/svn/vm.exist-db.org/test-repos/hooks/post-commit</synopsis>
            <synopsis>vi /var/local/svn/vm.exist-db.org/test-repos/hooks/post-commit</synopsis>
            <synopsis>chmod ug+x /var/local/svn/vm.exist-db.org/test-repos/hooks/post-commit</synopsis>
            <para>Change the following line in <emphasis role="italic"
                    >/var/local/svn/vm.exist-db.org/test-repos/hooks/post-commit</emphasis>
                from:</para>
            <programlisting>"$REPOS"/hooks/mailer.py commit "$REPOS" $REV "$REPOS"/mailer.conf</programlisting>
            <para>to:</para>
            <programlisting>/usr/share/subversion/hook-scripts/mailer/mailer.py commit "$REPOS" $REV "$REPOS"/scripts/mailer.conf</programlisting>
            <para>Allow your group to write to the repository</para>
            <synopsis>chmod -R g+w /var/local/svn/vm.exist-db.org</synopsis>
            <synopsis>chown -R www-data:svngroup /var/local/svn/vm.exist-db.org</synopsis>
            <para>Create the initial import into the subversion repository.</para>
            <synopsis>mkdir /tmp/test-repos</synopsis>
            <synopsis>mkdir /tmp/test-repos/trunk</synopsis>
            <synopsis>mkdir /tmp/test-repos/tags</synopsis>
            <synopsis>mkdir /tmp/test-repos/branches</synopsis>
            <synopsis>svn import /tmp/test-repos file:///var/local/svn/vm.exist-db.org/test-repos -m "Initial Import"</synopsis>
            <para>Add subversion to /etc/apache2/sites-available/default-ssl with the members of the
                LDAP groups svn-update and dba to be able to commit to the repository and
                svn-readonly to to be able to read from the repository but not commit.</para>
            <programlisting language="xml"><![CDATA[<Location /svn>
   DAV svn
   SVNParentPath /var/local/svn/vm.exist-db.org
   SVNAutoversioning on
   SVNListParentPath on
   AuthBasicProvider ldap
   AuthType Basic
   AuthName "Subversion Authentication"
   AuthBasicProvider ldap
   AuthLDAPUrl ldap://127.0.0.1:389/ou=Users,dc=exist-db,dc=org?uid
   AuthLDAPGroupAttribute memberUid
   AuthLDAPGroupAttributeIsDN off
   <Limit GET HEAD OPTIONS CONNECT POST PROPFIND PUT DELETE PROPPATCH MKCOL COPY MOVE LOCK UNLOCK>
      Require ldap-group cn=dba,ou=Groups,dc=exist-db,dc=org
      Require ldap-attribute gidNumber=1
      Require ldap-group cn=svn-update,ou=Groups,dc=exist-db,dc=org
      Require ldap-attribute gidNumber=400
      Satisfy any
   </Limit>
   <Limit GET HEAD OPTIONS CONNECT POST PROPFIND>
      Require ldap-group cn=svn-readonly,ou=Groups,dc=exist-db,dc=org
      Require ldap-attribute gidNumber=500
      Satisfy any
   </Limit>
</Location>
]]></programlisting>
            <para>Subversion is now installed.  If you have multiple subversion repositories, then
                you might want to change SVNParentPath to SVNPath to the individual subversion
                repository.  Duplicate the above Location specification and set the Limit to
                different groups.</para>
            <synopsis>/etc/init.d/apache2 restart</synopsis>
        </section>
        <section id="sect3">
            <title>Installing WebSVN</title>
            <para>WebSVN offers a view onto your subversion repositories that's been designed to
                reflect the Subversion methodology. You can view the log of any file or directory
                and see a list of all the files changed, added or deleted in any given revision. You
                can also view the differences between two versions of a file so as to see exactly
                what was changed in a particular revision.</para>
            <synopsis>sudo apt-get install websvn enscript</synopsis>
            <para>Configure WebSVN:</para>
            <screenshot><graphic fileref="resources/stack/websvn-01.png"/></screenshot>
            <para>Select Apache configuration apache2</para>
            <screenshot><graphic fileref="resources/stack/websvn-02.png"/></screenshot>
            <para>Select the parent svn directory <emphasis role="italic"
                    >/var/local/svn/vm.exist-db.org</emphasis>.</para>
            <screenshot><graphic fileref="resources/stack/websvn-03.png"/></screenshot>
            <para>Clear the repository entry.</para>
            <screenshot><graphic fileref="resources/stack/websvn-04.png"/></screenshot>
            <para>Select Ok</para>
            <screenshot><graphic fileref="resources/stack/websvn-05.png"/></screenshot>
            <para>Edit /etc/apache2/sites-available/default-ssl and add the following:</para>
            <programlisting language="xml"><![CDATA[
Alias /websvn/ "/usr/share/websvn/"
<Directory "/usr/share/websvn/">
    Options Indexes MultiViews FollowSymLinks
    AllowOverride None
    AuthBasicProvider ldap 
    AuthType Basic 
    AuthName "LDAP Authorization Realm" 
    AuthBasicProvider ldap
    AuthLDAPUrl ldap://127.0.0.1:389/ou=Users,dc=exist-db,dc=org?uid
    AuthLDAPGroupAttribute memberUid
    AuthLDAPGroupAttributeIsDN off
    Require ldap-group cn=dba,ou=Groups,dc=exist-db,dc=org
    Require ldap-attribute gidNumber=1
    Require ldap-group cn=svn-update,ou=Groups,dc=exist-db,dc=org
    Require ldap-attribute gidNumber=400
    Require ldap-group cn=svn-readonly,ou=Groups,dc=exist-db,dc=org
    Require ldap-attribute gidNumber=500
    Satisfy any
</Directory>
]]></programlisting>
            <para>Restart the Apache2 server:</para>
            <synopsis>sudo /etc/init.d/apache2 restart</synopsis>
            <para>Browse the subversion repository through /websvn/</para>
            <screenshot><graphic fileref="resources/stack/websvn.png"/></screenshot>
        </section>
        <section>
            <title>Installing eXist</title>
            <para>These are the steps to install and configure eXist to use the LDAP server for user
                authentication.</para>
            <synopsis>sudo apt-get install openjdk-6-*</synopsis>
            <synopsis>sudo java -jar eXist-setup-[version]-revXXXXX.jar -p /usr/local/eXist</synopsis>
            <section>
                <title>Connect to the LDAP repository</title>
                <para/>
            </section>
            <section>
                <title>Edit the conf.xml file</title>
                <para/>
            </section>
            <section>
                <title>Configure Apache2 to map / in apache to eXist</title>
                <para/>
            </section>            
        </section>
        <section id="awstats">
            <title>Installing awstats</title>
            <para>AWStats is an open source Web analytics reporting tool, suitable for analyzing
                data from Internet services such as web, streaming media, mail and FTP servers.
                AWStats parses and analyzes server log files, producing HTML reports. Data is
                visually presented within reports by tables and bar graphs. Static reports can be
                created through a command line interface, and on-demand reporting is supported
                through a web browser CGI program.</para>
            <synopsis>sudo apt-get install awstats libnet-dns-perl libnet-ip-perl libgeo-ipfree-perl</synopsis>
            <para>Edit the /etc/awstats/awstats.conf</para>
            <para/>
        </section>
        <section id="backup">
            <title>Automated backup</title>
            <para>The automated backup process will run weekly during off hours.  It will back up
                all assets that are not part of a standard package shall be backed up into a single
                zip file.  That zip file will be accessible to all members of the LDAP groups dba
                and backup-access.  The access will be controlled through the backup webpage and the
                last five backups will be accessible.</para>
            <section>
                <title>Apache logs</title>
                <para/>
            </section>
            <section>
                <title>Subversion</title>
                <para/>
            </section>
            <section>
                <title>eXist</title>
                <para/>
            </section>
            <section>
                <title>Mailing list</title>
                <para/>
            </section>
            <section>
                <title>Backup webpage</title>
                <para/>
                <para>Edit /etc/apache2/sites-available/default-ssl and add the following to give
                    access to the members of the LDAP groups backup-access and dba:</para>
                <programlisting language="xml"><![CDATA[
Alias /backup/ "/usr/share/backup/"
<Directory "/usr/share/backup/">
    Options Indexes MultiViews FollowSymLinks
    AllowOverride None
    AuthBasicProvider ldap 
    AuthType Basic 
    AuthName "LDAP Authorization Realm" 
    AuthBasicProvider ldap
    AuthLDAPUrl ldap://127.0.0.1:389/ou=Users,dc=exist-db,dc=org?uid
    AuthLDAPGroupAttribute memberUid
    AuthLDAPGroupAttributeIsDN off
    Require ldap-group cn=dba,ou=Groups,dc=exist-db,dc=org
    Require ldap-attribute gidNumber=1
    Require ldap-group cn=backup-access,ou=Groups,dc=exist-db,dc=org
    Require ldap-attribute gidNumber=600
    Satisfy any
</Directory>
]]></programlisting>
                <para>Restart the Apache2 server:</para>
                <synopsis>sudo /etc/init.d/apache2 restart</synopsis>
            </section>
            
        </section>
        
        
        <section>
            <title>Assets</title>
            <para>The following are assets on the server.</para>
            <table frame="all">
                <title>Assets</title>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                    <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                    <thead>
                        <row>
                            <entry>Path</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>/etc/apache2/ssl/exist-db.org.crt</entry>
                            <entry>SSLCertificateFile</entry>
                        </row>
                        <row>
                            <entry>/etc/apache2/ssl/exist-db.key</entry>
                            <entry>SSLCertificateKeyFile</entry>
                        </row>
                        <row>
                            <entry>/etc/apache2/ssl/gd_bundle.crt</entry>
                            <entry>SSLCertificateChainFile</entry>
                        </row>
                        <row>
                            <entry>/etc/apache2/sites-available/default</entry>
                            <entry>Port 80 Apache2 VirtualHost configuration file</entry>
                        </row>
                        <row>
                            <entry>/etc/apache2/sites-available/default-ssl</entry>
                            <entry>Port 443 Apache2 VirtualHost configuration file</entry>
                        </row>
                        <row>
                            <entry>/var/local/svn/vm.exist-db.com/</entry>
                            <entry>Subversion repository directory</entry>
                        </row>
                        <row>
                            <entry>/etc/websvn/svn_deb_conf.inc</entry>
                            <entry>WebSVN configuration file</entry>
                        </row>
                        <row>
                            <entry>/var/lib/ldap-account-manager/config/lam.conf</entry>
                            <entry>ldap-account-manager configuration file</entry>
                        </row>
                        <row>
                            <entry>/usr/local/eXist/</entry>
                            <entry>The eXist server</entry>
                        </row>
                        <row>
                            <entry>/etc/awstats/awstats.conf</entry>
                            <entry>The awstats configuration file.</entry>
                        </row>
                        <row>
                            <entry>/usr/local/eXist/bin/functions.d/eXistsetup.sh</entry>
                            <entry/>
                        </row>
                        <row>
                            <entry>/usr/local/eXist/conf.xml</entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            
        </section>
        
    </chapter>
</book>

<div xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xf="http://www.w3.org/2002/xforms" class="location" tab-id="location"><div class="block-form">
        <!-- Holding Simple is a set of internally defined elements and corresponds roughly to summary holdings information. If more granularity is required, Holding External may be used in lieu of Holding Simple with elements from an external schema. Holding Simple consists of a single subelement, Copy Information, which has several subelements. Holding Simple is not repeatable; if additional holdings statements are needed for the resource, repeat Location with appropriate subelements. -->
    <!-- Use of at least one location element with the subelement url is required by these guidelines. It is required that one and only one location/url must include the usage attribute value "primary display". Many aggregators may include only one URL in their brief display. Use of usage=”primary display” allows aggregators to easily identify which URL to display for their users. If a record describes multiple items (a multi-volume set, for example), these guidelines strongly recommend identifying a primary entry point for these. These guidelines also recommend that the "access" attribute with the appropriate value also be used. Best practice is that the "primary display" URL is a link to the resource with its contextual material (for example metadata, navigation to the collection homepage). If the primary link to a resource is to a stand alone version of the resource (such as a JPEG image only), an end user will have no context except for the metadata on the service provider’s site. At minimum, the URL should point to a page that contains the resource and a navigation bar that allows user to reach the collection homepage. It is highly desirable that this page also include the descriptive metadata for the resource. --><fieldset><legend>Locations</legend><xf:hint><p>
            Location identifies the institution or repository holding the resource, or a remote location in the form of a URL where the resource is available. 
            In the case of a physical resource, information is noted about what the institution identified in Physical Location holds of the resource in question and its specific location within the institution.
            </p><p>
            Holdings information consists of copy-specific information about the resource, information about the specific location within an institution, version information, and other information that is peculiar to the institution.
        </p></xf:hint>
        <!--location repeat begins--><xf:repeat nodeset="instance('save-data')/mods:location" id="location-repeat"><div class="block-form">
            <!--location input begins-->
            <!--no input-->
            <!--location input ends-->

            <!--physicalLocation begins-->
            <!--DLF/Aquifer: OPTIONAL-->
            <!--Cluster: include--><xf:group id="fieldset-physicalLocation" ref="self::node()[mods:physicalLocation]"><fieldset><legend><span class="legend">Physical Location</span></legend><xf:hint><p>
                        Record in Physical Location the institution or repository that holds the resource or where it is available. 
                        Physical Location may be expressed as text and/or as a code. 
                        If expressed as code, use the Authority field to designate the source of the code.
                            </p><p>                        
                        Physical Location typically includes specific information used to locate a resource within a collection, such as the name or code of an institution/repository, and perhaps subcollection. 
                        A shelf number is given in Shelf Locator.
                    </p></xf:hint>
                <!--physicalLocation repeat begins--><xf:repeat nodeset="./mods:physicalLocation" id="physical-location-repeat"><div class="block-form">
                        <!--physicalLocation input begins-->
                            <!--DLF/Aquifer: RECOMMENDED IF APPLICABLE-->
                            <!--Cluster: include--><xf:select1 ref="./@authority" selection="open"><xf:label>Authority:</xf:label><xf:hint><p>
                                    The name of the authoritative list for a controlled value is recorded here.
                                </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='record-content-source-authority-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    
                            <!--DLF/Aquifer: N/A-->
                            <!--Cluster: omit--><xf:input ref="./@type" class="text_50"><xf:label>Type:</xf:label><xf:hint><p>
                                    Type Identifies the type of location recorded.
                                    Use Type to indicate different kinds of locations if more specificity is needed, e.g. current, discovery, former, creation.
                                </p></xf:hint></xf:input>
                                    
                        <!--DLF/Aquifer: RECOMMENDED IF APPLICABLE-->
                            <!--Cluster: omit--><xf:input ref="./@xlink" class="text_50"><xf:label>XLink: </xf:label><xf:hint><p>
                                                The XLink field is used to reference an external resource, such as a second metadata record, a Related Item or a Table Of Contents.
                                    Here, XLink may be used to link to additional information about the resource recorded in Physical Location, e.g. the institution's website.
                                </p></xf:hint></xf:input>
                                    
                            <!--DLF/Aquifer: N/A-->
                        <!--Cluster: omit--><xf:select1 ref="./@lang"><xf:label>Language:</xf:label><xf:hint><p>
                                    The language used within Title Information is specified here, if this language is different from the language noted in Language of Resource. 
                                    The most common languages have been moved to the top of the list.
                                </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-3-type-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    
                        <!--DLF/Aquifer: NOT RECOMMENDED-->
                        <!--Cluster: omit--><xf:select1 ref="./@xml:lang"><xf:label>xml:lang:</xf:label><xf:hint><p>
                                                This field is used to specify the language used within an element, using specifications in RFC 3066. 
                                RFC 3066 uses the two-character ISO 639-1 codes along with three-character ISO 639-2 codes for those languages not given in 639-1.
                                        </p><p>
                                                The recommendation is not to use xml:lang, but to use the above Language field.
                            </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-2-type-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    
                        <!--DLF/Aquifer: N/A-->
                        <!--Cluster: omit--><xf:select1 ref="./@script"><xf:label>Script:</xf:label><xf:hint><p>
                                                This field specifies the script used within individual elements. 
                                    The use of Latin script is not noted.
                                    "Chinese" is "Han (Simplified Variant)" or "Han (Traditional Variant)". 
                                    If the two variants are not considered, it is "Han (Hanzi, Kanji, Hanja)", also used for Japanese, Korean and Vietnamese written in Chinese. 
                                </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='script-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    
                        <!--DLF/Aquifer: N/A-->
                        <!--Cluster: omit--><xf:select1 ref="./@transliteration" selection="open"><xf:label>Transliteration:</xf:label><xf:hint><p>
                                                This field specifies the transliteration (transcription, romanisation) scheme used within Title Information. 
                                    When specificing the transliteration used, also specify the language employed. 
                                    There is at present no standard list of transliteration schemes available.
                                    If you wish to employ a transliteration on the scheme, please contact <!--contact -->.
                                    In general, the Library of Congress transliteration schemes (<!-- NB -->) should be used.
                                    If you follow a transliteration scheme authorised by <!--NB-->, choose <!--NB--> as the value and note the language from which the transliteration is made.
                                    The following transliteration schemes are authorised by <!--NB-->:
                                    Chinese: pinyin
                                    Japanese: (modified) Hepburn
                                    Korean: <!--NB-->
                                    Russian: <!--NB-->
                                    Sanskrit: <!--NB-->
                                    If you employ a different, but recognised, transliteration scheme, you may have it added to the list.                        
                                </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='transliteration-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    
                        <!--DLF/Aquifer: OPTIONAL-->
                        <!--Cluster: omit--><xf:input ref="./@displayLabel" class="text_50"><xf:label>Display Label: </xf:label><xf:hint><p>
                                    Display Label provides additional text associated with the physical location if needed for display purposes.
                                </p></xf:hint></xf:input><xf:input ref="." class="text_50"><xf:label>Physical Location: </xf:label><xf:hint><p>
                                    Record in Physical Location the institution or repository that holds the resource or where it is available. 
                                    Physical Location may be expressed as text and/or as a code. 
                                    If expressed as code, use the Authority field to designate the source of the code.
                                        </p><p>                        
                                    Physical Location typically includes specific information used to locate a resource within a collection, such as the name or code of an institution/repository, and perhaps subcollection. 
                                    A shelf number is given in Shelf Locator.
                                </p></xf:hint></xf:input>
                        <!--physicalLocation input ends-->
                        <!--physicalLocation delete begins--></div><xf:trigger ref="self::node()[count(../mods:physicalLocation) &gt; 1]" class="delete-button"><xf:label>Delete This Physical Location</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:location/mods:physicalLocation" at="index('physical-location-repeat')"/></xf:trigger>
                    <!--physicalLocation delete ends--><div class="hr"/></xf:repeat>
                <!--physicalLocation repeat ends-->
                <!--physicalLocation add begins--><xf:trigger ref="self::node()[count(mods:physicalLocation) &gt; 0]" class="add-button"><xf:label>Add Physical Location</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:physicalLocation" at="index('physical-location-repeat')" position="after" origin="instance('insert-templates')/mods:location/mods:physicalLocation"/><xf:setvalue ref="instance('save-data')/mods:physicalLocation[last()]" value="''"/></xf:action></xf:trigger>
                <!--physicalLocation add ends--></fieldset></xf:group>
                        <!--physicalLocation ends-->
                
            <!--shelfLocator begins-->
            <!--DLF/Aquifer: N/A-->
            <!--Cluster: include--><xf:group id="fieldset-shelfLocator" ref="self::node()[mods:shelfLocator]"><fieldset><legend><span class="legend">Shelf Locator</span></legend><xf:hint><p>
                        Shelf Locator records a shelfmark or other shelving designation that indicates the location identifier for a copy.
                        If more detailed holdings information is given at the item level, use Shelf Locator under Holding Simple.                        
                    </p></xf:hint>
                <!--shelfLocator repeat begins--><xf:repeat nodeset="./mods:shelfLocator" id="shelf-locator-repeat"><div class="block-form">
                        <!--shelfLocator input begins--><xf:input ref="." class="text_50"><xf:label>Shelf Locator: </xf:label><xf:hint><p>
                                    Shelf Locator records a shelfmark or other shelving designation that indicates the location identifier for a copy.
                                </p></xf:hint></xf:input>
                        <!--shelfLocator input ends-->
                        <!--shelfLocator delete begins--></div><xf:trigger ref="self::node()[count(../mods:shelfLocator) &gt; 1]" class="delete-button"><xf:label>Delete This Shelf Locator</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:location/mods:shelfLocator" at="index('shelf-locator-repeat')"/></xf:trigger>
                    <!--shelfLocator delete ends--><div class="hr"/></xf:repeat>
                <!--title repeat ends-->
                <!--shelfLocator add begins--><xf:trigger ref="self::node()[count(mods:shelfLocator) &gt; 0]" class="add-button"><xf:label>Add Shelf Locator</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:shelfLocator" at="index('shelf-locator-repeat')" position="after" origin="instance('insert-templates')/mods:location/mods:shelfLocator"/><xf:setvalue ref="instance('save-data')/mods:shelfLocator[last()]" value="''"/></xf:action></xf:trigger>
                <!--shelfLocator add ends--></fieldset></xf:group>
                        <!--shelfLocator ends-->
                
            <!--url begins-->
            <!--DLF/Aquifer: REQUIRED-->
            <!--Cluster: include--><xf:group id="fieldset-url" ref="self::node()[mods:url]"><fieldset><legend><span class="legend">URL</span></legend><xf:hint><p>
                        In URL, record the Uniform Resource Locator (URL) of the networked location of a resource.
                        It is recommended that all URLs used with the Location element be persistent.
                    </p></xf:hint>
                <!--url repeat begins--><xf:repeat nodeset="./mods:url" id="location-url-repeat"><div class="block-form">
                        <!--url input begins-->
                        <!--DLF/Aquifer: N/A-->
                        <!--Cluster: include--><xf:input ref="./@dateLastAccessed" class="text_50"><xf:label>Date Last Accessed: </xf:label><xf:hint><p>
                                                This field is intended to express the date that a digital resource has last been accessed remotely. 
                                    This may be useful to a user trying to access the site because of the volatility of Web content. 
                                    A structured date of the form "2010-08-12" is recommended.                                    
                                </p></xf:hint></xf:input>
                                    
                        <!--DLF/Aquifer: RECOMMENDED IF APPLICABLE-->
                        <!--Cluster: include--><xf:select1 ref="./@access" selection="open"><xf:label>Access:</xf:label><xf:hint><p>
                                    Access indicates the type of resource that the user or aggregator will access when following the URL link.
                                    It has the values: preview, raw object, and object in context.
                                    The value "preview" indicates a link to a thumbnail or snippet of text.
                                    The value "raw object" indicates a direct link to the object described (e.g., a jpg or pdf document). 
                                    Used only when the object is represented by a single file.
                                    The value "object in context" indicates a link to the object within the context of its environment (with associated metadata, navigation, etc.)
                                    If at all possible, refer in URL to an object in context, i.e. an object in the context of a web page, with access to metadata and possibilities for navigation.
                                    <!--It is particularly useful to provide a flag in the context of OAI service providers harvesting metadata.--></p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='url-access-type-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    
                        <!--DLF/Aquifer: REQUIRED-->
                        <!--Cluster: include--><xf:select1 ref="./@usage"><xf:label>Usage:</xf:label><xf:hint><p>
                                                This field indicates how the object represented by the link will be used. 
                                    There is only one possible value, "primary display", which indicates that the link is the most appropriate to display for end users.
                                </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='url-usage-type-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    
                        <!--DLF/Aquifer: OPTIONAL-->
                        <!--Cluster: omit--><xf:input ref="./@displayLabel" class="text_50"><xf:label>Display Label: </xf:label><xf:hint><p>
                                    Display Label provides additional text associated with the URL if needed for display purposes.
                                    Use Display Label to supply additional explanatory information related to the URL. 
                                    Include the preferred text and capitalization, but do not include delimiters such as colons.
                                </p></xf:hint></xf:input>
                                    
                        <!--DLF/Aquifer: OPTIONAL-->
                        <!--Cluster: include--><xf:textarea ref="./@note" class="textarea" mediatype="dojo"><xf:label>Note: </xf:label><xf:hint><p>
                                    Note includes notes that are associated with the link that is included as the value of the URL element.
                                </p></xf:hint></xf:textarea><div class="hr"/><xf:input ref="." class="text_50"><xf:label>URL: </xf:label><xf:hint><p>
                                    In URL, record the Uniform Resource Locator (URL) of the networked location of a resource.
                                    It is recommended that all URLs used with the Location element be persistent.
                                </p></xf:hint></xf:input>
                        <!--url input ends-->
                        <!--url delete begins--></div><xf:trigger ref="self::node()[count(../mods:url) &gt; 1]" class="delete-button"><xf:label>Delete This URL</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:location/mods:url" at="index('location-url-repeat')"/></xf:trigger>
                    <!--url delete ends--><div class="hr"/></xf:repeat>
                <!--url repeat ends-->
                <!--url add begins--><xf:trigger ref="self::node()[count(mods:url) &gt; 0]" class="add-button"><xf:label>Add URL</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:url" at="index('location-url-repeat')" position="after" origin="instance('insert-templates')/mods:location/mods:url"/><xf:setvalue ref="instance('save-data')/mods:url[last()]" value="''"/></xf:action></xf:trigger>
                <!--url add ends--></fieldset></xf:group>
                        <!--url ends-->
                
            <!--location/holdingSimple begins-->
            <!--DLF/Aquifer: N/A-->
            <!--Cluster: hide--><xf:group id="fieldset-holdingSimple" ref="self::node()[mods:holdingSimple]"><fieldset><legend>Holdings Simple</legend><xf:hint><p>
                        General information about what the institution identified in Physical Location holds of the resource and its specific location within the institution.  
                        Holdings information consists of copy-specific information about the resource, information about the specific location within an institution, version information, and other information that is peculiar to the institution.  
                        Holding Simple consists of a single subelement, Copy Information which has several subelements. 
                        Holding Simple is not repeatable; if additional holdings statements are needed for the resource, repeat Location with appropriate subelements.
                        If more granularity is required, Holding External may be used in lieu of Holding Simple with elements from an external schema.                        
                        </p></xf:hint>
                <!--location/holdingSimple repeat begins-->
                    <!-- NB: repeat not used--><xf:repeat nodeset="./mods:holdingSimple" id="location-holding-simple-repeat">
                    <!--location/holdingSimple input begins-->
                    <!--no attributes-->
                    <!--location/holdingSimple input ends-->
                    <!--location/copyInformation begins--><fieldset><legend>Copy Information</legend><xf:hint><p>
                                Information about a specific tangible instance of a bibliographic resource or set which comprises one or more pieces via indication of sublocation and/or locator.
                            </p></xf:hint>
                        <!--location/copyInformation repeat begins--><xf:repeat nodeset="./mods:copyInformation" id="location-copyInformation-repeat">
                            <!--location/copyInformation input begins-->
                            <!--no attributes-->
                            <!--no input-->
                            <!--location/form begins--><fieldset><legend>Form</legend><xf:hint><p>
                                        Form is a designation of a particular physical presentation of a resource.
                                    </p></xf:hint>
                                <!--location/form repeat begins-->
                                    <!-- NB: repeat is not used --><xf:repeat nodeset="./mods:form" id="location-form-repeat">
                                    <!--location/form input begins--><xf:select1 ref="./@authority"><xf:label>Authority:</xf:label><xf:hint><p>
                                                The name of the authoritative list for a controlled value is recorded here.
                                            </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='genre-authority-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1><xf:select1 ref=".[@authority='marcgt']"><xf:label>Form:</xf:label><xf:hint><p>
                                                Form is a designation of a particular physical presentation of a resource. 
                                                This is equivalent to Form under Physical Description. 
                                                Form may be included under Copy Information when the record refers to multiple forms and there is different detailed holdings information associated with each form. 
                                                Otherwise, use Form under Physical Description.
                                                Here                                                
                                            </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='genre-marcgt-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1><xf:select1 ref=".[@authority='marcsmd']"><xf:label>Form:</xf:label><xf:hint><p>
                                                Form is a designation of a particular physical presentation of a resource. 
                                                This is equivalent to Form under Physical Description. 
                                                Form may be included under Copy Information when the record refers to multiple forms and there is different detailed holdings information associated with each form. 
                                                Otherwise, use Form under Physical Description. 
                                            </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='genre-marcsmd-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                        <!--NB: make other code tables--><xf:select1 ref=".[not(@authority='marcgt') and not(@authority='marcsmd')]" selection="open"><xf:label>Form:</xf:label><xf:hint><p>
                                                Form is a designation of a particular physical presentation of a resource. 
                                                This is equivalent to Form under Physical Description. 
                                                Form may be included under Copy Information when the record refers to multiple forms and there is different detailed holdings information associated with each form. 
                                                Otherwise, use Form under Physical Description. 
                                            </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='genre-marcgt-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>                                    <!--location/form input ends-->
                                                
                                    <!--location/form delete begins-->
                                        <!-- <xf:trigger ref="self::node()[count(../mods:form) > 1]" class="delete-button"> <xf:label>Delete This Form</xf:label> <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:location/mods:name/mods:form" at="index('location-form-repeat')"/> </xf:trigger> -->
                                    <!--location/form delete ends--><div class="hr"/></xf:repeat>
                                <!--location/form repeat ends-->
                                <!--location/form add begins-->
                                    <!-- <xf:trigger ref="self::node()[count(mods:form) > 0]" class="add-button"> <xf:label>Add Form</xf:label> <xf:action ev:event="DOMActivate"> <xf:insert nodeset="mods:form" at="index('location-form-repeat')" position="after" origin="instance('insert-templates')/mods:form"/> <xf:setvalue ref="instance('save-data')/mods:form[last()]" value="''"/> </xf:action> </xf:trigger> -->
                                <!--location/form add ends--></fieldset>
                            <!--location/form ends-->
                            <!--location/sublocation begins--><fieldset><legend>Sublocation</legend><xf:hint><p>
                                        Department, division or section of an institution holding a copy of the resource.
                                        Sublocation may be repeated for multiple equivalent items in different sublocations within the institution named in Physical Location.
                                    </p></xf:hint>
                                <!--location/sublocation repeat begins--><xf:repeat nodeset="./mods:sublocation " id="location-sublocation-repeat">
                                    <!--location/sublocation input begins--><xf:input ref="." class="text_50"><xf:label>Sublocation:</xf:label><xf:hint><p>
                                                Department, division or section of an institution holding a copy of the resource.
                                            </p></xf:hint></xf:input>
                                    <!--location/sublocation input ends-->
                                                
                                    <!--location/sublocation delete begins--><xf:trigger ref="self::node()[count(../mods:sublocation) &gt; 1]" class="delete-button"><xf:label>Delete This Sublocation</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:location/mods:holdingSimple/mods:copyInformation/mods:sublocation" at="index('location-sublocation-repeat')"/></xf:trigger>
                                    <!--location/sublocation delete ends--><div class="hr"/></xf:repeat>
                                <!--location/sublocation repeat ends-->
                                <!--location/sublocation add begins--><xf:trigger ref="self::node()[count(mods:sublocation) &gt; 0]" class="add-button"><xf:label>Add Sublocation</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:sublocation" at="index('location-sublocation-repeat')" position="after" origin="instance('insert-templates')/mods:sublocation"/><xf:setvalue ref="instance('save-data')/mods:sublocation[last()]" value="''"/></xf:action></xf:trigger>
                                <!--location/sublocation add ends--></fieldset>
                            <!--location/sublocation ends-->
                            <!--location/shelfLocator begins--><fieldset><legend>Shelf Locator</legend><xf:hint><p>
                                        Shelfmark or other shelving designation that indicates the location identifier for a copy.
                                        Shelf Locator may be given at the bibliographic description level under Location (i.e. Shelf Locator of the entire resource) or at the item level under Holding Simple (when Shelf Locator may vary by each physical piece).
                                    </p></xf:hint>
                                <!--location/shelfLocator repeat begins--><xf:repeat nodeset="./mods:shelfLocator " id="location-shelfLocator-repeat">
                                    <!--location/shelfLocator input begins--><xf:input ref="." class="text_50"><xf:label>Shelf Locator:</xf:label><xf:hint><p>
                                                Shelfmark or other shelving designation that indicates the location identifier for a copy.
                                            </p></xf:hint></xf:input>
                                    <!--location/shelfLocator input ends-->
                                                
                                    <!--location/shelfLocator delete begins--><xf:trigger ref="self::node()[count(../mods:shelfLocator) &gt; 1]" class="delete-button"><xf:label>Delete This Shelf Locator</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:location/mods:holdingSimple/mods:copyInformation/mods:shelfLocator" at="index('location-shelfLocator-repeat')"/></xf:trigger>
                                    <!--location/shelfLocator delete ends--><div class="hr"/></xf:repeat>
                                <!--location/shelfLocator repeat ends-->
                                <!--location/shelfLocator add begins--><xf:trigger ref="self::node()[count(mods:shelfLocator) &gt; 0]" class="add-button"><xf:label>Add Shelf Locator</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:shelfLocator" at="index('location-shelfLocator-repeat')" position="after" origin="instance('insert-templates')/mods:shelfLocator"/><xf:setvalue ref="instance('save-data')/mods:shelfLocator[last()]" value="''"/></xf:action></xf:trigger>
                                <!--location/shelfLocator add ends--></fieldset>
                            <!--location/shelfLocator ends-->
                            <!--location/electronicLocator begins--><fieldset><legend>Electronic Locator</legend><xf:hint><p>
                                        Uniform Resource Location (URL) of the resource.
                                    </p></xf:hint>
                                <!--location/electronicLocator repeat begins--><xf:repeat nodeset="./mods:electronicLocator " id="location-electronicLocator-repeat">
                                    <!--location/electronicLocator input begins--><xf:input ref="." class="text_50"><xf:label>Electronic Locator:</xf:label><xf:hint><p>
                                                Uniform Resource Location (URL) of the resource.
                                            </p></xf:hint></xf:input>
                                    <!--location/electronicLocator input ends-->
                                                
                                    <!--location/electronicLocator delete begins--><xf:trigger ref="self::node()[count(../mods:electronicLocator) &gt; 1]" class="delete-button"><xf:label>Delete This Electronic Locator</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:location/mods:holdingSimple/mods:copyInformation/mods:electronicLocator" at="index('location-electronicLocator-repeat')"/></xf:trigger>
                                    <!--location/electronicLocator delete ends--><div class="hr"/></xf:repeat>
                                <!--location/electronicLocator repeat ends-->
                                <!--location/electronicLocator add begins--><xf:trigger ref="self::node()[count(mods:electronicLocator) &gt; 0]" class="add-button"><xf:label>Add Electronic Locator</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:electronicLocator" at="index('location-electronicLocator-repeat')" position="after" origin="instance('insert-templates')/mods:electronicLocator"/><xf:setvalue ref="instance('save-data')/mods:electronicLocator[last()]" value="''"/></xf:action></xf:trigger>
                                <!--location/electronicLocator add ends--></fieldset>
                            <!--location/electronicLocator ends-->
                            <!--location/note begins--><fieldset><legend>Note</legend><xf:hint><p>
                                        Note relating to a specific copy of a document.
                                        Use for notes relating to the specific copy information of a resource that do not fit in one of the other available subelements.
                                        A link may be supplied in lieu of or in addition to the content.
                                        Each note should be entered in a separate Note.
                                    </p></xf:hint>
                                <!--location/note repeat begins--><xf:repeat nodeset="./mods:note " id="location-note-repeat">
                                    <!--location/note input begins-->
                                        <!-- Cluster: omit --><xf:input ref="./@type" class="text_50"><xf:label>Type:</xf:label><xf:hint><p> This field is not controlled by a list and thus is open-ended. </p></xf:hint></xf:input>
                                                
                                        <!-- Cluster: omit --><xf:input ref="./@displayLabel" class="text_50"><xf:label>Display Label:</xf:label><xf:hint><p>
                                                Indicates that the note text is for display purposes.
                                                Use when a particular label for display is preferred to aid the user in understanding the note.
                                            </p></xf:hint></xf:input><xf:textarea ref="." class="textarea" mediatype="dojo"><xf:label>Note:</xf:label><xf:hint><p>
                                                Note relating to a specific copy of a document.
                                            </p></xf:hint></xf:textarea>
                                    <!--location/note input ends-->
                                                
                                    <!--location/note delete begins--><xf:trigger ref="self::node()[count(../mods:note) &gt; 1]" class="delete-button"><xf:label>Delete This Note</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:location/mods:holdingSimple/mods:copyInformation/mods:note" at="index('location-note-repeat')"/></xf:trigger>
                                    <!--location/note delete ends--><div class="hr"/></xf:repeat>
                                <!--location/note repeat ends-->
                                <!--location/note add begins--><xf:trigger ref="self::node()[count(mods:note) &gt; 0]" class="add-button"><xf:label>Add Note</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:note" at="index('location-note-repeat')" position="after" origin="instance('insert-templates')/mods:note"/><xf:setvalue ref="instance('save-data')/mods:note[last()]" value="''"/></xf:action></xf:trigger>
                                <!--location/note add ends--></fieldset>
                            <!--location/note ends-->
                            <!--location/enumerationAndChronology begins--><fieldset><legend>Enumeration And Chronology</legend><xf:hint><p>
                                        Alpha-numeric identification, such as a volume or issue, and an indication of the date of publication or date of issue of a component of a multi-part resource, distinguishing it from other components of the same resource.
                                        Enumeration And Chronology is an unparsed string that comprises a summary holdings statement. 
                                        If more granularity is needed, a parsed statement using an external schema may be used within Holding External.                                        
                                    </p></xf:hint>
                                <!--location/enumerationAndChronology repeat begins--><xf:repeat nodeset="./mods:enumerationAndChronology " id="location-enumerationAndChronology-repeat">
                                    <!--location/enumerationAndChronology input begins--><xf:select1 ref="./@unitType"><xf:label>Unit Type:</xf:label><xf:hint><p>
                                                The category of bibliographic entity for which Enumeration And Chronology is given, i.e. basic bibliographic unit, supplement, or index.
                                            </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='location-unittype-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1><xf:textarea ref="." class="textarea" mediatype="dojo"><xf:label>Enumeration And Chronology:</xf:label><xf:hint><p> Alpha-numeric identification, such as a volume or issue, and an indication of the date of publication or date
                                            of issue of a component of a multi-part resource, distinguishing it from other components of the same resource.
                                        </p></xf:hint></xf:textarea>
                                    <!--location/enumerationAndChronology input ends-->
                                                
                                    <!--location/enumerationAndChronology delete begins--><xf:trigger ref="self::node()[count(../mods:enumerationAndChronology) &gt; 1]" class="delete-button"><xf:label>Delete This Enumeration And Chronology</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:location/mods:holdingSimple/mods:copyInformation/mods:enumerationAndChronology" at="index('location-enumerationAndChronology-repeat')"/></xf:trigger>
                                    <!--location/enumerationAndChronology delete ends--><div class="hr"/></xf:repeat>
                                <!--location/enumerationAndChronology repeat ends-->
                                <!--location/enumerationAndChronology add begins--><xf:trigger ref="self::node()[count(mods:enumerationAndChronology) &gt; 0]" class="add-button"><xf:label>Add Enumeration And Chronology</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:enumerationAndChronology" at="index('location-enumerationAndChronology-repeat')" position="after" origin="instance('insert-templates')/mods:enumerationAndChronology"/><xf:setvalue ref="instance('save-data')/mods:enumerationAndChronology[last()]" value="''"/></xf:action></xf:trigger>
                                <!--location/enumerationAndChronology add ends--></fieldset>
                            <!--location/enumerationAndChronology ends-->
                            <!--location/copyInformation input ends-->
                                        
                            <!--location/copyInformation delete begins--><xf:trigger ref="self::node()[count(../mods:copyInformation) &gt; 1]" class="delete-button"><xf:label>Delete This Copy Information</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:location/mods:holdingSimple/mods:copyInformation" at="index('location-copyInformation-repeat')"/></xf:trigger>
                            <!--location/copyInformation delete ends--><div class="hr"/></xf:repeat>
                        <!--location/copyInformation repeat ends-->
                        <!--location/copyInformation add begins--><xf:trigger ref="self::node()[count(mods:copyInformation) &gt; 0]" class="add-button"><xf:label>Add Copy Information</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:copyInformation" at="index('location-copyInformation-repeat')" position="after" origin="instance('insert-templates')/mods:copyInformation"/><xf:setvalue ref="instance('save-data')/mods:copyInformation[last()]" value="''"/></xf:action></xf:trigger>
                        <!--location/copyInformation add ends--></fieldset>
                    <!--location/copyInformation ends-->
                    <!--location/holdingSimple delete begins-->
                        <!-- NB: not used
                            <xf:trigger ref="self::node()[count(../mods:holdingSimple) > 1]" class="delete-button">
                            <xf:label>Delete This Holding Simple</xf:label>
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:location//mods:holdingSimple" at="index('location-holding-simple-repeat')"/>
                        </xf:trigger>
                        -->
                    <!--location/holdingSimple delete ends--><div class="hr"/></xf:repeat>
                <!--location/holdingSimple repeat ends-->
                <!--location/holdingSimple add begins-->
                    <!-- NB: not used
                        <xf:trigger ref="self::node()[count(mods:holdingSimple) > 0]" class="add-button">
                        <xf:label>Add Holding Simple</xf:label>
                        <xf:action ev:event="DOMActivate">
                            <xf:insert nodeset="mods:holdingSimple" at="index('location-holding-simple-repeat')" position="after" origin="instance('insert-templates')/mods:holdingSimple"/>
                            <xf:setvalue ref="instance('save-data')/mods:holdingSimple[last()]" value="''"/>
                        </xf:action>
                    </xf:trigger>
                    -->
                <!--location/holdingSimple add ends--></fieldset></xf:group>
                        <!--location/holdingSimple ends-->
            <!--holdingExternal begins-->
            <!--Cluster: omit--><xf:group id="fieldset-holdingExternal" ref="self::node()[mods:holdingExternal]"><fieldset><legend><span class="legend">Holding External</span></legend><xf:hint><p> Holdings information that uses a schema defined externally to MODS. Holding External may include more detailed holdings information
                    than that accommodated by the MODS schema. Holding External may include more detailed holdings information than that accommodated by the
                    MODS schema. An example is ISO 20775 and its accompanying schema. </p></xf:hint>
                <!--holdingExternal repeat begins--><xf:repeat nodeset="./mods:holdingExternal" id="holding-external-repeat"><div class="block-form">
                        <!--holdingExternal input begins--><xf:textarea ref="." class="textarea" mediatype="dojo"><xf:hint><p> Holdings information that uses a schema defined externally to MODS. Holding External may include more detailed holdings
                                information than that accommodated by the MODS schema. Holding External may include more detailed holdings information than that
                                accommodated by the MODS schema. An example is ISO 20775 and its accompanying schema. </p></xf:hint></xf:textarea>
                        <!--holdingExternal input ends-->
                                    
                        <!--holdingExternal delete begins--></div><xf:trigger ref="self::node()[count(../mods:holdingExternal) &gt; 1]" class="delete-button"><xf:label>Delete This Holding External</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:location/mods:holdingExternal" at="index('holding-external-repeat')"/></xf:trigger>
                    <!--holdingExternal delete ends--><div class="hr"/></xf:repeat>
                <!--holdingExternal repeat ends-->
                <!--holdingExternal add begins--><xf:trigger ref="self::node()[count(mods:holdingExternal) &gt; 0]" class="add-button"><xf:label>Add Holding External</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:holdingExternal" at="index('holding-external-repeat')" position="after" origin="instance('insert-templates')/mods:location/mods:holdingExternal"/><xf:setvalue ref="instance('save-data')/mods:holdingExternal[last()]" value="''"/></xf:action></xf:trigger>
                <!--holdingExternal add ends--></fieldset></xf:group>
                        <!--holdingExternal ends-->
                    
            <!--location delete begins--><xf:trigger ref="self::node()[count(../mods:location) &gt; 1]" class="delete-button"><xf:label>Delete This Location</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:location" at="index('location-repeat')"/></xf:trigger>
            <!--location delete ends--><div class="hr"/></div></xf:repeat>
        <!--location repeat ends-->
        <!--location add begins--><xf:trigger ref="self::node()[count(mods:location) &gt; 0]" class="add-button"><xf:label>Add Location</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:location" at="index('location-repeat')" position="after" origin="instance('insert-templates')/mods:location"/><xf:setvalue ref="instance('save-data')/mods:location[last()]" value="''"/></xf:action></xf:trigger>
        <!--location add ends--></fieldset></div></div>
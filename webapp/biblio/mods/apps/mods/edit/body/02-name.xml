<div xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xf="http://www.w3.org/2002/xforms" class="name" tab-id="name"><div class="block-form"><xf:group appearance="full">
            <!-- The DLF/Aquifer Implementation Guidelines for Shareable MODS Records requires the use of at least one name element to describe the creator of the intellectual content of the resource, if available. The guidelines recommend the use of the type attribute with all name elements whenever possible for greater control and interoperability. In addition, they require the use of namePart as a subelement of name. This element is repeatable. --><fieldset class="level-1"><div class="join"><legend>Names</legend><span class="xforms-hint"><span onmouseover="show(this, 'hint', true)" onmouseout="show(this, 'hint', false)" class="xforms-hint-icon"/><div class="xforms-hint-value"><p> In Names are catalogued the names of the persons, organisations, or events (conferences, meetings, etc.) that are associated with the resource being catalogued. These relationship between these named entities and the resource is described in Role. </p><p>Include as many Names blocks as needed. </p><p> In addition to describing named entities associated with the creation of a resource, Names is also used as a kind of Subject. For names used as subjects, to note that the resource is about a named entity, see the Subjects tab. </p><p> For textual materials, include the names of all known authors, translators, compilers, and editors. </p><p> For images, include the name of the creator of the original intellectual content (the original photographer, painter, architect, etc.) and the name of anyone capturing that content in a new medium (for a photograph of a building, include both the architect and the photographer). </p><p> If no known person or organisation etc. is known to be associated with the resource, or if the person or organisation etc. is anonymous, do not use "unknown," "anonymous," or similar annotations; rather, leave the Names block empty. </p></div></span></div>
                
                <!--name repeat begins--><xf:repeat nodeset="mods:name" id="name-repeat">
                    <!--name node-add begins-->
                    <!--NB: @altRepGroup, @nameTitleGroup, @usage missing--><xf:group appearance="full" ref=".[not(mods:namePart)] | .[not(mods:displayForm)] | .[not(mods:affiliation)] | .[not(mods:role)] | .[not(mods:description)]"><xf:switch><xf:case id="name-add-node-hide"><div class="node-adds-title"><xf:trigger class="add-button"><xf:label class="xforms-group-label-centered">Show Additional Fields</xf:label><xf:toggle case="name-add-node-unhide" ev:event="DOMActivate"/></xf:trigger></div></xf:case><xf:case id="name-add-node-unhide"><div class="node-adds-title"><xf:trigger><xf:label class="xforms-group-label-centered">Hide Additional Fields</xf:label><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/></xf:trigger></div><div class="node-adds"><xf:group id="name-add-node-recommended" appearance="full">
                                        <!--<xf:label class="xforms-group-label-centered">Recommended Fields</xf:label>--><xf:group ref=".[not(mods:namePart)]" appearance="full"><xf:trigger class="add-button"><xf:label class="xforms-group-label-centered">Add Name Part</xf:label><xf:action ev:event="DOMActivate"><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:insert nodeset="mods:namePart" at="index('namePart-repeat')" position="after" origin="instance('insert-templates')/mods:name/mods:namePart"/></xf:action></xf:trigger></xf:group><xf:group ref=".[not(mods:displayForm)]" appearance="full"><xf:trigger class="add-button"><xf:label class="xforms-group-label-centered">Add Display Form</xf:label><xf:action ev:event="DOMActivate"><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:insert nodeset="mods:displayForm" at="index('name-repeat')" position="after" origin="instance('insert-templates')/mods:name/mods:displayForm"/></xf:action></xf:trigger></xf:group><xf:group ref=".[not(mods:affiliation)]" appearance="full"><xf:trigger class="add-button"><xf:label class="xforms-group-label-centered">Add Affiliation</xf:label><xf:action ev:event="DOMActivate"><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:insert nodeset="mods:affiliation" at="index('name-repeat')" position="after" origin="instance('insert-templates')/mods:name/mods:affiliation"/></xf:action></xf:trigger></xf:group><xf:group ref=".[not(mods:role)]" appearance="full"><xf:trigger class="add-button"><xf:label class="xforms-group-label-centered">Add Role</xf:label><xf:action ev:event="DOMActivate"><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:insert nodeset="mods:role" at="index('name-repeat')" position="after" origin="instance('insert-templates')/mods:name/mods:role"/></xf:action></xf:trigger></xf:group><xf:group ref=".[not(mods:description)]" appearance="full"><xf:trigger class="add-button"><xf:label class="xforms-group-label-centered">Add Description</xf:label><xf:action ev:event="DOMActivate"><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:insert nodeset="mods:description" at="index('name-repeat')" position="after" origin="instance('insert-templates')/mods:name/mods:description"/></xf:action></xf:trigger></xf:group>
                                        <!-- 
                                            <xf:group ref=".[not(@type)]" appearance="full">
                                            <xf:trigger class="add-button">
                                            <xf:label class="xforms-group-label-centered">Add Type</xf:label>
                                            <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:name/@type"/>
                                            </xf:action>
                                            </xf:trigger>
                                            </xf:group>
                                            <xf:group ref=".[not(@authority)]" appearance="full">
                                            <xf:trigger class="add-button">
                                            <xf:label class="xforms-group-label-centered">Add Authority</xf:label>
                                            <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:name/@authority"/>
                                            </xf:action>
                                            </xf:trigger>
                                            </xf:group> 
                                            <xf:group ref=".[not(@lang)]" appearance="full">
                                            <xf:trigger class="add-button">
                                            <xf:label class="xforms-group-label-centered">Add Language</xf:label>
                                            <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:name/@lang"/>
                                            </xf:action>
                                            </xf:trigger>
                                            </xf:group>
                                            <xf:group ref=".[not(@transliteration)]" appearance="full">
                                            <xf:trigger class="add-button">
                                            <xf:label class="xforms-group-label-centered">Add Transliteration</xf:label>
                                            <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:name/@transliteration"/>
                                            </xf:action>
                                            </xf:trigger>
                                            </xf:group> 
                                            <xf:group ref=".[not(@script)]" appearance="full">
                                            <xf:trigger class="add-button">
                                            <xf:label class="xforms-group-label-centered">Add Script</xf:label>
                                            <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:name/@script"/>
                                            </xf:action>
                                            </xf:trigger>
                                            </xf:group> --></xf:group><xf:group id="name-add-node-optional" ref=".[not(@xlink)] or .[not(@displayLabel)]" appearance="full"><xf:label class="xforms-group-label-centered">Optional Fields</xf:label>
                                        <!-- 
                                            <xf:trigger class="add-button">
                                            <xf:label class="xforms-group-label-centered">Add XLink</xf:label>
                                            <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:name/@xlink"/>
                                            </xf:action>
                                            </xf:trigger> </xf:group>
                                            <xf:group ref=".[not(@displayLabel)]" appearance="full">
                                            <xf:trigger class="add-button">
                                            <xf:label class="xforms-group-label-centered">Add Display Label</xf:label>
                                            <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:name/@displayLabel"/>
                                            </xf:action>
                                            </xf:trigger>
                                            </xf:group> --></xf:group><xf:group id="name-add-node-not-recommended" ref=".[not(@ID)] or .[not(@xml:lang)]" appearance="full"><xf:label class="xforms-group-label-centered">Deprecated Fields</xf:label>
                                        <!-- 
                                            <xf:group ref=".[not(@ID)]" appearance="full">
                                            <xf:trigger class="add-button">
                                            <xf:label class="xforms-group-label-centered">Add ID</xf:label>
                                            <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:name/@ID"/>
                                            </xf:action>
                                            </xf:trigger>
                                            </xf:group> 
                                            <xf:group ref=".[not(@xml:lang)]" appearance="full">
                                            <xf:trigger class="add-button">
                                            <xf:label class="xforms-group-label-centered">Add xml:lang</xf:label>
                                            <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:name/@xml:lang"/>
                                            </xf:action>
                                            </xf:trigger>
                                            </xf:group> --></xf:group></div></xf:case></xf:switch></xf:group>
                    <!--name node-add ends-->
                    <!--name input begins-->
                    <!--DLF/Aquifer: OPTIONAL-->
                    <!--Cluster: omit--><xf:group ref=".[@ID]" appearance="full"><xf:input ref="./@ID" class="text_50"><xf:label>ID: </xf:label><xf:hint><p>ID is used to link among records inside the database and to reference a field inside the database from the outside.</p></xf:hint></xf:input>
                        <!-- 
                            <xf:trigger>
                            <xf:label class="xforms-label-small">-</xf:label>
                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@ID" at="index('name-repeat')"/>
                            </xf:trigger>
                        --></xf:group>
                    <!--DLF/Aquifer: RECOMMENDED IF APPLICABLE-->
                    <!--Cluster: omit--><xf:group ref=".[@xlink]" appearance="full"><xf:input ref="./@xlink" class="text_50"><xf:label>XLink: </xf:label><xf:hint><p>The XLink field is used to reference an external resource, such as a second metadata record, a Related Item or a Table Of Contents.</p></xf:hint></xf:input>
                        <!-- 
                            <xf:trigger>
                            <xf:label class="xforms-label-small">-</xf:label>
                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@xlink" at="index('name-repeat')"/>
                            </xf:trigger>
                        --></xf:group>
                    <!--DLF/Aquifer: RECOMMENDED-->
                    <!--Cluster: warn--><xf:group ref=".[@type]" appearance="full"><xf:select1 ref="./@type"><xf:label>Type:</xf:label><xf:hint><p>The Type field can take the following values: personal, corporate, conference. Use it to indicate whether the name is the name of a person (or a family), the name of a corporation or the name of a conference (or an event similar to a conference).</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='name-type-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                        <!-- 
                            <xf:trigger>
                            <xf:label class="xforms-label-small">-</xf:label>
                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@type" at="index('name-repeat')"/>
                            </xf:trigger>
                        --></xf:group>
                    <!--DLF/Aquifer: RECOMMENDED-->
                    <!--Cluster: include--><xf:group ref=".[@authority]" appearance="full"><xf:select1 ref="./@authority"><xf:label>Authority:</xf:label><xf:hint><p> The name of an authoritative list for a controlled value in Name is recorded here. </p><p> If you render the name as it occurs in the resource, you may leave the Authority field value blank. If you normalize the name, you should indicate according to which authority you are altering it. Use the value "Local" if a locally-developed name authority file is used to catalogue the Name in question. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='name-title-authority-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                        <!-- 
                            <xf:trigger>
                            <xf:label class="xforms-label-small">-</xf:label>
                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@authority" at="index('name-repeat')"/>
                            </xf:trigger>
                        --></xf:group>
                    <!--DLF/Aquifer: N/A]]-->
                    <!--Cluster: hide--><xf:group ref=".[@authorityURI]" appearance="full"><xf:input ref="./@authorityURI" class="text_50"><xf:label>Authority URI: </xf:label><xf:hint>
                                Hint
                            </xf:hint></xf:input>
                        <!-- 
                            <xf:trigger>
                            <xf:label class="xforms-label-small">-</xf:label>
                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@authorityURI" at="index('name-repeat')"/>
                            </xf:trigger>
                        --></xf:group>
                    <!--DLF/Aquifer: N/A]]-->
                    <!--Cluster: omit--><xf:group ref=".[@valueURI]" appearance="full"><xf:input ref="./@valueURI" class="text_50"><xf:label>Value URI: </xf:label><xf:hint>
                                Hint
                            </xf:hint></xf:input>
                        <!-- 
                            <xf:trigger>
                            <xf:label class="xforms-label-small">-</xf:label>
                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@valueURI" at="index('name-repeat')"/>
                            </xf:trigger>
                        --></xf:group>
                    <!--DLF/Aquifer: N/A-->
                    <!--Cluster: include?-->
                    <!-- NB: while it does seem reasonable to hold that a name occurs in a certain script or transliteration, it does not in most cases make sense to say that a name is in a certain language. What about William the Conqueror? --><xf:group ref=".[@lang]" appearance="full"><xf:select1 ref="./@lang"><xf:label>Language:</xf:label><xf:hint><p> The language used within Title Information is specified here, if this language is different from the language noted in Language of Resource. The most common languages have been moved to the top of the list. </p><p> Language can be applied the Name as a whole. Do this if you are using only one Language value for all Name Parts. If you are using different values for different Name Parts, apply Language to each Name Part and leave Language empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-3-type-sorted-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                        <!-- 
                            <xf:trigger>
                            <xf:label class="xforms-label-small">-</xf:label>
                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@lang" at="index('name-repeat')"/>
                            </xf:trigger>
                        --></xf:group>
                    <!--DLF/Aquifer: NOT RECOMMENDED]-->
                    <!--Cluster: omit--><xf:group ref=".[@xml:lang]" appearance="full"><xf:select1 ref="./@xml:lang"><xf:label>xml:lang:</xf:label><xf:hint><p> This field is used to specify the language used within a field, using specifications in RFC 3066. RFC 3066 uses the two-character ISO 639-1 codes along with three-character ISO 639-2 codes for those languages not given in 639-1. The recommendation is not to use xml:lang, but to use the above Language field. </p><p> Language can be applied the Name as a whole. Do this if you are using only one Language value for all Name Parts. If you are using different values for different Name Parts, apply Language to each Name Part and leave Language empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-2-type-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                        <!-- 
                            <xf:trigger>
                            <xf:label class="xforms-label-small">-</xf:label>
                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@xml:lang" at="index('name-repeat')"/>
                            </xf:trigger>
                        --></xf:group>
                    <!--DLF/Aquifer: N/A-->
                    <!--Cluster: include--><xf:group ref=".[@script]" appearance="full"><xf:select1 ref="./@script"><xf:label>Script:</xf:label><xf:hint><p> Use Script to record the script in which the name in rendered. </p><p>Script can be applied the Name as a whole. Do this if you are using only one Script value for all Name Parts. If you are using different values for different Name Parts, apply Script to each Name Part and leave Script empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='script-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                        <!-- 
                            <xf:trigger>
                            <xf:label class="xforms-label-small">-</xf:label>
                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@script" at="index('name-repeat')"/>
                            </xf:trigger>
                        --></xf:group>
                    <!--DLF/Aquifer: N/A-->
                    <!--Cluster: include--><xf:group ref=".[not(@script='Latn')]" appearance="full"><xf:select1 ref="./@transliteration"><xf:label>Transliteration:</xf:label><xf:hint><p> This field specifies the transliteration (transcription, romanisation) scheme used within Title Information. When specificing the transliteration used, also specify the language employed. There is at present no standard list of transliteration schemes available. If you wish to employ a transliteration on the scheme, please contact <!--contact -->. In general, the Library of Congress transliteration schemes (<!-- NB -->) should be used. If you follow a transliteration scheme authorised by <!--NB-->, choose <!--NB--> as the value and note the language from which the transliteration is made. The following transliteration schemes are authorised by <!--NB-->: Chinese: pinyin Japanese: (modified) Hepburn Korean: <!--NB--> Russian: <!--NB--> Sanskrit: <!--NB--> If you employ a different, but recognised, transliteration scheme, you may have it added to the list. </p><p> Script can be applied the Name as a whole. Do this if you are using only one Script value for all Name Parts. If you are using different values for different Name Parts, apply Script to each Name Part and leave Script empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='transliteration-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                        <!-- 
                            <xf:trigger>
                            <xf:label class="xforms-label-small">-</xf:label>
                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@transliteration" at="index('name-repeat')"/>
                            </xf:trigger>
                        --></xf:group>
                    <!--DLF/Aquifer: OPTIONAL]]-->
                    <!--Cluster: omit--><xf:group ref=".[@displayLabel]" appearance="full"><xf:input ref="./@displayLabel" class="text_50"><xf:label>Display Label: </xf:label><xf:hint><p>This field is used when additional text associated with the title is needed for display. Display Label may be used whenever appropriate to indicate the preferred labeling when displayed. Include the text and capitalization preferred, but do not include delimiters such as colons or semicolons.</p></xf:hint></xf:input>
                        <!-- 
                            <xf:trigger>
                            <xf:label class="xforms-label-small">-</xf:label>
                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@displayLabel" at="index('name-repeat')"/>
                            </xf:trigger>
                        --></xf:group>
                    <!--DLF/Aquifer: N/A]]-->
                    <!--Cluster: omit--><xf:group ref=".[@altRepGroup]" appearance="full"><xf:select1 ref="./@altRepGroup"><xf:label>Alternate Representation Groups: </xf:label><xf:hint><p>Alternate Representation Groups is used to link alternate representations of the same element content, such as different scripts, transliterations, and translations. 
                                    The same attribute value is applied to each of the element instances to be linked.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='altRepGroup-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                        <!-- 
                            <xf:trigger>
                            <xf:label class="xforms-label-small">-</xf:label>
                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@altRepGroup" at="index('name-repeat')"/>
                            </xf:trigger>
                        --></xf:group>
                    <!--DLF/Aquifer: N/A]]-->
                    <!--Cluster: hide--><xf:group ref=".[@nameTitleGroup]" appearance="full"><xf:select1 ref="./@nameTitleGroup" selection="open"><xf:label>Name-Title Group: </xf:label><xf:hint> Name-Title Group that can be used with Name and Title Information to enable an explicit link between a name and a title when that is desirable. The same value is assigned to this attribute for the two elements. This attribute is used to link names to uniform titles when the name-uniform title combination is an authority controlled heading. </xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='nameTitleGroup-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                        <!-- <xf:trigger> <xf:label class="xforms-label-small">-</xf:label> <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/> <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@altRepGroup" at="index('name-repeat')"/> </xf:trigger> --></xf:group>
                    <!--DLF/Aquifer: N/A]]-->
                    <!--Cluster: hide--><xf:group ref=".[@usage]" appearance="full"><xf:select1 ref="./@usage"><xf:label>Usage: </xf:label><xf:hint><p>Usage with the value "primary" can be used with repeated fields to indicate special prominence of one that is useful for various special purposes such as indexing.</p><p>When applied to Name, "primary" indicates the name that would probably be used when citing the resource. This is useful when there are several authors and for citation purposes one is to be selected. The "primary" name would be used with the resource title for the citation, and also would be the name that would be associated with the uniform title when one is present.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='usage-type-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                        <!-- <xf:trigger> <xf:label class="xforms-label-small">-</xf:label> <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/> <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@usage" at="index('name-repeat')"/> </xf:trigger> --></xf:group>
                    <!--name input ends-->
                    
                    <!--namePart begins--><xf:group id="fieldset-namePart" ref=".[(mods:namePart)]" appearance="full"><fieldset class="level-2"><div class="join"><legend>Name Part</legend><span class="xforms-hint"><span onmouseover="show(this, 'hint', true)" onmouseout="show(this, 'hint', false)" class="xforms-hint-icon"/><div class="xforms-hint-value"><p>The name itself is always entered into a Name Part. This is the case even if it is not possible to parse the name into separate units.</p></div></span></div>
                            <!--namePart repeat begins--><xf:repeat nodeset="./mods:namePart" id="namePart-repeat">
                                <!--namePart input begins-->
                                <!--DLF/Aquifer: RECOMMENDED IF APPLICABLE-->
                                <!--Cluster: warn--><xf:group ref=".[@type]" appearance="full"><xf:select1 ref="./@type"><xf:label>Type:</xf:label><xf:hint><p>Name Part includes each part of the name. Parsing is used to parse parts of a personal name into family/surname and given name/forename, as well as terms of address, but it is also used to indicate a date associated with the name and to parse the parts of a corporate name. </p><p> The parsing performed is indicated by the Type field. This field takes the following values: Date, Family, Given, Terms Of Address. </p><p> Date is used to note dates that are not integral parts of a name. For dates within e.g. a conference name, do not use this field to separate the date, since it is an integral part of the name of the conference. The birthdate associated with a personal name, however, is not an integral part of the name, but can be added to distinguish the name from others, so it does include a separate Name Part with a Type of "Date". </p><p> "Family" is used for the family name or surname of a person. </p><p> "Given" is used for the given name or forename of a person. </p><p> "Terms Of Address" is used to record titles and enumeration associated with a name, such as "Jr.", "II", etc. </p><p> If you do not know how to break up a name or if a name is not constructed according to the family name/given name pattern, leave the Type of the Name Part blank and enter the whole name as it occurs. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='name-part-type-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@type" at="index('namePart-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--DLF/Aquifer: RECOMMENDED-->
                                <!--Cluster: include--><xf:group ref=".[@authority]" appearance="full"><xf:select1 ref="./@authority"><xf:label>Authority:</xf:label><xf:hint><p> The name of an authoritative list for a controlled value in Name is recorded here. </p><p> If you render the name as it occurs in the resource, you may leave the Authority field value blank. If you normalize the name, you should indicate according to which authority you are altering it. Use the value "Local" if a locally-developed name authority file is used to catalogue the Name in question. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='name-title-authority-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@authority" at="index('name-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--DLF/Aquifer: N/A]]-->
                                <!--Cluster: hide--><xf:group ref=".[@authorityURI]" appearance="full"><xf:input ref="./@authorityURI" class="text_50"><xf:label>Authority URI: </xf:label><xf:hint>
                                            Hint
                                        </xf:hint></xf:input>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@authorityURI" at="index('name-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--DLF/Aquifer: N/A]]-->
                                <!--Cluster: omit--><xf:group ref=".[@valueURI]" appearance="full"><xf:input ref="./@valueURI" class="text_50"><xf:label>Value URI: </xf:label><xf:hint>
                                            Hint
                                        </xf:hint></xf:input>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@valueURI" at="index('name-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--DLF/Aquifer: N/A-->
                                <!--Cluster: include?-->
                                <!-- NB: while it does seem reasonable to hold that a name occurs in a certain script or transliteration, it does not in most cases make sense to say that a name is in a certain language. What about William the Conqueror? --><xf:group ref=".[@lang]" appearance="full"><xf:select1 ref="./@lang"><xf:label>Language:</xf:label><xf:hint><p>The language used within Title Information is specified here, if this language is different from the language noted in Language of Resource. The most common languages have been moved to the top of the list. </p><p> Language can be applied the Name as a whole. Do this if you are using only one Language value for all Name Parts. If you are using different values for different Name Parts, apply Language to each Name Part and leave Language empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-3-type-sorted-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@lang" at="index('namePart-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--Schema: added in accordance with 3.4-->
                                <!--DLF/Aquifer: NOT RECOMMENDED]-->
                                <!--Cluster: omit--><xf:group ref=".[@xml:lang]" appearance="full"><xf:select1 ref="./@xml:lang"><xf:label>xml:lang:</xf:label><xf:hint><p>This field is used to specify the language used within a field, using specifications in RFC 3066. RFC 3066 uses the two-character ISO 639-1 codes along with three-character ISO 639-2 codes for those languages not given in 639-1. </p><p> The recommendation is not to use xml:lang, but to use the above Language field. </p><p> Language can be applied the Name as a whole. Do this if you are using only one Language value for all Name Parts. If you are using different values for different Name Parts, apply Language to each Name Part and leave Language empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-2-type-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@xml:lang" at="index('namePart-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--Schema: added in accordance with 3.4-->
                                <!--DLF/Aquifer: N/A-->
                                <!--Cluster: include--><xf:group ref=".[@script]" appearance="full"><xf:select1 ref="./@script"><xf:label>Script:</xf:label><xf:hint><p>Use Script to record the script in which the name in rendered. </p><p> Script can be applied the Name as a whole. Do this if you are using only one Script value for all Name Parts. If you are using different values for different Name Parts, apply Script to each Name Part and leave Script empty under Name as a whole.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='script-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@script" at="index('namePart-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--Schema: added in accordance with 3.4-->
                                <!--DLF/Aquifer: N/A-->
                                <!--Cluster: include--><xf:group ref=".[@transliteration]" appearance="full"><xf:select1 ref="./@transliteration"><xf:label>Transliteration:</xf:label><xf:hint><p>This field specifies the transliteration (transcription, romanisation) scheme used within Title Information. When specificing the transliteration used, also specify the language employed. There is at present no standard list of transliteration schemes available. If you wish to employ a transliteration on the scheme, please contact <!--contact -->. In general, the Library of Congress transliteration schemes (<!-- NB -->) should be used. If you follow a transliteration scheme authorised by <!--NB-->, choose <!--NB--> as the value and note the language from which the transliteration is made. The following transliteration schemes are authorised by <!--NB-->: Chinese: pinyin Japanese: (modified) Hepburn Korean: <!--NB--> Russian: <!--NB--> Sanskrit: <!--NB--> If you employ a different, but recognised, transliteration scheme, you may have it added to the list. </p><p> Script can be applied the Name as a whole. Do this if you are using only one Script value for all Name Parts. If you are using different values for different Name Parts, apply Script to each Name Part and leave Script empty under Name as a whole.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='transliteration-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@transliteration" at="index('namePart-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--DLF/Aquifer: REQUIRED-->
                                <!--Cluster: require--><xf:group ref="." appearance="full"><xf:input ref="." class="text_100"><xf:label>Name Part:</xf:label><xf:hint><p>The name itself is always entered into a Name Part. This is the case even if it is not possible to parse the name into separate units.</p></xf:hint></xf:input></xf:group>
                                <!--namePart input ends-->
                                <!--namePart node-add begins--><xf:group appearance="full" ref=".[not(@type)] | .[not(@lang)] | .[not(@transliteration)] | .[not(@script)] | .[not(@xlink)] | .[not(@displayLabel)] | .[not(@ID)] | .[not(@xml:lang)]"><xf:switch><xf:case id="namePart-add-node-hide">
                                            <!-- all fields are attributes, therefore not relevant 
                                            <div class="node-adds-title">
                                                <xf:trigger class="add-button">
                                                    <xf:label class="xforms-group-label-centered">Show Additional Fields</xf:label>
                                                    <xf:toggle case="namePart-add-node-unhide" ev:event="DOMActivate"/>
                                                </xf:trigger>
                                            </div>
                                            --></xf:case><xf:case id="namePart-add-node-unhide"><div class="node-adds-title"><xf:trigger><xf:label class="xforms-group-label-centered">Hide Additional Fields</xf:label><xf:toggle case="namePart-add-node-hide" ev:event="DOMActivate"/></xf:trigger></div><div class="node-adds">
                                    <!--NB: attributes do not work--><xf:group id="namePart-add-node-recommended" appearance="full">
                                        <!-- 
                                                    <xf:label class="xforms-group-label-centered">Recommended Fields</xf:label>
                                                    <xf:trigger ref=".[not(@type)]" class="add-button">
                                                    <xf:label class="xforms-group-label-centered">Add Type</xf:label>
                                                        <xf:action ev:event="DOMActivate">
                                                        <xf:insert nodeset="@type" at="index('namePart-repeat')" position="after" origin="instance('insert-templates')/mods:name/@type"/>
                                                        </xf:action>
                                                    </xf:trigger>
                                                    <xf:trigger ref=".[not(@lang)]" class="add-button">
                                                    <xf:label class="xforms-group-label-centered">Add Language</xf:label>
                                                        <xf:action ev:event="DOMActivate">
                                                        <xf:insert nodeset="@lang" at="index('namePart-repeat')" position="after" origin="instance('insert-templates')/mods:name/@lang"/>
                                                        </xf:action>
                                                    </xf:trigger>
                                                    <xf:trigger ref=".[not(@transliteration)]" class="add-button">
                                                    <xf:label class="xforms-group-label-centered">Add Transliteration</xf:label>
                                                        <xf:action ev:event="DOMActivate">
                                                        <xf:insert nodeset="@transliteration" at="index('namePart-repeat')" position="after" origin="instance('insert-templates')/mods:name/@transliteration"/>
                                                        </xf:action>
                                                    </xf:trigger>
                                                    <xf:trigger ref=".[not(@script)]" class="add-button">
                                                    <xf:label class="xforms-group-label-centered">Add Script</xf:label>
                                                        <xf:action ev:event="DOMActivate">
                                                        <xf:insert nodeset="@script" at="index('namePart-repeat')" position="after" origin="instance('insert-templates')/mods:name/@script"/>
                                                        </xf:action>
                                                    </xf:trigger>
                                        --></xf:group><xf:group id="namePart-add-node-optional" appearance="full">
                                        <!-- <xf:label class="xforms-group-label-centered">Optional Fields</xf:label>
                                            <xf:trigger ref=".[not(@xlink)]" class="add-button"> <xf:label class="xforms-group-label-centered">Add XLink</xf:label> <xf:action ev:event="DOMActivate"> <xf:insert nodeset="@xlink" at="index('namePart-repeat')" position="after" origin="instance('insert-templates')/mods:name/@xlink"/> </xf:action> </xf:trigger> <xf:trigger ref=".[not(@displayLabel)]" class="add-button"> <xf:label class="xforms-group-label-centered">Add Display Label</xf:label> <xf:action ev:event="DOMActivate"> <xf:insert nodeset="@displayLabel" at="index('namePart-repeat')" position="after" origin="instance('insert-templates')/mods:name/@displayLabel"/> </xf:action> </xf:trigger> --></xf:group><xf:group id="namePart-add-node-not-recommended" appearance="full">
                                        <!--<xf:label class="xforms-group-label-centered">Deprecated Fields</xf:label>
                                            <xf:trigger ref=".[not(@ID)]" class="add-button"> <xf:label class="xforms-group-label-centered">Add ID</xf:label> <xf:action ev:event="DOMActivate"> <xf:insert nodeset="@ID" at="index('namePart-repeat')" position="after" origin="instance('insert-templates')/mods:name/@ID"/> </xf:action> </xf:trigger> <xf:trigger ref=".[not(@xml:lang)]" class="add-button"> <xf:label class="xforms-group-label-centered">Add xml:lang</xf:label> <xf:action ev:event="DOMActivate"> <xf:insert nodeset="@xml:lang" at="index('namePart-repeat')" position="after" origin="instance('insert-templates')/mods:name/@displayLabel"/> </xf:action> </xf:trigger> --></xf:group></div></xf:case></xf:switch></xf:group>
                                <!--namePart node-add ends-->
                                <!--namePart delete begins--><xf:trigger class="delete-button"><xf:label class="xforms-group-label-centered">Delete This Name Part</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart" at="index('namePart-repeat')"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/></xf:trigger>
                                <!--namePart delete ends--></xf:repeat>
                            <!--namePart repeat ends-->
                            <!--namePart add begins--><xf:group appearance="full"><xf:trigger ref=".[mods:namePart]" class="add-button"><xf:label class="xforms-group-label-centered">Add Another Name Part</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:namePart" at="index('name-repeat')" position="after" origin="instance('new-instance')/mods:name/mods:namePart"/></xf:action></xf:trigger></xf:group>
                            <!--namePart add ends--></fieldset></xf:group>
                    <!--namePart ends-->
                    <!--role begins--><xf:group id="fieldset-role" ref=".[(mods:role)]" appearance="full"><fieldset class="level-2"><div class="join"><legend>Role</legend><span class="xforms-hint"><span onmouseover="show(this, 'hint', true)" onmouseout="show(this, 'hint', false)" class="xforms-hint-icon"/><div class="xforms-hint-value"><p>Role contains a coded and/or textual description of the role of the person, corporation or conference entered into Name Part to the resource being catalogued. Repeat Role for each new role played by the the person, corporation or conference.</p></div></span></div>
                            <!--role repeat begins--><xf:repeat nodeset="./mods:role" id="role-repeat">
                                <!--role node-add begins-->
                                <!--NB: attributes do not work--><xf:group appearance="full" ref=".[not(mods:roleTerm)]"><xf:switch><xf:case id="role-add-node-hide"><div class="node-adds-title"><xf:trigger class="add-button"><xf:label class="xforms-group-label-centered">Show Additional Fields</xf:label><xf:toggle case="role-add-node-unhide" ev:event="DOMActivate"/></xf:trigger></div></xf:case><xf:case id="role-add-node-unhide"><div class="node-adds-title"><xf:trigger><xf:label class="xforms-group-label-centered">Hide Additional Fields</xf:label><xf:toggle case="role-add-node-hide" ev:event="DOMActivate"/></xf:trigger></div><div class="node-adds"><xf:group id="role-add-node-recommended" ref=".[not(mods:roleTerm)]" appearance="full">
                                                    <!--<xf:label class="xforms-group-label-centered">Recommended Fields</xf:label>--><xf:trigger ref=".[not(mods:roleTerm)]" class="add-button"><xf:label class="xforms-group-label-centered">Add Role Term</xf:label><xf:action ev:event="DOMActivate"><xf:toggle case="role-add-node-hide" ev:event="DOMActivate"/><xf:insert nodeset="mods:roleTerm" at="index('role-repeat')" position="after" origin="instance('insert-templates')/mods:name/mods:role/mods:roleTerm"/></xf:action></xf:trigger></xf:group></div></xf:case></xf:switch></xf:group>
                                <!--role node-add ends-->
                                <!--role input begins-->
                                <!--DLF/Aquifer: RECOMMENDED]-->
                                <!--Cluster: warn-->
                                <!--roleTerm begins-->
                                <!--DLF/Aquifer: OPTIONAL-->
                                <!--Cluster: include-->
                                <!--role node-add begins--><xf:group id="fieldset-roleTerm" ref=".[(mods:roleTerm)]" appearance="full"><fieldset class="level-3"><div class="join"><legend>Role Term</legend><span class="xforms-hint"><span onmouseover="show(this, 'hint', true)" onmouseout="show(this, 'hint', false)" class="xforms-hint-icon"/><div class="xforms-hint-value"><p>Role contains a coded and/or textual description of the role of the person, corporation or conference entered into Name Part to the An authority should be indicated if using a coded form for role. </p><p> Coded input is preselected as Type. The MARC Code List for Relators is preselected as Authority, with the most common roles placed at the top. </p><p> If both a coded term and a textual term are given that represent the same role, use one Role and two occurrences of Role Term.</p></div></span></div>
                                        <!--roleTerm repeat begins--><xf:repeat nodeset="./mods:roleTerm" id="roleTerm-repeat">
                                            <!--roleTerm input begins-->
                                            <!--DLF/Aquifer: RECOMMENDED]-->
                                            <!--Cluster: warn--><xf:group ref=".[@type]" appearance="full"><xf:select1 ref="./@type"><xf:label>Type:</xf:label><xf:hint><p>Type is used to express whether the Role Term has textual or coded form.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='code-text-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                                <!-- 
                                                    <xf:trigger>
                                                    <xf:label class="xforms-label-small">-</xf:label>
                                                    <xf:toggle case="roleTerm-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="roleTerm-add-node-hide" ev:event="DOMActivate"/>
                                                    <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:role/mods:roleTerm/@type" at="index('roleTerm-repeat')"/>
                                                    </xf:trigger>
                                                --></xf:group>
                                            <!--DLF/Aquifer: RECOMMENDED-->
                                            <!--Cluster: include--><xf:group ref=".[@type='code']" appearance="full" selection="open"><xf:select1 ref="./@authority"><xf:label>Authority:</xf:label><xf:hint><p>If the Type is in coded form, the authority file followed must be indicated.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='name-role-relator-authority-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                                <!-- 
                                                    <xf:trigger>
                                                    <xf:label class="xforms-label-small">-</xf:label>
                                                    <xf:toggle case="roleTerm-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="roleTerm-add-node-hide" ev:event="DOMActivate"/>
                                                    <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:role/mods:roleTerm/@authority" at="index('roleTerm-repeat')"/>
                                                    </xf:trigger>
                                                --></xf:group>
                                            <!--DLF/Aquifer: N/A]]-->
                                            <!--Cluster: hide--><xf:group ref=".[@authorityURI]" appearance="full"><xf:input ref="./@authorityURI" class="text_50"><xf:label>Authority URI: </xf:label><xf:hint>
                                                        Hint
                                                    </xf:hint></xf:input>
                                                <!-- 
                                                    <xf:trigger>
                                                    <xf:label class="xforms-label-small">-</xf:label>
                                                    <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                                    <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@authorityURI" at="index('name-repeat')"/>
                                                    </xf:trigger>
                                                --></xf:group>
                                            <!--DLF/Aquifer: N/A]]-->
                                            <!--Cluster: omit--><xf:group ref=".[@valueURI]" appearance="full"><xf:input ref="./@valueURI" class="text_50"><xf:label>Value URI: </xf:label><xf:hint>
                                                        Hint
                                                    </xf:hint></xf:input>
                                                <!-- 
                                                    <xf:trigger>
                                                    <xf:label class="xforms-label-small">-</xf:label>
                                                    <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                                    <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/@valueURI" at="index('name-repeat')"/>
                                                    </xf:trigger>
                                                --></xf:group>
                                            <!--DLF/Aquifer: N/A-->
                                            <!--Cluster: include?-->
                                            <!-- NB: while it does seem reasonable to hold that a name occurs in a certain script or transliteration, it does not in most cases make sense to say that a name is in a certain language. What about William the Conqueror? --><xf:group ref=".[@lang]" appearance="full"><xf:select1 ref="./@lang"><xf:label>Language:</xf:label><xf:hint><p>The language used within Title Information is specified here, if this language is different from the language noted in Language of Resource. The most common languages have been moved to the top of the list. </p><p> Language can be applied the Name as a whole. Do this if you are using only one Language value for all Name Parts. If you are using different values for different Name Parts, apply Language to each Name Part and leave Language empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-3-type-sorted-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                                <!-- 
                                                    <xf:trigger>
                                                    <xf:label class="xforms-label-small">-</xf:label>
                                                    <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                                    <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@lang" at="index('namePart-repeat')"/>
                                                    </xf:trigger>
                                                --></xf:group>
                                            <!--Schema: added in accordance with 3.4-->
                                            <!--DLF/Aquifer: NOT RECOMMENDED]-->
                                            <!--Cluster: omit--><xf:group ref=".[@xml:lang]" appearance="full"><xf:select1 ref="./@xml:lang"><xf:label>xml:lang:</xf:label><xf:hint><p>This field is used to specify the language used within a field, using specifications in RFC 3066. RFC 3066 uses the two-character ISO 639-1 codes along with three-character ISO 639-2 codes for those languages not given in 639-1. </p><p> The recommendation is not to use xml:lang, but to use the above Language field. </p><p> Language can be applied the Name as a whole. Do this if you are using only one Language value for all Name Parts. If you are using different values for different Name Parts, apply Language to each Name Part and leave Language empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-2-type-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                                <!-- 
                                                    <xf:trigger>
                                                    <xf:label class="xforms-label-small">-</xf:label>
                                                    <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                                    <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@xml:lang" at="index('namePart-repeat')"/>
                                                    </xf:trigger>
                                                --></xf:group>
                                            <!--Schema: added in accordance with 3.4-->
                                            <!--DLF/Aquifer: N/A-->
                                            <!--Cluster: include--><xf:group ref=".[@script]" appearance="full"><xf:select1 ref="./@script"><xf:label>Script:</xf:label><xf:hint><p>Use Script to record the script in which the name in rendered. </p><p> Script can be applied the Name as a whole. Do this if you are using only one Script value for all Name Parts. If you are using different values for different Name Parts, apply Script to each Name Part and leave Script empty under Name as a whole.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='script-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                                <!-- 
                                                    <xf:trigger>
                                                    <xf:label class="xforms-label-small">-</xf:label>
                                                    <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                                    <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@script" at="index('namePart-repeat')"/>
                                                    </xf:trigger>
                                                --></xf:group>
                                            <!--Schema: added in accordance with 3.4-->
                                            <!--DLF/Aquifer: N/A-->
                                            <!--Cluster: include--><xf:group ref=".[@transliteration]" appearance="full"><xf:select1 ref="./@transliteration"><xf:label>Transliteration:</xf:label><xf:hint><p>This field specifies the transliteration (transcription, romanisation) scheme used within Title Information. When specificing the transliteration used, also specify the language employed. There is at present no standard list of transliteration schemes available. If you wish to employ a transliteration on the scheme, please contact <!--contact -->. In general, the Library of Congress transliteration schemes (<!-- NB -->) should be used. If you follow a transliteration scheme authorised by <!--NB-->, choose <!--NB--> as the value and note the language from which the transliteration is made. The following transliteration schemes are authorised by <!--NB-->: Chinese: pinyin Japanese: (modified) Hepburn Korean: <!--NB--> Russian: <!--NB--> Sanskrit: <!--NB--> If you employ a different, but recognised, transliteration scheme, you may have it added to the list. </p><p> Script can be applied the Name as a whole. Do this if you are using only one Script value for all Name Parts. If you are using different values for different Name Parts, apply Script to each Name Part and leave Script empty under Name as a whole.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='transliteration-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                                <!-- 
                                                    <xf:trigger>
                                                    <xf:label class="xforms-label-small">-</xf:label>
                                                    <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                                    <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@transliteration" at="index('namePart-repeat')"/>
                                                    </xf:trigger>
                                                --></xf:group>
                                            <!--DLF/Aquifer: REQUIRED]-->
                                            <!--Cluster: require--><xf:group ref=".[@type='code' and @authority ='marcrelator']" appearance="full"><xf:select1 ref="."><xf:label>Role Term (code):</xf:label><xf:hint><p>Select a Role Term from the list. </p><p> Note that "Author" is primarily used in connection with printed resources, whereas "Creator" is primarily used in connection with other resources.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='role-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                                <!--required id applicable, therefore no delete--></xf:group><xf:group ref=".[@type='code' and not(@authority ='marcrelator')]" appearance="full"><xf:input ref="." selection="open"><xf:label>Role Term (code):</xf:label><xf:hint><p>Enter a term selected from the authority you have entered. </p></xf:hint></xf:input>
                                                <!--required id applicable, therefore no delete--></xf:group><xf:group ref=".[not(@type='code')]" appearance="full"><xf:select1 ref="." selection="open"><xf:label>Role Term (text):</xf:label><xf:hint><p>Select a term from the list. </p><p> The list of terms given if "Text" is chosen for Type is the same as the list given if "Code" is chosen for Type and Authority is MARC Code List for Relators. However, the values entered into the database are different. If Code is chosen, "aut" will e.g be input, whereas "Author" will be input if "Text" is chosen. It is recomended to input each role in both coded and textual form. </p><p> If "Text" is chosen, you can also input a term not on the list.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='role-code']/items/item"><xf:label ref="label"/><xf:value ref="label"/></xf:itemset></xf:select1>
                                                <!--required, therefore no delete--></xf:group>
                                            <!--roleTerm input ends--><xf:group appearance="full" ref=".[not(@type)] | .[not(@authority)]"><xf:switch><xf:case id="role-add-node-hide">
                                                        <!--only attributes, do not display
                                                        <div class="node-adds-title">
                                                            <xf:trigger class="add-button">
                                                                <xf:label class="xforms-group-label-centered">Show Additional Fields</xf:label>
                                                                <xf:toggle case="role-add-node-unhide" ev:event="DOMActivate"/>
                                                            </xf:trigger>
                                                        </div>
                                                        --></xf:case><xf:case id="role-add-node-unhide"><div class="node-adds-title"><xf:trigger><xf:label class="xforms-group-label-centered">Hide Additional Fields</xf:label><xf:toggle case="role-add-node-hide" ev:event="DOMActivate"/></xf:trigger></div><div class="node-adds"><xf:group id="role-add-node-recommended" ref=".[not(mods:nonSort)] | .[not(mods:title)] | .[not(mods:subTitle)] | .[not(mods:partNumber)] | .[not(mods:partName)]" appearance="full"><xf:label class="xforms-group-label-centered">Recommended Fields</xf:label><xf:trigger ref=".[not(@type)]" class="add-button"><xf:label class="xforms-group-label-centered">Add Type</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="@type" at="index('titleinfo-repeat')" position="after" origin="instance('insert-templates')/mods:role/mods:roleTerm/@type"/></xf:action></xf:trigger><xf:trigger ref=".[not(@authority)]" class="add-button"><xf:label class="xforms-group-label-centered">Add Authority</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="@authority" at="index('titleinfo-repeat')" position="after" origin="instance('insert-templates')/mods:role/mods:roleTerm/@authority"/></xf:action></xf:trigger></xf:group></div></xf:case></xf:switch></xf:group>
                                            <!--roleTerm delete begins--><xf:trigger class="delete-button"><xf:label class="xforms-group-label-centered">Delete This Role Term</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:role/mods:roleTerm" at="index('roleTerm-repeat')"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/></xf:trigger>
                                                <!--required id applicable, therefore no delete-->
                                            <!--roleTerm delete ends--></xf:repeat>
                                        <!--roleTerm repeat ends-->
                                        <!--roleTerm add begins--><xf:group appearance="full"><xf:trigger ref=".[mods:roleTerm]" class="add-button"><xf:label class="xforms-group-label-centered">Add Another Role Term</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:roleTerm" at="index('roleTerm-repeat')" position="after" origin="instance('new-instance')/mods:name/mods:role/mods:roleTerm"/></xf:action></xf:trigger></xf:group>
                                        <!--roleTerm add ends--></fieldset></xf:group>
                                <!--roleTerm ends-->
                                <!--role input ends-->
                                <!--role delete begins--><xf:trigger class="delete-button"><xf:label class="xforms-group-label-centered">Delete This Role</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:role" at="index('role-repeat')"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/></xf:trigger>
                                <!--role delete ends--></xf:repeat>
                            <!--role repeat ends-->
                            <!--role add begins--><xf:group appearance="full"><xf:trigger ref=".[(mods:role)]" class="add-button"><xf:label class="xforms-group-label-centered">Add Another Role</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:role" at="index('role-repeat')" position="after" origin="instance('new-instance')/mods:role"/></xf:action></xf:trigger></xf:group>
                            <!--role add ends--></fieldset></xf:group>
                    <!--role ends-->
                    <!--displayForm begins-->                    
                    <!--DLF/Aquifer: OPTIONAL-->
                    <!--Cluster: omit--><xf:group id="fieldset-displayForm" ref=".[mods:displayForm]" appearance="full"><fieldset class="level-2"><div class="join"><legend>Display Form</legend><span class="xforms-hint"><span onmouseover="show(this, 'hint', true)" onmouseout="show(this, 'hint', false)" class="xforms-hint-icon"/><div class="xforms-hint-value"><p>The Display Form field makes it possible to display personal names in unstructured form. It typically renders a name as given on the resource. </p><p> For some applications, contractual agreements require that the form of the name provided on the resource be provided.</p></div></span></div>
                            <!--displayForm input begins-->
                            <!--displayForm repeat begins--><xf:repeat nodeset="./mods:displayForm" id="displayForm-repeat"><xf:group ref="." appearance="full">
                                    <!--DLF/Aquifer: N/A-->
                                    <!--Cluster: include?-->
                                    <!-- NB: while it does seem reasonable to hold that a name occurs in a certain script or transliteration, it does not in most cases make sense to say that a name is in a certain language. What about William the Conqueror? --><xf:group ref=".[@lang]" appearance="full"><xf:select1 ref="./@lang"><xf:label>Language:</xf:label><xf:hint><p>The language used within Title Information is specified here, if this language is different from the language noted in Language of Resource. The most common languages have been moved to the top of the list. </p><p> Language can be applied the Name as a whole. Do this if you are using only one Language value for all Name Parts. If you are using different values for different Name Parts, apply Language to each Name Part and leave Language empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-3-type-sorted-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                        <!-- 
                                            <xf:trigger>
                                            <xf:label class="xforms-label-small">-</xf:label>
                                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@lang" at="index('namePart-repeat')"/>
                                            </xf:trigger>
                                        --></xf:group>
                                    <!--Schema: added in accordance with 3.4-->
                                    <!--DLF/Aquifer: NOT RECOMMENDED]-->
                                    <!--Cluster: omit--><xf:group ref=".[@xml:lang]" appearance="full"><xf:select1 ref="./@xml:lang"><xf:label>xml:lang:</xf:label><xf:hint><p>This field is used to specify the language used within a field, using specifications in RFC 3066. RFC 3066 uses the two-character ISO 639-1 codes along with three-character ISO 639-2 codes for those languages not given in 639-1. </p><p> The recommendation is not to use xml:lang, but to use the above Language field. </p><p> Language can be applied the Name as a whole. Do this if you are using only one Language value for all Name Parts. If you are using different values for different Name Parts, apply Language to each Name Part and leave Language empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-2-type-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                        <!-- 
                                            <xf:trigger>
                                            <xf:label class="xforms-label-small">-</xf:label>
                                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@xml:lang" at="index('namePart-repeat')"/>
                                            </xf:trigger>
                                        --></xf:group>
                                    <!--Schema: added in accordance with 3.4-->
                                    <!--DLF/Aquifer: N/A-->
                                    <!--Cluster: include--><xf:group ref=".[@script]" appearance="full"><xf:select1 ref="./@script"><xf:label>Script:</xf:label><xf:hint><p>Use Script to record the script in which the name in rendered. </p><p> Script can be applied the Name as a whole. Do this if you are using only one Script value for all Name Parts. If you are using different values for different Name Parts, apply Script to each Name Part and leave Script empty under Name as a whole.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='script-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                        <!-- 
                                            <xf:trigger>
                                            <xf:label class="xforms-label-small">-</xf:label>
                                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@script" at="index('namePart-repeat')"/>
                                            </xf:trigger>
                                        --></xf:group>
                                    <!--Schema: added in accordance with 3.4-->
                                    <!--DLF/Aquifer: N/A-->
                                    <!--Cluster: include--><xf:group ref=".[@transliteration]" appearance="full"><xf:select1 ref="./@transliteration"><xf:label>Transliteration:</xf:label><xf:hint><p>This field specifies the transliteration (transcription, romanisation) scheme used within Title Information. When specificing the transliteration used, also specify the language employed. There is at present no standard list of transliteration schemes available. If you wish to employ a transliteration on the scheme, please contact <!--contact -->. In general, the Library of Congress transliteration schemes (<!-- NB -->) should be used. If you follow a transliteration scheme authorised by <!--NB-->, choose <!--NB--> as the value and note the language from which the transliteration is made. The following transliteration schemes are authorised by <!--NB-->: Chinese: pinyin Japanese: (modified) Hepburn Korean: <!--NB--> Russian: <!--NB--> Sanskrit: <!--NB--> If you employ a different, but recognised, transliteration scheme, you may have it added to the list. </p><p> Script can be applied the Name as a whole. Do this if you are using only one Script value for all Name Parts. If you are using different values for different Name Parts, apply Script to each Name Part and leave Script empty under Name as a whole.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='transliteration-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                        <!-- 
                                            <xf:trigger>
                                            <xf:label class="xforms-label-small">-</xf:label>
                                            <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@transliteration" at="index('namePart-repeat')"/>
                                            </xf:trigger>
                                        --></xf:group><xf:input ref="." class="text_100"><xf:label>Display Form: </xf:label><xf:hint><p>Display Form makes it possible to display personal names in unstructured form. It can be used to render a name in the exact form given on the resource.</p></xf:hint></xf:input></xf:group>
                            <!--displayForm input ends-->
                                <!--displayForm delete begins--><xf:trigger class="delete-button"><xf:label class="xforms-group-label-centered">Delete This Display Form</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:displayForm" at="index('displayForm-repeat')"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/></xf:trigger>
                                <!--displayForm delete ends--></xf:repeat>
                            <!--displayForm repeat ends-->
                            <!--displayForm add begins--><xf:group appearance="full"><xf:trigger ref=".[mods:displayForm]" class="add-button"><xf:label class="xforms-group-label-centered">Add Another Display Form</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:displayForm" at="index('displayForm-repeat')" position="after" origin="instance('new-instance')/mods:name/mods:displayForm"/></xf:action></xf:trigger></xf:group>
                            <!--displayForm add ends--></fieldset></xf:group>
                    <!--displayForm ends-->
                    <!--affiliation begins-->
                    <!--NB: this can be repeated according to schema 3.3 and 3.4.-->
                    <!--DLF/Aquifer: OPTIONAL-->
                    <!--Cluster: include--><xf:group id="fieldset-affiliation" ref=".[mods:affiliation]" appearance="full"><fieldset class="level-2"><div class="join"><legend>Affiliation</legend><span class="xforms-hint"><span onmouseover="show(this, 'hint', true)" onmouseout="show(this, 'hint', false)" class="xforms-hint-icon"/><div class="xforms-hint-value"><p>Affiliation contains the name, address, etc. of an organisation with which the person in Name was associated when the resource was created. </p><p> If the information is readily available, it may be included.</p></div></span></div>
                            <!--affiliation input begins-->
                            <!--affiliation repeat begins--><xf:repeat nodeset="./mods:affiliation" id="affiliation-repeat">
                                <!--DLF/Aquifer: N/A-->
                                <!--Cluster: include?-->
                                <!-- NB: while it does seem reasonable to hold that a name occurs in a certain script or transliteration, it does not in most cases make sense to say that a name is in a certain language. What about William the Conqueror? --><xf:group ref=".[@lang]" appearance="full"><xf:select1 ref="./@lang"><xf:label>Language:</xf:label><xf:hint><p>The language used within Title Information is specified here, if this language is different from the language noted in Language of Resource. The most common languages have been moved to the top of the list. </p><p> Language can be applied the Name as a whole. Do this if you are using only one Language value for all Name Parts. If you are using different values for different Name Parts, apply Language to each Name Part and leave Language empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-3-type-sorted-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@lang" at="index('namePart-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--Schema: added in accordance with 3.4-->
                                <!--DLF/Aquifer: NOT RECOMMENDED]-->
                                <!--Cluster: omit--><xf:group ref=".[@xml:lang]" appearance="full"><xf:select1 ref="./@xml:lang"><xf:label>xml:lang:</xf:label><xf:hint><p>This field is used to specify the language used within a field, using specifications in RFC 3066. RFC 3066 uses the two-character ISO 639-1 codes along with three-character ISO 639-2 codes for those languages not given in 639-1. </p><p> The recommendation is not to use xml:lang, but to use the above Language field. </p><p> Language can be applied the Name as a whole. Do this if you are using only one Language value for all Name Parts. If you are using different values for different Name Parts, apply Language to each Name Part and leave Language empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-2-type-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@xml:lang" at="index('namePart-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--Schema: added in accordance with 3.4-->
                                <!--DLF/Aquifer: N/A-->
                                <!--Cluster: include--><xf:group ref=".[@script]" appearance="full"><xf:select1 ref="./@script"><xf:label>Script:</xf:label><xf:hint><p>Use Script to record the script in which the name in rendered. </p><p> Script can be applied the Name as a whole. Do this if you are using only one Script value for all Name Parts. If you are using different values for different Name Parts, apply Script to each Name Part and leave Script empty under Name as a whole.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='script-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@script" at="index('namePart-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--Schema: added in accordance with 3.4-->
                                <!--DLF/Aquifer: N/A-->
                                <!--Cluster: include--><xf:group ref=".[@transliteration]" appearance="full"><xf:select1 ref="./@transliteration"><xf:label>Transliteration:</xf:label><xf:hint><p>This field specifies the transliteration (transcription, romanisation) scheme used within Title Information. When specificing the transliteration used, also specify the language employed. There is at present no standard list of transliteration schemes available. If you wish to employ a transliteration on the scheme, please contact <!--contact -->. In general, the Library of Congress transliteration schemes (<!-- NB -->) should be used. If you follow a transliteration scheme authorised by <!--NB-->, choose <!--NB--> as the value and note the language from which the transliteration is made. The following transliteration schemes are authorised by <!--NB-->: Chinese: pinyin Japanese: (modified) Hepburn Korean: <!--NB--> Russian: <!--NB--> Sanskrit: <!--NB--> If you employ a different, but recognised, transliteration scheme, you may have it added to the list. </p><p> Script can be applied the Name as a whole. Do this if you are using only one Script value for all Name Parts. If you are using different values for different Name Parts, apply Script to each Name Part and leave Script empty under Name as a whole.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='transliteration-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@transliteration" at="index('namePart-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group><xf:group ref="." appearance="full"><xf:input ref="." class="text_100"><xf:label>Affiliation: </xf:label><xf:hint><p>Affiliation contains the name, address, etc. of an organisation with which the person in Name was associated when the resource was created. </p><p> If the information is readily available, it may be included.</p></xf:hint></xf:input></xf:group>
                            <!--affiliation input ends-->
                                <!--affiliation delete begins--><xf:trigger class="delete-button"><xf:label class="xforms-group-label-centered">Delete This Affiliation</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:affiliation" at="index('name-repeat')"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/></xf:trigger>
                                <!--affiliation delete ends--></xf:repeat>
                            <!--affiliation repeat ends-->
                            <!--affiliation add begins--><xf:group appearance="full"><xf:trigger ref=".[mods:affiliation]" class="add-button"><xf:label class="xforms-group-label-centered">Add Another Affiliation</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:affiliation" at="index('affiliation-repeat')" position="after" origin="instance('new-instance')/mods:name/mods:affiliation"/></xf:action></xf:trigger></xf:group>
                            <!--affiliation add ends--></fieldset></xf:group>
                    <!--affiliation ends-->
                    <!--description begins-->
                    <!--NB: this can be repeated according to schema 3.3 and 3.4.-->
                    <!--DLF/Aquifer: NOT RECOMMENDED-->
                    <!--Cluster: omit--><xf:group id="fieldset-description" ref=".[mods:description]" appearance="full"><fieldset class="level-2"><div class="join"><legend>Description</legend><span class="xforms-hint"><span onmouseover="show(this, 'hint', true)" onmouseout="show(this, 'hint', false)" class="xforms-hint-icon"/><div class="xforms-hint-value"><p>Description contains a textual description for a name when this is necessary, for example, to distinguish it from other names.</p></div></span></div>
                            <!--description input begins-->
                            <!--description repeat begins--><xf:repeat nodeset="./mods:description" id="description-repeat">
                                <!--DLF/Aquifer: N/A-->
                                <!--Cluster: include?-->
                                <!-- NB: while it does seem reasonable to hold that a name occurs in a certain script or transliteration, it does not in most cases make sense to say that a name is in a certain language. What about William the Conqueror? --><xf:group ref=".[@lang]" appearance="full"><xf:select1 ref="./@lang"><xf:label>Language:</xf:label><xf:hint><p>The language used within Title Information is specified here, if this language is different from the language noted in Language of Resource. The most common languages have been moved to the top of the list. </p><p> Language can be applied the Name as a whole. Do this if you are using only one Language value for all Name Parts. If you are using different values for different Name Parts, apply Language to each Name Part and leave Language empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-3-type-sorted-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@lang" at="index('namePart-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--Schema: added in accordance with 3.4-->
                                <!--DLF/Aquifer: NOT RECOMMENDED]-->
                                <!--Cluster: omit--><xf:group ref=".[@xml:lang]" appearance="full"><xf:select1 ref="./@xml:lang"><xf:label>xml:lang:</xf:label><xf:hint><p>This field is used to specify the language used within a field, using specifications in RFC 3066. RFC 3066 uses the two-character ISO 639-1 codes along with three-character ISO 639-2 codes for those languages not given in 639-1. </p><p> The recommendation is not to use xml:lang, but to use the above Language field. </p><p> Language can be applied the Name as a whole. Do this if you are using only one Language value for all Name Parts. If you are using different values for different Name Parts, apply Language to each Name Part and leave Language empty under Name as a whole. </p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-2-type-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@xml:lang" at="index('namePart-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--Schema: added in accordance with 3.4-->
                                <!--DLF/Aquifer: N/A-->
                                <!--Cluster: include--><xf:group ref=".[@script]" appearance="full"><xf:select1 ref="./@script"><xf:label>Script:</xf:label><xf:hint><p>Use Script to record the script in which the name in rendered. </p><p> Script can be applied the Name as a whole. Do this if you are using only one Script value for all Name Parts. If you are using different values for different Name Parts, apply Script to each Name Part and leave Script empty under Name as a whole.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='script-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@script" at="index('namePart-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group>
                                <!--Schema: added in accordance with 3.4-->
                                <!--DLF/Aquifer: N/A-->
                                <!--Cluster: include--><xf:group ref=".[@transliteration]" appearance="full"><xf:select1 ref="./@transliteration"><xf:label>Transliteration:</xf:label><xf:hint><p>This field specifies the transliteration (transcription, romanisation) scheme used within Title Information. When specificing the transliteration used, also specify the language employed. There is at present no standard list of transliteration schemes available. If you wish to employ a transliteration on the scheme, please contact <!--contact -->. In general, the Library of Congress transliteration schemes (<!-- NB -->) should be used. If you follow a transliteration scheme authorised by <!--NB-->, choose <!--NB--> as the value and note the language from which the transliteration is made. The following transliteration schemes are authorised by <!--NB-->: Chinese: pinyin Japanese: (modified) Hepburn Korean: <!--NB--> Russian: <!--NB--> Sanskrit: <!--NB--> If you employ a different, but recognised, transliteration scheme, you may have it added to the list. </p><p> Script can be applied the Name as a whole. Do this if you are using only one Script value for all Name Parts. If you are using different values for different Name Parts, apply Script to each Name Part and leave Script empty under Name as a whole.</p></xf:hint><xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='transliteration-code']/items/item"><xf:label ref="label"/><xf:value ref="value"/></xf:itemset></xf:select1>
                                    <!-- 
                                        <xf:trigger>
                                        <xf:label class="xforms-label-small">-</xf:label>
                                        <xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/>
                                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:namePart/@transliteration" at="index('namePart-repeat')"/>
                                        </xf:trigger>
                                    --></xf:group><xf:group ref="." appearance="full"><xf:textarea ref="." class="textarea"><xf:label>Description: </xf:label><xf:hint><p>Description contains a textual description for a name when this is necessary, for example, to distinguish it from other names.</p></xf:hint></xf:textarea></xf:group>
                            <!--description input ends-->
                            <!--description delete begins--><xf:trigger class="delete-button"><xf:label class="xforms-group-label-centered">Delete This Description</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name/mods:description" at="index('description-repeat')"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/></xf:trigger>
                            <!--description delete ends--></xf:repeat>
                            <!--description repeat ends-->
                            <!--description add begins--><xf:group appearance="full"><xf:trigger ref=".[mods:description]" class="add-button"><xf:label class="xforms-group-label-centered">Add Another Description</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:description" at="index('description-repeat')" position="after" origin="instance('new-instance')/mods:name/mods:description"/></xf:action></xf:trigger></xf:group>
                            <!--description add ends--></fieldset></xf:group>
                    <!--description ends-->
                    <!--name delete begins--><xf:trigger class="delete-button"><xf:label class="xforms-group-label-centered">Delete This Name</xf:label><xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:name" at="index('name-repeat')"/><xf:toggle case="name-add-node-hide" ev:event="DOMActivate"/></xf:trigger>
                    <!--name delete ends--></xf:repeat>
                <!--name repeat ends-->
                <!--name add begins--><xf:trigger ref=".[mods:name]" class="add-button"><xf:label class="xforms-group-label-centered">Add Another Name</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:name" at="index('name-repeat')" position="after" origin="instance('new-instance')/mods:name"/></xf:action></xf:trigger>
                <!--name add ends--><xf:group id="name-add-element" ref=".[not(./mods:name)]" appearance="full"><xf:trigger ref=".[not(mods:name)]" class="add-button"><xf:label class="xforms-group-label-centered">Add Missing Name</xf:label><xf:action ev:event="DOMActivate"><xf:insert nodeset="mods:form" at="index('name-repeat')" position="after" origin="instance('new-instance')/mods:name"/></xf:action></xf:trigger></xf:group></fieldset></xf:group></div></div>
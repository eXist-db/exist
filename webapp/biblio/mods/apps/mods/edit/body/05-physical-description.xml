<?xml version="1.0" encoding="UTF-8"?> 
<div xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xf="http://www.w3.org/2002/xforms" class="physical-description">
    <fieldset>
        <legend>Physical Descriptions</legend>
        <xf:hint> Physical Description is a wrapper element that contains all subelements relating to physical description information of the resource
            described. Data is input only within each subelement. </xf:hint>
        <!--physicalDescription repeat begins-->
        <xf:repeat nodeset="mods:physicalDescription" id="physicalDescription-repeat">
            <!--physicalDescription input begins-->
            <xf:select1 ref="./@lang">
                <xf:label>Language:</xf:label>
                <xf:hint>Hint</xf:hint>
                <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-3-type-code']/items/item">
                    <xf:label ref="label"/>
                    <xf:value ref="value"/>
                </xf:itemset>
            </xf:select1>
            <!--DLF/Aquifer: NOT RECOMMENDED]-->
            <!--Cluster: omit-->
            <xf:select1 ref="./@xml:lang">
                <xf:label>xml:lang:</xf:label>
                <xf:hint>Hint</xf:hint>
                <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-2-type-code']/items/item">
                    <xf:label ref="label"/>
                    <xf:value ref="value"/>
                </xf:itemset>
            </xf:select1>
            <br/>
            <xf:select1 ref="./@script">
                <xf:label>Script:</xf:label>
                <xf:hint>Hint</xf:hint>
                <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='script-code']/items/item">
                    <xf:label ref="label"/>
                    <xf:value ref="value"/>
                </xf:itemset>
            </xf:select1>
            <xf:select1 ref="./@transliteration">
                <xf:label>Transliteration:</xf:label>
                <xf:hint>Hint</xf:hint>
                <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='transliteration-code']/items/item">
                    <xf:label ref="label"/>
                    <xf:value ref="value"/>
                </xf:itemset>
            </xf:select1>
            <!--physicalDescription input ends-->
            <!--form begins-->
            <fieldset>
                <legend>Form</legend>
                <!--form repeat begins-->
                <xf:repeat nodeset="./mods:form" id="form-repeat">
                    <!--form input begins-->
                    <xf:input ref="." class="text_150">
                        <xf:label>Form:</xf:label>
                        <xf:hint> A designation of a particular physical presentation of a resource. Form includes information that specifies the physical form
                            or medium of material for a resource. Either a controlled list of values or free text may be used. </xf:hint>
                    </xf:input>
                    <xf:select1 ref="./@type">
                        <xf:label>Type:</xf:label>
                        <xf:hint> This attribute is used if desired to specify whether the form concerns materials or techniques, e.g. type="material": oil
                            paint; type="technique": painting. </xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='form-type-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                    <xf:select1 ref="./@authority">
                        <xf:label>Authority:</xf:label>
                        <xf:hint> The name of the authoritative list for a controlled value is recorded here. A list of authorities is maintained at:
                            www.loc.gov/marc/sourcecode/form/formsource.html. The MARC 21 form list contains most of the values defined in fields 008/23 (BK,
                            MU, CR, MX) and 008/29 (MP, VM). Use authority="marcform" to indicate its use. </xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='form-authority-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                    <!--form input ends-->
                    <!--form delete begins-->
                    <xf:trigger ref="self::node()[count(../mods:form) &gt; 1]">
                        <xf:label>Delete This Form</xf:label>
                        <xf:hint>Hint</xf:hint>
                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:physicalDescription/mods:form" at="index('form-repeat')"/>
                    </xf:trigger>
                    <!--form delete ends-->
                    <div class="hr"/>
                </xf:repeat>
                <!--form repeat ends-->
                <!--form add begins-->
                <xf:trigger class="add">
                    <xf:label>Add Form</xf:label>
                    <xf:hint>Hint</xf:hint>
                    <xf:action ev:event="DOMActivate">
                        <xf:insert nodeset="mods:form" at="index('form-repeat')" position="after"
                            origin="instance('insert-templates')/mods:physicalDescription/mods:form"/>
                        <xf:setvalue ref="instance('save-data')/mods:form[last()]" value="''"/>
                    </xf:action>
                </xf:trigger>
                <!--form add ends-->
            </fieldset>
            <!--form ends-->
            <div class="hr"/>
            <!--reformattingQuality begins-->
            <fieldset>
                <legend>Reformatting Quality</legend>
                <!--reformattingQuality repeat begins-->
                <xf:repeat nodeset="./mods:reformattingQuality" id="reformattingQuality-repeat">
                    <!--reformattingQuality input begins-->
                    <xf:select1 ref=".">
                        <xf:label>Reformatting Quality:</xf:label>
                        <xf:hint>Hint</xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='reformatting-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                    <!--reformattingQuality input ends-->
                    <!--reformattingQuality delete begins-->
                    <xf:trigger ref="self::node()[count(../mods:reformattingQuality) &gt; 1]">
                        <xf:label>Delete This Reformatting Quality</xf:label>
                        <xf:hint>Hint</xf:hint>
                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:physicalDescription/mods:reformattingQuality"
                            at="index('reformattingQuality-repeat')"/>
                    </xf:trigger>
                    <!--reformattingQuality delete ends-->
                    <div class="hr"/>
                </xf:repeat>
                <!--reformattingQuality repeat ends-->
                <!--reformattingQuality add begins-->
                <xf:trigger class="add">
                    <xf:label>Add Reformatting Quality</xf:label>
                    <xf:hint>Hint</xf:hint>
                    <xf:action ev:event="DOMActivate">
                        <xf:insert nodeset="mods:reformattingQuality" at="index('reformattingQuality-repeat')" position="after"
                            origin="instance('insert-templates')/mods:physicalDescription/mods:reformattingQuality"/>
                        <xf:setvalue ref="instance('save-data')/mods:role[last()]" value="''"/>
                    </xf:action>
                </xf:trigger>
                <!--reformattingQuality add ends-->
            </fieldset>
            <!--reformattingQuality ends-->
            <!--internetMediaType begins-->
            <fieldset>
                <legend>Internet Media Type</legend>
                <!--internetMediaType repeat begins-->
                <xf:repeat nodeset="./mods:internetMediaType" id="internetMediaType-repeat">
                    <!--internetMediaType input begins-->
                    <xf:select1 ref=".">
                        <xf:label>Internet Media Type:</xf:label>
                        <xf:hint> An identification of the electronic format type, or the data representation of the resource. Internet Media Type specifies the
                            electronic format type, such as text/html, ASCII, Postscript file, executable application or JPEG image. It is roughly equivalent to
                            MARC 21 field 856 subfield $q, although subfield $q may also contain other designations of electronic format. The Internet Media
                            Type value is generally taken from a controlled list, especially from the Internet Media types (MIME types) (see:
                            www.iana.org/assignments/media-types/index.html for a complete list). </xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='internet-media-type-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                    <!--internetMediaType input ends-->
                    <!--internetMediaType delete begins-->
                    <xf:trigger ref="self::node()[count(../mods:internetMediaType) &gt; 1]">
                        <xf:label>Delete This Internet Media Type</xf:label>
                        <xf:hint>Hint</xf:hint>
                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:physicalDescription/mods:internetMediaType"
                            at="index('internetMediaType-repeat')"/>
                    </xf:trigger>
                    <!--internetMediaType delete ends-->
                    <div class="hr"/>
                </xf:repeat>
                <!--internetMediaType repeat ends-->
                <!--internetMediaType add begins-->
                <xf:trigger class="add">
                    <xf:label>Add Internet Media Type</xf:label>
                    <xf:hint>Hint</xf:hint>
                    <xf:action ev:event="DOMActivate">
                        <xf:insert nodeset="mods:internetMediaType" at="index('internetMediaType-repeat')" position="after"
                            origin="instance('insert-templates')/mods:physicalDescription/mods:internetMediaType"/>
                        <xf:setvalue ref="instance('save-data')/mods:internetMediaType[last()]" value="''"/>
                    </xf:action>
                </xf:trigger>
                <!--internetMediaType add ends-->
            </fieldset>
            <!--internetMediaType ends-->
            <!--extent begins-->
            <fieldset>
                <legend>Extent</legend>
                <!--extent repeat begins-->
                <xf:repeat nodeset="./mods:extent" id="extent-repeat">
                    <!--extent input begins-->
                    <xf:input ref="." class="text_50">
                        <xf:label>Extent:</xf:label>
                        <xf:hint> A statement of the number and specific material of the units of the resource that express physical extent. Extent may be used
                            with electronic resources, e.g. digitised collection of slides, to show how many slides constitute the resource. </xf:hint>
                    </xf:input>
                    <!--extent input ends-->
                    <!--extent delete begins-->
                    <xf:trigger ref="self::node()[count(../mods:extent) &gt; 1]">
                        <xf:label>Delete This Extent</xf:label>
                        <xf:hint>Hint</xf:hint>
                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:physicalDescription/mods:extent" at="index('extent-repeat')"/>
                    </xf:trigger>
                    <!--extent delete ends-->
                    <div class="hr"/>
                </xf:repeat>
                <!--extent repeat ends-->
                <!--extent add begins-->
                <xf:trigger class="add">
                    <xf:label>Add Extent</xf:label>
                    <xf:hint>Hint</xf:hint>
                    <xf:action ev:event="DOMActivate">
                        <xf:insert nodeset="mods:extent" at="index('extent-repeat')" position="after"
                            origin="instance('insert-templates')/mods:physicalDescription/mods:extent"/>
                        <xf:setvalue ref="instance('save-data')/mods:extent[last()]" value="''"/>
                    </xf:action>
                </xf:trigger>
                <!--extent add ends-->
            </fieldset>
            <!--extent ends-->
            <!--digitalOrigin begins-->
            <fieldset>
                <legend>Digital Origin</legend>
                <!--digitalOrigin repeat begins-->
                <xf:repeat nodeset="./mods:digitalOrigin" id="digitalOrigin-repeat">
                    <!--digitalOrigin input begins-->
                    <xf:select1 ref=".">
                        <xf:label>Digital Origin:</xf:label>
                        <xf:hint> A designation of the source of a digital file important to its creation, use and management. Digital Origin may indicate the
                            source of a digital file important to its creation, use and management. </xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='digital-origin-type-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                    <!--digitalOrigin input ends-->
                    <!--digitalOrigin delete begins-->
                    <xf:trigger ref="self::node()[count(../mods:digitalOrigin) &gt; 1]">
                        <xf:label>Delete This Digital Origin</xf:label>
                        <xf:hint>Hint</xf:hint>
                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:physicalDescription/mods:digitalOrigin"
                            at="index('digitalOrigin-repeat')"/>
                    </xf:trigger>
                    <!--digitalOrigin delete ends-->
                    <div class="hr"/>
                </xf:repeat>
                <!--digitalOrigin repeat ends-->
                <!--digitalOrigin add begins-->
                <xf:trigger class="add">
                    <xf:label>Add Digital Origin</xf:label>
                    <xf:hint>Hint</xf:hint>
                    <xf:action ev:event="DOMActivate">
                        <xf:insert nodeset="mods:digitalOrigin" at="index('digitalOrigin-repeat')" position="after"
                            origin="instance('insert-templates')/mods:physicalDescription/mods:digitalOrigin"/>
                        <xf:setvalue ref="instance('save-data')/mods:digitalOrigin[last()]" value="''"/>
                    </xf:action>
                </xf:trigger>
                <!--digitalOrigin add ends-->
            </fieldset>
            <!--digitalOrigin ends-->
            <!--note begins-->
            <fieldset>
                <legend>Notes</legend>
                <!--note repeat begins-->
                <xf:repeat nodeset="./mods:note" id="physical-description-note-repeat">
                    <!--note input begins-->
                    <xf:select1 ref="./@type" selection="open">
                        <xf:label>Type:</xf:label>
                        <xf:hint> This attribute is used if desired to specify whether the note concerns materials or techniques, e.g. type="material": oil
                            paint; type="technique": painting. </xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='note-type-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                    <!--DLF/Aquifer: RECOMMENDED IF APPLICABLE-->
                    <!--Cluster: omit-->
                    <xf:input ref="./@xlink" class="text_150">
                        <xf:label>XLink: </xf:label>
                        <xf:hint> The xlink attribute is used to reference an external resource, such as a second metadata record, such as a Related Item or a
                            Table Of Contents. </xf:hint>
                    </xf:input>
                    <xf:select1 ref="./@authority">
                        <xf:label>Authority:</xf:label>
                        <xf:hint> The name of the authoritative list for a controlled value is recorded here. A list of authorities is maintained at:
                            www.loc.gov/marc/sourcecode/note/notesource.html. The MARC 21 form list contains most of the values defined in fields 008/23 (BK,
                            MU, CR, MX) and 008/29 (MP, VM). Use authority="marcform" to indicate its use. </xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='note-authority-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                    <br/>
                    <xf:select1 ref="./@lang">
                        <xf:label>Language:</xf:label>
                        <xf:hint>Hint</xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-3-type-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                    <!--DLF/Aquifer: NOT RECOMMENDED]-->
                    <!--Cluster: omit-->
                    <xf:select1 ref="./@xml:lang">
                        <xf:label>xml:lang:</xf:label>
                        <xf:hint>Hint</xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-2-type-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                    <br/>
                    <xf:select1 ref="./@script">
                        <xf:label>Script:</xf:label>
                        <xf:hint>Hint</xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='script-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                    <xf:select1 ref="./@transliteration">
                        <xf:label>Transliteration:</xf:label>
                        <xf:hint>Hint</xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='transliteration-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                    <br/>
                    <xf:input ref="./@displayLabel" class="text_150">
                        <xf:label>Display Label:</xf:label>
                        <xf:hint>Hint</xf:hint>
                    </xf:input>
                    <br/>
                    <xf:textarea ref="instance('save-data')/mods:physicalDescription/mods:note" class="textarea">
                        <xf:label>Note:</xf:label>
                        <xf:hint> A designation of a particular physical presentation of a resource. Form includes innoteation that specifies the physical note
                            or medium of material for a resource. Either a controlled list of values or free text may be used. </xf:hint>
                    </xf:textarea>
                    <!--note input ends-->
                    <!--note delete begins-->
                    <xf:trigger ref="self::node()[count(../mods:note) &gt; 1]">
                        <xf:label>Delete This Note</xf:label>
                        <xf:hint>Hint</xf:hint>
                        <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:physicalDescription/mods:note"
                            at="index('physical-description-note-repeat')"/>
                    </xf:trigger>
                    <!--note delete ends-->
                    <div class="hr"/>
                </xf:repeat>
                <!--note repeat ends-->
                <!--note add begins-->
                <xf:trigger class="add">
                    <xf:label>Add Note</xf:label>
                    <xf:hint>Hint</xf:hint>
                    <xf:action ev:event="DOMActivate">
                        <xf:insert nodeset="mods:note" at="index('physical-description-note-repeat')" position="after"
                            origin="instance('insert-templates')/mods:physicalDescription/mods:note"/>
                        <xf:setvalue ref="instance('save-data')/mods:note[last()]" value="''"/>
                    </xf:action>
                </xf:trigger>
                <!--note add ends-->
            </fieldset>
            <!--note ends-->
            <div class="hr"/>
            <!--physicalDescription delete begins-->
            <xf:trigger ref="self::node()[count(../mods:physicalDescription) &gt; 1]">
                <xf:label>Delete This Physical Description</xf:label>
                <xf:hint>Hint</xf:hint>
                <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:physicalDescription" at="index('physicalDescription-repeat')"/>
            </xf:trigger>
            <!--physicalDescription delete ends-->
            <div class="hr"/>
        </xf:repeat>
        <!--physicalDescription repeat ends-->
        <!--physicalDescription add begins-->
        <xf:trigger class="add">
            <xf:label>Add Physical Description</xf:label>
            <xf:hint>Hint</xf:hint>
            <xf:action ev:event="DOMActivate">
                <xf:insert nodeset="mods:physicalDescription" at="index('physicalDescription-repeat')" position="after"
                    origin="instance('insert-templates')/mods:physicalDescription"/>
                <xf:setvalue ref="instance('save-data')/mods:physicalDescription[last()]" value="''"/>
            </xf:action>
        </xf:trigger>
        <!--physicalDescription add ends-->
    </fieldset>
</div>
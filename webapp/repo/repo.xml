<?xml version="1.0" encoding="UTF-8"?>
<book>
    <bookinfo>
        <graphic fileref="../logo.jpg"/>
        <productname>Open Source Native XML Database</productname>
        <title>Package Repository</title>
    	<subject>Package Repository</subject>
    	<date>July 2010</date>
        <author>
            <firstname>James</firstname>
            <surname>Fuller</surname>
            <affiliation>
                <address format="linespecific"><email>jim.fuller at webcomposite.com</email></address>
            </affiliation>
        </author>
    </bookinfo>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="sidebar.xml"/>

    <chapter>
    	<title>Package Repository</title>
    	<section>
        <title>Overview</title>
        <para>In any computing environment, managing dependencies is difficult. The eXist-db package repository
            makes it easy to manage and deploy external packages (.xar archives) which include everything they need to run
            third party XQuery libraries to full applications or other XML technology functionality.
        </para>
         <para>
             eXist-db is integrated with an <a href="http://expath.org/modules/pkg/">EXPath repository</a> which can contain .xar packages containing
             jars, xquery libraries, xslt and other XML Technology packages.
         </para>
        <para>
            Deploying an XQuery package, such as the popular <a href="http://www.functx.com" target="functx">FunctX XQuery library</a>, into the repository can be reduced to a single click <a href="install-functx.xqy" target="_example">(install now)</a>.
            If everything went well, the <filename>functx-1.0.xar</filename> package (which was included in the eXist installation in <filename class="directory">EXIST_HOME/webapp/repo/packages</filename>) should now be loaded.  
            To complete the installation, you need to restart eXist.  Once the installation is complete, the
            following XQuery should run properly in the <a href="/exist/sandbox/sandbox.xql" target="sandbox">XQuery sandbox</a>.

<example>
            <title>Functx XQuery library example</title>
            <programlisting>
            <markup>
import module namespace functx="http://www.functx.com";

functx:capitalize-first('hello')
            </markup>
            </programlisting>
</example>
            Also, you should see the FunctX library when you <a href="/exist/rest/db?_query=import%20module%20namespace%20repo=%22http://exist-db.org/xquery/repo%22;%20repo:list%28%29" target="list">list installed packages</a>.
            </para>
        <para>
            <important>
                <para>Any newly installed packages still requires you to restart eXist-db, a limitation that we hope to address soon.</para>
            </important>

        </para>
    </section>

        <section>
            <title>Installation</title>
            <para>
                This module relies on the presence of the <filename>pkg-repo.jar</filename> file in the <filename class="directory">EXIST_HOME/lib/core</filename> folder,
                which is provided with eXist 1.5 dev.  It also requires that the compression module be enabled.  (Both modules are now enabled by default in eXist 1.5 dev.)
            </para>
            <para>
               If you are having any problems, please confirm the following: 
                <ul>
                    <li>
                        include.module.expathrepo = true and include.module.compression = true
                        in your <filename>extensions/local.build.properties</filename>
                     </li>
                    <li>
                        If either of these was false, rebuild eXist (so the extension modules get built)
                    </li>
                <li>
Also, make sure the following module elements in your <filename>conf.xml</filename> are present and not commented out:
            <programlisting>
            <markup>

&lt;module class="org.exist.xquery.modules.expathrepo.ExpathPackageModule"
        uri="http://exist-db.org/xquery/repo" /&gt;

&lt;module class="org.exist.xquery.modules.compression.CompressionModule"
        uri="http://exist-db.org/xquery/compression" /&gt;

            </markup>
            </programlisting></li>
            
                    <li>Then restart eXist, and all of the features of the Package Repository should work.</li></ul>
            
            </para>
        </section>

        <section>
            <title>Administration</title>
            <para>
                You can control which modules are loaded into eXist using the <a href="/exist/admin/admin.xql?panel=repo">Package Repository</a> admin pane.
                From here you can upload packages from your computer or from public package repositories.
            </para>
        </section>

    <section>
        <title>.xar Archive</title>
        <para>The repository supports package archives in the .xar format, a compressed archive format that can contain XQuery, XSLT, Schema, and/or XProc modules.

 </para>
<para>
    A .xar package format contains a package description file, <filename>expath-pkg.xml</filename> (see the <a href="http://expath.org/spec/pkg#d2e113">Package descriptor specification</a>). For example, the
    <a href="http://www.functx.com" target="functx">FunctX XQuery Library</a> is packaged as follows:
<example>
            <title>functx-1.0.xar package distribution</title>
            <programlisting>
            <markup>
expath-pkg.xml
functx/
   functx.xql
   functx.xsl
            </markup>
            </programlisting>
</example>
</para>
        <para>We have shipped a few .xar packages in the <a href="/exist/repo/packages" target="dir"><filename class="directory">/exist/repo/packages</filename></a>  which get built automatically
            by eXist. You can use to test installing a package. This is achieved by using controller.xql to identify
        <ul>
            <li>Functx-1.0 <a href="packages/functx-1.0.xar?install=true" target="install">install</a> | <a href="packages/functx-1.0.xar?remove=true" target="remove">remove</a> </li>
            <li>XQuery-JSON-0.1 <a href="packages/xquery-json-0.1.xar?install=true" target="install">install</a> | <a href="packages/xquery-json-0.1.xar?remove=true" target="remove">remove</a> </li>
        </ul>
            A more advanced package could contain other archive resources.
        </para>
    </section>
        <section>
            <title>Adapting eXist's modules to the .xar format</title>
    <para>eXist own modules could be adapted to the .xar format.  The following <filename>expath-pkg.xml</filename> package describes eXist's own math module.
    <example>
        <title>expath-pkg.xml package description for eXist's math module</title>
			<programlisting>
			<markup>
&lt;package xmlns="http://expath.org/ns/pkg"&gt;
   &lt;module name="math" version="1.0"&gt;
      &lt;title&gt;Math extension packaged as xar&lt;/title&gt;
      &lt;exist&gt;
         &lt;jar&gt;math.jar&lt;/jar&gt;
         &lt;java&gt;
            &lt;namespace&gt;http://exist-db.org/xquery/math&lt;/namespace&gt;
            &lt;class&gt;org.exist.xquery.modules.math.MathModule&lt;/class&gt;
         &lt;/java&gt;
      &lt;/exist&gt;
   &lt;/module&gt;
&lt;/package&gt;
            </markup>
			</programlisting>
        </example>
</para>

<para>
The <a href="packages/math-example/exist-math" target="math"><filename>math.jar</filename></a> referenced here needs to contain the correct <filename>MANIFEST.MF</filename>, which lists any other
    dependent jars (<filename>exist.jar</filename> and <filename>xmldb.jar</filename>), as shown below.

<example>
        <title>math.jar MANIFEST.MF</title>
        <programlisting>
        <markup>
Manifest-Version: 1.0
Ant-Version: Apache Ant 1.7.1
Created-By: 14.1-b02-90 (Apple Inc.)
Project-Name: eXist
Project-Version: 1.5.0dev
Class-Path: exist.jar xmldb.jar
        </markup>
        </programlisting>
    </example>

</para>
<para>
Then it's just a matter of including all of the extension module's classes in the jar.
<example>
        <title>The "xar-math" target in extensions/modules/build.xml creates the math.jar which ships inside exist-math-1.0.xar </title>
        <programlisting>
        <markup>
drwxr-xr-x         0  31-Jul-2010  22:09:40  META-INF/
-rw-r--r--       183  31-Jul-2010  22:09:38  META-INF/MANIFEST.MF
drwxr-xr-x         0  31-Jul-2010  14:03:36  org/
drwxr-xr-x         0  31-Jul-2010  14:03:36  org/exist/
drwxr-xr-x         0  31-Jul-2010  14:03:36  org/exist/xquery/
drwxr-xr-x         0  31-Jul-2010  14:03:46  org/exist/xquery/modules/
drwxr-xr-x         0  31-Jul-2010  14:03:46  org/exist/xquery/modules/math/
-rw-r--r--      1867  31-Jul-2010  14:03:46  org/exist/xquery/modules/math/MathModule.class
-rw-r--r--      3695  31-Jul-2010  14:03:46  org/exist/xquery/modules/math/NoParamFunctions.class
-rw-r--r--      6996  31-Jul-2010  14:03:46  org/exist/xquery/modules/math/OneParamFunctions.class
-rw-r--r--      4522  31-Jul-2010  14:03:46  org/exist/xquery/modules/math/TwoParamFunctions.class
        </markup>
        </programlisting>
</example>

</para>

<para>
We will probably be repackaging all of the current extensions to take advantage of this.  For now you can test deploying
    eXist's own extensions using the <a href="packages/math-example" target="math">exist-math-1.0.xar</a>, which is eXist's own math module
    repackaged up using the .xar format.
    <ul>
        <li>exist-math-1.0 <a href="packages/exist-math-1.0.xar?install=true" target="install">install</a> | <a href="packages/exist-math-1.0.xar?remove=true" target="remove">remove</a> </li>
    </ul>

Once you have installed and restarted eXist you should now be able to use the math functions.    
<example>
            <title>List existing packages</title>
            <programlisting>
            <markup>
import module namespace math="http://exist-db.org/xquery/math";

math:pi()
            </markup>
            </programlisting>
    <a href="/exist/rest/db?_query=import module namespace math='http://exist-db.org/xquery/math';math:pi()" target="_example">click here to test math function</a>

</example>

</para>
    </section>

    <section>
        <title>Library and Application packages</title>
        <para>There are two kinds of packages:
            <ul>
                <li>Library packages: used when you want to distribute and deploy code libraries into the eXist repository</li>
                <li>Application packages: used when you want to distribute and deploy applications into eXist and store them in the database</li>
            </ul>
        </para>
        <para>
            Each package type will contain both an <filename>expath-pkg.xml</filename> and <filename>repo.xml</filename> metadata file. The <filename>expath-pkg.xml</filename> file contains
            the information for relating URI namespaces with a specific library. The <filename>repo.xml</filename> file is an eXist-db specific metadata
            file which defines if the package is a library or an application.
            </para>
        <para>The <filename>myapp-0.1.xar</filename> contains an example application.  Its <filename>repo.xml</filename> file is as follows:
        
<example>
            <title>myapp repo.xml</title>
            <programlisting>
            <markup>
&lt;meta xmlns="http://exist-db.org/xquery/repo"&gt;
  &lt;author&gt;James Fuller&lt;/author&gt;
  &lt;website&gt;http://www.webcomposite.com&lt;/website&gt;
  &lt;license&gt;GNU-LGPL&lt;/license&gt;
  &lt;copyright&gt;true&lt;/copyright&gt;
  &lt;description&gt;Example illustrating how to package up applications.&lt;/description&gt;
  &lt;type&gt;application&lt;/type&gt;
  &lt;status&gt;experimental&lt;/status&gt;
&lt;/meta&gt;
            </markup>
            </programlisting>
</example>

            The myapp .xar file application package contains the following files:

<example>
            <title>List contents of myapp Application package</title>
            <programlisting>
            <markup>
drwxr-xr-x         0  24-Aug-2010  13:44:36  myapp/
drwxr-xr-x         0  24-Aug-2010  11:56:38  myapp/data/
drwxr-xr-x         0  23-Aug-2010  19:14:30  myapp/lib/
-rw-r--r--       288  23-Aug-2010  19:14:22  expath-pkg.xml
-rw-r--r--       115  24-Aug-2010  13:16:50  myapp/data/contact.xml
-rw-r--r--        94  24-Aug-2010  13:37:04  myapp/index.html
-rw-r--r--       147  24-Aug-2010  12:50:44  myapp/lib/util.xqm
-rw-r--r--     17351  24-Aug-2010  13:33:14  myapp/logo.jpg
-rw-r--r--       250  24-Aug-2010  13:43:30  myapp/test.xqy
-rw-r--r--       336  24-Aug-2010  12:14:30  repo.xml
            </markup>
            </programlisting>
</example>

        After installing this .xar file via the Package Repository admin pane and restarting eXist, you can activate the application. 
        Activating it will copy the <filename class="directory">myapp</filename> directory from the .xar to a collection of the same name inside of the database, <filename class="directory">/db/myapp</filename>.   
        </para>
            <para>For more complex scenarios, <filename>repo.xml</filename> provides additional
                features to specify the target collection or run pre-/post-install scripts. The
                    <filename>mobile-function-doc</filename> package provides an example:</para>
        
        <example>
            <title>Complex example using a post-install script</title>
            <programlisting>
<markup><![CDATA[<meta xmlns="http://exist-db.org/xquery/repo">
  <author>Wolfgang Meier</author>
  <website>http://exist-db.org</website>
  <license>GNU-LGPL</license>
  <copyright>true</copyright>
  <description>Mobile Function Documentation (based on jQuery Mobile)</description>
  <type>application</type>
  <target>/db</target>
  <permissions user="guest" group="guest" mode="0444"/>
  <status>stable</status>
  <finish>post-install.xql</finish>
</meta>]]></markup></programlisting>
        </example>
        
        <para>The important elements of a <filename>repo.xml</filename> are described below:</para>
        
        <variablelist>
            <varlistentry>
                <term>target</term>
                <listitem>
                    <para>Specifies the collection where the contents of the package will be stored to. Top-level files in the package will end up
                    in this collection, resources in sub directories will go into sub collections.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>permissions</term>
                <listitem>
                    <para>The permissions to use when uploading package contents. All resources and collections will be owned by the specified
                    user and permissions will be changed to those given in <option>mode</option>. If the user does not exist, the deploy function 
                    will try to create it, using the password specified in attribute <option>password</option>.</para>
                    <para>For more control over permissions, use a post-install XQuery script.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>prepare</term>
                <listitem>
                    <para>Points to an XQuery script inside the root of the package archive, which will be executed before and package data is 
                    uploaded to the database. Use this script to create users or upload index configurations.</para>
                    <para>The file system path to the current package directory and eXist's home directory are passed to the script as external 
                    variables:</para>
                    
                    <synopsis language="xquery">declare variable $home external;
declare variable $dir external;</synopsis>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>finish</term>
                <listitem>
                    <para>Like <sgmltag>prepare</sgmltag>, this element should point to an XQuery script, which will be executed <emphasis>after</emphasis>
                    all data has been uploaded to the database.</para>
                    <para>For example, the <filename>mobile-function-doc</filename> package uses a post-install script to parse eXist docs and 
                        index them.</para>
                </listitem>
            </varlistentry>
            
        </variablelist>
        
    </section>

     <section>
        <title>Interacting with the Repository from XQuery</title>
<para>
 The repository includes an extension module which provides three functions for programmatically controlling repository
    from XQuery:
</para>
         <section>
            <title>repo:list()</title>
<para>
    The repo:list() function returns a sequence of strings containing the names of installed packages.

    <example>
			<title>packages/list-repo.xqy: List existing packages</title>
			<programlisting>
			<markup>
import module namespace repo="http://exist-db.org/xquery/repo";

repo:list()
            </markup>
			</programlisting>
        <a href="list-repo.xqy" target="_example">click here to list packages in repository</a>
        </example>

</para>
 </section>
 <section>
            <title>repo:install( $uri )</title>
    <para>
        The repo:install() function returns a boolean value indicating success or failure of installation.

        <example>
			<title>packages/install-functx.xqy: Install existing packages</title>
			<programlisting>
			<markup>
import module namespace repo="http://exist-db.org/xquery/repo";

repo:install('http://127.0.0.1:8080/exist/repo/packages/functx-1.0.xar')
            </markup>
			</programlisting>
            <a href="install-functx.xqy" target="_example">click here to install functx</a>
</example>
 </para>
</section>

<section>
            <title>repo:remove( $package-name )</title>
    <para>
        The repo:remove() function returns a sequence of strings containing the names of installed packages.

        <example>
			<title>packages/remove-functx.xqy: Remove existing packages</title>
			<programlisting>
			<markup>
import module namespace repo="http://exist-db.org/xquery/repo";

repo:remove('functx-1.0')
            </markup>
			</programlisting>
            <a href="remove-functx.xqy" target="_example">click here to remove functx</a>

</example>
 </para>
<para>
 <important>
    <para>These functions will soon be usable only by DBA user; for now, as we are still developing the Package Repository, they will be
    available by guest user.</para>
</important>
</para>
 </section>

<section>
    <title>repo:deploy( $packageName )</title>
    
    <para>Deploy the application package into the database, using the configuration specified in <filename>repo.xml</filename> (see above).</para>
</section>
         
     </section>

    <section>
        <title>Public Repository</title>
        <para>Each eXist XML Database ships with its own public repository, a facility for which packages can be distributed
        to other eXist-db instances. Public repositories are used by the eXist-db repo administration module.</para>
        <graphic fileref="existdb-system.jpg"/>
        <para>The Public repository is empty by default and can be reached <a href="public/">here</a>.</para>
         <important>
            <para>To upload packages into this public repository you must amend permissions on the <filename class="directory">/db/repo</filename> collection.</para>
        </important>
    </section>

    <section>
        <title>Resources</title>
        <ul>
            <li><a href="http://expath.org/spec/pkg" target="_resource">EXPath Package Specification</a>: Community defined specification</li>
            <li><a href="http://expath.org/modules/pkg/implems" target="_resource">EXPath Package Implementers</a>: Information on vendor specific EXPath repository implementations.</li>
        </ul>
    </section>

    <section>
        <title>FAQ</title>
        <section>
            <title>Why do we need package management?</title>
            <para>The package repository makes it easy for you to create and distribute your own libraries and applications.  
                Also, the more we move eXist extensions into .xar packages, the more we can reduce the weight of the eXist core 
                and thereby prevent "bloat".</para>
        </section>
        <section>
            <title>Where is the package repository located?</title>
            <para>The repository is created under the <filename class="directory">EXIST_HOME/webapp/WEB-INF/expathrepo</filename> directory.  Alternatively, it may be created in the <filename class="directory">java.io.tmp</filename> directory.</para>
        </section>
        <section>
            <title>Can I interact with the repository from the command line?</title>
            <para>Yes, currently you can run the EXPath <a href="http://code.google.com/p/expath-pkg/">xrepo</a> command line utility againt the eXist package repository. In the future
            we may extend the EXPath package specification to suit eXist's needs (which may make it incompatible). In addition, you can use
            eXist's <a href="/exist/ant-tasks.xml#N1041F" target="ant">xdb:query</a> Ant task to install and remove packages.
        </para>
        </section>    
        <section>
            <title>Can we use package types other then XQuery modules?</title>
        <para>Currently we are focused on making XQuery module packages, though in the near future we should be able to deploy full applications
            with XProc and Schema.</para>
        </section>
        <section>
            <title>I want more developer information</title>
        <para>You can find more information in the sourcecode README at extensions/modules/src/org.exist.modules/expathrepo/readme.txt.</para>
        </section>
</section>
</chapter>
    
</book>

<?xml version="1.0" encoding="UTF-8"?>
<book>
    <bookinfo>
        <graphic fileref="../logo.jpg"/>
        <productname>Open Source Native XML Database</productname>
        <title>Package Management Repository</title>
    	<subject>Package Management Repository</subject>
    	<date>July 2010</date>
        <author>
            <firstname>James</firstname>
            <surname>Fuller</surname>
            <affiliation>
                <address format="linespecific"><email>jim.fuller at webcomposite.com</email></address>
            </affiliation>
        </author>
    </bookinfo>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="sidebar.xml"/>

    <chapter>
    	<title>Package Repository</title>
    	<section>
        <title>Overview</title>
        <para>In any computing environment, managing dependencies is difficult. The eXist-db package repository
            makes it easy to manage and deploy external packages (.xar archives) which include everything they need to run
            third party XQuery libraries to full applications or other XML technology functionality.
        </para>
         <para>
             eXist-db now uses expath repository to resolve external XQuery dependencies located in [package repository
             to be used by your own XQuery. Soon we will also have support for being able to deploy and manage
             other XML technologies like XSLT, Xproc, Schema, and data/resources.
         </para>
        <para>
            Using an XQuery package in the repository is as simple as importing it the normal way.
<example>
            <title>List existing packages</title>
            <programlisting>
            <markup>
import module namespace repo="http://www.functx.com";

functx:capitalize-first('hello')
            </markup>
            </programlisting>
    <a href="install-functx.xqy" target="_example">click here to install functx</a>

</example>
            If you installed the functx-1.0.xar package the above would work as eXist package manager will resolve the module
            from the repository.
        </para>
        <para>
            <important>
                <para>eXist repository is based on the <a href="http://expath.org/modules/pkg/">expath package repository specification</a>.</para>
            </important>
            <important>
                <para>Any newly installed packages still requires you to restart eXistdb, a limitation we will be addressing in the near future.</para>
            </important>

        </para>
    </section>

        <section>
            <title>Installation</title>
            <para>
                This module relies on the presence of the following jar files in the EXIST_HOME/lib/core folder. This jar
                is included in the lib/core already.
<example>
            <programlisting>
            <markup>
pkg-repo.jar
            </markup>
            </programlisting>
</example>

</para>
            <para>
               If you are working off development /trunk you will need to do the following as eXist-db now depends on
                package management repository.
                <ul>
                    <li>
                        svn update to pick up new code
                    </li>
                    <li>
                        ensure include.module.expathrepo = true in your extensions/local.build.properties
                     </li>
                    <li>
                        rebuild eXist (so repo extension module gets built)
                    </li>
                </ul>
You will then need to add the following module element to your conf.xml
<example>
            <programlisting>
            <markup>
&lt;module class="org.exist.xquery.modules.expathrepo.ExpathPackageModule"
        uri="http://exist-db.org/xquery/repo" /&gt;

            </markup>
            </programlisting>
</example>

            </para>
        </section>

    <section>
        <title>.xar Archive</title>
        <para>The repository supports package archive in .xar format, containing XQuery, XSLT, Schema and XProc modules

 </para>
<para>
    A .xar package format is a set of files bundled with a package description (expath-pkg.xml). For example, The
    <a href="http://www.functx.com" target="functx">FunctX XQuery library</a> is packaged up as follows
<example>
            <title>functx-1.0.xar package distribution</title>
            <programlisting>
            <markup>
expath-pkg.xml
functx/
   functx.xql
   functx.xsl
            </markup>
            </programlisting>
</example>
</para>
<para>The expath-pkg.xml contains <a href="http://expath.org/modules/pkg.html#d2e112" target="expathspec">package description</a>. The
    .xar comprises of the zipped up distribution.
</para>


        <para>We have shipped a few .xar packages in the <a href="http://127.0.0.1:8080/exist/repo/packages" target="dir">.xar directory</a> which you can use
            to test installing a package. This is achieved by using controller.xql to identify

        <ul>
            <li><a href="packages/functx-1.0.xar?install=true" target="install">one-click install Functx-1.0</a> </li>
            <li><a href="packages/fxsl-1.0.xar?install=true" target="install">one-click install FXSL-1.0</a> </li>
            <li><a href="packages/Invoice-1.0.xar?install=true" target="install">one-click install example app Invoice-1.0</a> </li>
        </ul>
    </para>
<para>
</para>
    </section>

     <section>
        <title>Using Repository from XQuery</title>
<para>
 The repository includes an extension module which provides three functions for programmatically controlling repository
    from XQuery
</para>
         <section>
            <title>repo:list()</title>
<para>
    The repo:list() function returns a sequence of strings containing the names of installed packages.

    <example>
			<title>List existing packages</title>
			<programlisting>
			<markup>
import module namespace repo="http://exist-db.org/xquery/repo";

repo:list()
            </markup>
			</programlisting>
        <a href="list-repo.xqy" target="_example">click here to list packages in repository</a>
        </example>

</para>
 </section>
 <section>
            <title>repo:install( URI )</title>
    <para>
        The repo:install() function returns a boolean value indicating success or failure of installation.

        <example>
			<title>Install existing packages</title>
			<programlisting>
			<markup>
import module namespace repo="http://exist-db.org/xquery/repo";

repo:install('http://127.0.0.1:8080/exist/repo/packages/functx-1.0.xar')
            </markup>
			</programlisting>
            <a href="install-functx.xqy" target="_example">click here to install functx</a>
</example>
 </para>
</section>

<section>
            <title>repo:remove( package name )</title>
    <para>
        The repo:remove() function returns a sequence of strings containing the names of installed packages.

        <example>
			<title>Remove existing packages</title>
			<programlisting>
			<markup>
import module namespace repo="http://exist-db.org/xquery/repo";

repo:remove('functx-1.0')
            </markup>
			</programlisting>
            <a href="remove-functx.xqy" target="_example">click here to remove functx</a>

</example>
 </para>
 </section>

    </section>

    <section>
        <title>Resources</title>
        <ul>
            <li><a href="http://expath.org" target="_resource">EXPath</a>: Florent Georges maintains this Community defined extensions to XPath. Currently, xprocxq uses expath http-client module.</li>
            <li><a href="http://expath.org/modules/pkg/" target="_resource">Expath Packaging Documentation</a>: Information on vendor specific expath repository implementations.</li>
            <li><a href="http://expath.org/modules/pkg.html" target="_resource">Expath Package Specification</a>: Community defined specification</li>
        </ul>
    </section>

    <section>
        <title>FAQ</title>
        <section>
            <title>Why do we need this ?</title>
        <para>Dependency management is difficult, but its also important to gaurd against 'bloat'. Over the coming weeks/months we will
        be exporting functionality into third party .xar packages and it will reduce eXist core as well make it easy for you 
        to create and distribute your own libraries and applications.</para>
        </section>
        <section>
            <title>Where is the package repository located ?</title>
        <para>The repository gets created under the webapp/WEB-INF/expathrepo directory, alternatively it will use the directory stored in java.io.tmp directory to install the repository.</para>
        </section>
        <section>
            <title>Can I interact with the repository from the commandline ?</title>
        <para>Yes, currently you can run the expath package jar commandline utility againt the eXist package repository. In the future
            we may extend the expath package specification to suit eXist needs which may make it incompatible.
        </para>
        </section>    
        <section>
            <title>Can we use package types other then XQuery modules ?</title>
        <para>Currently we are focused on making XQuery module packages, though in the near future we should be able to deploy full applications
            with xproc, schema, data, resources, as well as java jars.</para>
        </section>

        <section>
            <title>I want to make my own .xar package</title>
        <para>Its very easy to package up your own XQuery modules to create a .xar format. Essentially you need to define expath-pkg.xml
        file which describes the package, then include the libraries then zip it up and give it a .xar extension. You can unzip
        the webapp/repo/packages/functx-1.0.xar package as an example or review the expath <a href="http://expath.org/modules/pkg.html" target="spec">specification</a>. </para>
        </section>
        <section>
            <title>I want more developer information</title>
        <para>You can find more information in the sourcecode README at extensions/modules/src/org.exist.modules/expathrepo/readme.txt.</para>
        </section>
</section>
</chapter>
    
</book>

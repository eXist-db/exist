<?xml version="1.0" encoding="UTF-8"?>
<div xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xf="http://www.w3.org/2002/xforms" class="access-condition" tab-id="access-condition">
    <div class="block-form">
        <!--DLF/Aquifer: REQUIRED-->
        <!--Cluster: include-->
        <fieldset class="level-1">
            <div class="join wide">
                <span class="legend">Access Conditions</span>
                <span class="join-button">
                    <xf:trigger>
                        <xf:label>&#160;+</xf:label>
                        <xf:action ev:event="DOMActivate">
                            <xf:insert nodeset="mods:accessCondition" at="index('accessCondition-repeat')" position="after"/>
                        </xf:action>
                    </xf:trigger>
                </span>
                <span class="join-button">
                    <xf:trigger>
                        <xf:label>&#160;â€“</xf:label>
                        <xf:action ev:event="DOMActivate">
                            <xf:delete ev:event="DOMActivate" nodeset="instance('save-data')/mods:accessCondition" at="index('accessCondition-repeat')"/>
                        </xf:action>
                    </xf:trigger>
                </span>
                <span class="xforms-hint">
                    <span onmouseover="show(this, 'hint', true)" onmouseout="show(this, 'hint', false)" class="xforms-hint-icon"/>
                    <div class="xforms-hint-value">
                        <p> Information about restrictions imposed on access to a resource is noted here. </p>
                        <p> Use Access Condition to indicate rights relating to access and use of digital resources. State clearly any restrictions on use of the digital resource, including explicitly mentioning lack of copyright restrictions when the digital resource is in the public domain. Also provide contact information for use by end users who wish to pursue required permissions for publication, exhibit, or other types of dissemination. </p>
                        <p> If you maintain rights information relating to specific digital resources on a web site, you may wish to provide a URL for that web site in lieu of a textual rights statement. When doing so, you should provide enough textual explanation, along with the URL, to make the purpose of the URL clear to end users. </p>
                        <p> Whenever possible, consider using a standard license such as Creative Commons and/or a rights expression language such as the Open Digital Rights Language (ODRL) specification. </p>
                    </div>
                </span>
            </div>
            
            <!--accessCondition repeat begins-->
            <xf:repeat nodeset="instance('save-data')/mods:accessCondition" id="accessCondition-repeat">
                <xf:group ref=".[not(@xlink)] | .[not(@type)] | .[not(@altRepGroup)] | .[not(@lang)] | .[not(@xml:lang)] | .[not(@script)] | .[not(@transliteration)] | .[not(@displayLabel)]">
                    <xf:switch>
                        <xf:case id="extension-add-node-hide">
                            <div class="node-button">
                                <xf:trigger class="add-button">
                                    <xf:label>&#160;&gt;</xf:label>
                                    <xf:toggle case="extension-add-node-unhide" ev:event="DOMActivate"/>
                                </xf:trigger>
                            </div>
                        </xf:case>
                        <xf:case id="extension-add-node-unhide">
                            <div class="node-button">
                                <xf:trigger>
                                    <xf:label>&#160;&lt;</xf:label>
                                    <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                </xf:trigger>
                            </div>
                            <div class="node-adds">
                                <xf:group ref=".[not(@xlink)] | .[not(@type)] | .[not(@altRepGroup)] | .[not(@lang)] | .[not(@xml:lang)] | .[not(@script)] | .[not(@transliteration)] | .[not(@displayLabel)] | .[not(@displayLabel)]">
                                <!--<xf:label class="xforms-group-label-centered">Recommended Fields</xf:label>-->
                                    <xf:trigger ref=".[not(@xlink)]" class="add-button">
                                        <xf:label class="xforms-group-label-centered">Add XLink</xf:label>
                                        <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@xlink"/>
                                        </xf:action>
                                    </xf:trigger>
                                    <xf:trigger ref=".[not(@type)]" class="add-button">
                                        <xf:label class="xforms-group-label-centered">Add Type</xf:label>
                                        <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@type"/>
                                        </xf:action>
                                    </xf:trigger>
                                    <xf:trigger ref=".[not(@altRepGroup)]" class="add-button">
                                        <xf:label class="xforms-group-label-centered">Add AltRepGroup</xf:label>
                                        <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@altRepGroup"/>
                                        </xf:action>
                                    </xf:trigger>
                                    <xf:trigger ref=".[not(@lang)]" class="add-button">
                                        <xf:label class="xforms-group-label-centered">Add Language</xf:label>
                                        <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@lang"/>
                                        </xf:action>
                                    </xf:trigger>
                                    <xf:trigger ref=".[not(@xml:lang)]" class="add-button">
                                        <xf:label class="xforms-group-label-centered">Add xml:lang</xf:label>
                                        <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@xml:lang"/>
                                        </xf:action>
                                    </xf:trigger>
                                    <xf:trigger ref=".[not(@script)]" class="add-button">
                                        <xf:label class="xforms-group-label-centered">Add Script</xf:label>
                                        <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@script"/>
                                        </xf:action>
                                    </xf:trigger>
                                    <xf:trigger ref=".[not(@transliteration)]" class="add-button">
                                        <xf:label class="xforms-group-label-centered">Add Transliteration</xf:label>
                                        <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@transliteration"/>
                                        </xf:action>
                                    </xf:trigger>
                                    <xf:trigger ref=".[not(@displayLabel)]" class="add-button">
                                        <xf:label class="xforms-group-label-centered">Add Display Label</xf:label>
                                        <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert context="." origin="instance('insert-templates')/mods:accessCondition/@displayLabel"/>
                                        </xf:action>
                                    </xf:trigger>
                                <!--
                                        element dummy
                                    <xf:trigger ref=".[not(e:template)]" class="add-button">
                                        <xf:label class="xforms-group-label-centered">Add Publication Type</xf:label>
                                        <xf:action ev:event="DOMActivate">
                                            <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                            <xf:insert nodeset="e:template" at="index('extension-repeat')" position="after"
                                                origin="instance('insert-templates')/e:template"/>
                                        </xf:action>
                                    </xf:trigger>
                                    -->
                                </xf:group>
                                <!--
                                    <xf:group id="extension-add-node-optional">
                                    <xf:label class="xforms-group-label-centered">Optional Fields</xf:label>
                                    <xf:trigger ref=".[not(@displayLabel)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add Display Label</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                    <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                    <xf:insert context="." origin="instance('insert-templates')/mods:titleInfo/@displayLabel"/>
                                    </xf:action>
                                    </xf:trigger>
                                    </xf:group>
                                    <xf:group id="extension-add-node-not-recommended">
                                    <xf:label class="xforms-group-label-centered">Deprecated Fields</xf:label>
                                    <xf:trigger ref=".[not(@ID)]" class="add-button">
                                    <xf:label class="xforms-group-label-centered">Add ID</xf:label>
                                    <xf:action ev:event="DOMActivate">
                                    <xf:toggle case="extension-add-node-hide" ev:event="DOMActivate"/>
                                    <xf:insert context="." origin="instance('insert-templates')/mods:titleInfo/@ID"/>
                                    </xf:action>
                                    </xf:trigger>
                                    </xf:group>
                                -->
                            </div>
                        </xf:case>
                    </xf:switch>
                </xf:group>
                
                    <!--DLF/Aquifer: N/A-->
                    <!--Cluster: omit-->
                <xf:group ref=".[@xlink]" appearance="full">
                    <xf:input ref="./@xlink" class="text_50">
                        <xf:label>XLink: </xf:label>
                        <xf:hint>
                            <p> The XLink field is used to reference an external resource, such as a second metadata record, a Related Item or a Table Of Contents. </p>
                        </xf:hint>
                    </xf:input>
                </xf:group>
                <xf:group ref=".[@type]" appearance="full">
                    <xf:select1 ref="./@type" selction="open">
                        <xf:label>Type:</xf:label>
                        <xf:hint>
                            <p> There is no controlled list of types for Access Condition. Suggested values are: restriction on access and use and reproduction. Choose the value appropriate for your note or enter a type of your own. </p>
                        </xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='access-condition-type-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                </xf:group>
                    <!--DLF/Aquifer: N/A-->
                    <!--Cluster: omit: follows languageOfCataloging-->
                <xf:group ref=".[@lang]" appearance="full">
                    <xf:select1 ref="./@lang">
                        <xf:label>Language:</xf:label>
                        <xf:hint>
                            <p> This field is used to specify the language used within individual fields, using the codes from ISO 639-2/b. This is equivalent to authority="iso639-2b" used with Language (which gives a language of the resource described in the record), but is applied to the language used as content of the metadata fields. </p>
                        </xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-3-type-sorted-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                </xf:group>
                    <!--DLF/Aquifer: NOT RECOMMENDED-->
                    <!--Cluster: omit-->
                <xf:group ref=".[@xml:lang]" appearance="full">
                    <xf:select1 ref="./@xml:lang">
                        <xf:label>xml:lang:</xf:label>
                        <xf:hint>
                            <p> This field is used to specify the language used within a field, using specifications in RFC 3066. RFC 3066 uses the two-character ISO 639-1 codes along with three-character ISO 639-2 codes for those languages not given in 639-1. </p>
                            <p> The recommendation is not to use xml:lang, but to use the above Language field. </p>
                        </xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='language-2-type-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                </xf:group>
                    <!--DLF/Aquifer: N/A-->
                    <!--Cluster: omit-->
                <xf:group ref=".[@script]" appearance="full">
                    <xf:select1 ref="./@script">
                        <xf:label>Script:</xf:label>
                        <xf:hint>
                            <p> This field specifies the script used within individual fields, using codes from ISO 15924 (Code for the representation of names of scripts). </p>
                        </xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='script-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                </xf:group>
                    <!--DLF/Aquifer: N/A-->
                    <!--Cluster: omit-->
                <xf:group ref=".[@transliteration]" appearance="full">
                    <xf:select1 ref="./@transliteration" selection="open">
                        <xf:label>Transliteration:</xf:label>
                        <xf:hint>
                            <p> It specifies the transliteration technique used within individual fields. There is no standard list of transliteration schemes available, although one may be developed. </p>
                        </xf:hint>
                        <xf:itemset nodeset="instance('code-tables')/code-table[code-table-name='transliteration-code']/items/item">
                            <xf:label ref="label"/>
                            <xf:value ref="value"/>
                        </xf:itemset>
                    </xf:select1>
                </xf:group>
                    <!--DLF/Aquifer: OPTIONAL]-->
                    <!--Cluster: omit-->
                <xf:group ref=".[@displayLabel]" appearance="full">
                    <xf:input ref="./@displayLabel" class="text_50">
                        <xf:label>Display Label: </xf:label>
                        <xf:hint>
                            <p> This field is intended to be used when additional text associated with the title is needed for display. </p>
                        </xf:hint>
                    </xf:input>
                </xf:group>
                <xf:group ref=".[@altRepGroup]" appearance="full">
                    <xf:input ref="./@altRepGroup" class="text_10">
                        <xf:label>altRepGroup: </xf:label>
                        <xf:hint>
                            <p> This field is intended to be used when additional text associated with the title is needed for display. </p>
                        </xf:hint>
                    </xf:input>
                </xf:group>
                <div class="hr-small"/>
                <xf:group ref="." appearance="full">
                    <xf:textarea ref="." class="textarea">
                        <xf:label>Access Condition: </xf:label>
                        <xf:hint>
                            <p> Information about restrictions imposed on access to a resource. </p>
                        </xf:hint>
                    </xf:textarea>
                </xf:group>
                <div class="hr"/>
            </xf:repeat>
            
            <!--accessCondition repeat ends-->
            <xf:group id="accessCondition-add-element" ref=".[not(./mods:accessCondition)]" appearance="full">
                <xf:trigger ref=".[not(mods:accessCondition)]" class="add-button">
                    <xf:label class="xforms-group-label-centered">Add Missing Access Condition</xf:label>
                    <xf:action ev:event="DOMActivate">
                        <xf:insert nodeset="mods:form" at="index('accessCondition-repeat')" position="after" origin="instance('new-instance')/mods:accessCondition"/>
                    </xf:action>
                </xf:trigger>
            </xf:group>
        </fieldset>
    </div>
</div>
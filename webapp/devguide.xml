<?xml version="1.0" encoding="UTF-8"?>
<book xmlns:ci="http://apache.org/cocoon/include/1.0">
    <bookinfo>
        <graphic fileref="logo.jpg"/>
        <productname>Open Source Native XML Database</productname>
        <title>Developer's Guide</title>
        <author>
            <firstname>Wolfgang M.</firstname>
            <surname>Meier</surname>
            <affiliation>
                <address format="linespecific">
                    <email>wolfgang at exist-db.org</email>
                </address>
            </affiliation>
        </author>
    </bookinfo>
    <ci:include src="sidebar.xml"/>
    <chapter id="ch01">
        <title>Developer's Guide</title>
        <section id="overview">
            <title>Overview</title>
            <para>This section provides a quick but broad introduction to the APIs and interfaces
                provided by eXist. We begin with an overview of how to configure eXist for XQuery to
                begin creating and executing <a href="devguide_xquery.xml">XQuery scripts</a> for web 
                applications. For this, we look
                at how eXist uses either the <application>XQueryServlet</application> servlet or
                    <application>XQueryGenerator</application> (Cocoon) to generate output from
                XQuery scripts. In section 3, we look at the basic 
                <a href="devguide_rest.xml">REST-style API</a> and its available
                HTTP request operations. Following that, in sections 4 and 5, we address Java
                programmers, and focus on the <a href="devguide_xmldb.xml">XML:DB API</a> - a standard 
                Java API used to access native
                XML database services - and its extensions. In sections 6 and 7, we discuss other
                ways to integrate eXist with Cocoon, including the XMLDBTransformer, and XSP
                Logicsheets. Sections 8 and 9 examine the network APIs for 
                <a href="devguide_xmlrpc.xml">XML-RPC</a> and its methods -
                this includes the use of XUpdate. <a href="devguide_soap.xml">SOAP interface</a> 
                is discussed as an alternative to
                XML-RPC in section 10. Finally, we include an important appendix of
                libraries required to implement specific APIs and interfaces.</para>
        </section>
        <section>
            <title>Required Libraries</title>
            <para>eXist consists of three jar-files:</para>
            <variablelist>
                <varlistentry>
                    <term>exist.jar</term>
                    <listitem>
                        <para>The core classes of eXist.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>start.jar</term>
                    <listitem>
                        <para>The bootstrap loader used to startup the database and client
                            applications. This library loads all other required jars.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>exist-optional.jar</term>
                    <listitem>
                        <para>Optional components for eXist including Cocoon supported classes, SOAP
                            interfaces, Ant tasks, and the HTTP request module for XQuery. This jar
                            is only required if eXist is running in a Cocoon framework or when using
                            Ant.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <para>The <filename>lib</filename> directory contains three subdirectories:</para>
            <orderedlist>
                <listitem>
                    <para>
                        <filename>core</filename>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <filename>optional</filename>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <filename>endorsed</filename>
                    </para>
                </listitem>
            </orderedlist>
            <para>Since these jar-files are required by the database core, they reside in the
                    <filename moreinfo="none">lib/core</filename> directory. However, you will not
                need all of them if you intend to use eXist as an embedded database in your own
                application. At an absolute minimum, you must include the following jars:</para>
            <variablelist>
                <varlistentry>
                    <term>xmldb.jar</term>
                    <listitem>
                        <para>Defines the common interfaces for the XML:DB API.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>antlr-x.x.x.jar</term>
                    <listitem>
                        <para>The ANTLR parser generator used by the XQuery engine.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>log4j.jar</term>
                    <listitem>
                        <para>Provides the logging facility.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>commons-pool-x.x.jar</term>
                    <listitem>
                        <para>Provides various object pool implementations.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>xml-commons-resolver-x.x.jar</term>
                    <listitem>
                        <para>A library for resolving XML external entities from the catalogue.
                            files.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>xmlrpc-x.x-patched.jar</term>
                    <listitem>
                        <para>XMLRPC protocol support. This library has been patched to handle the
                            full unicode character range. NOTE: You should include this library even
                            if you don't intend to connect to a remote database instance. The XML:DB
                            driver references this library and most Java machines will show a
                            runtime error if it is missing.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <para>The other jars in <filename>lib/core</filename> are support libraries for the
                command-line client (i.e. <filename>excalibur-cli-x.x.jar</filename>,
                    <filename>libreadline-java.jar</filename>, and
                <filename>jEdit-syntax.jar</filename>). These are not required to run your own
                application.</para>
            <para>The jar files in <filename>lib/optional</filename> are only required for Cocoon
                (most of them are distributed with Cocoon) and Axis-SOAP.</para>
            <para>The <filename moreinfo="none">lib/endorsed</filename> directory furthermore plays
                a special role: the 1.4.x Java releases come with their own XML support libraries,
                including Xalan for XSLT processing, an XML parser, and the standard Java interfaces
                for SAX and DOM. Unfortunately, we have found that some features of eXist in
                combination with Cocoon will not work properly with the wrong version of Xalan (in
                particular, XSP pages occasionally fail to compile). To ensure that the correct
                versions are available, we have included these versions of Xerces and Xalan, plus
                the standard interfaces used by both of them.</para>
            <para>You can use Java's endorsed library loading mechanism to ensure that the correct
                XML support libraries are loaded. Specifying the
                    <option>-Djava.endorsed.dirs=lib/endorsed</option> system property on the Java
                command line will force the JVM to prefer any library it finds in the endorsed
                directory over its own system libraries. Copying the jars into <filename
                    moreinfo="none">$JAVA_HOME/jre/lib/endorsed</filename> will do the same thing.
                Note that the batch and shell scripts included with eXist all set the
                    <option>java.endorsed.dirs</option> system property to point to <filename
                    moreinfo="none">lib/endorsed</filename>.</para>
            <para/>
        </section>
    </chapter>
</book>

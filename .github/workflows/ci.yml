name: CI
on: [push, pull_request]
jobs:
  build:
    name: (JDK ${{ matrix.jdk }} / ${{ matrix.os }}) Build and Test 
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        jdk: ['8', '11']
        include:
          - os: ubuntu-latest
            jdk: '15'        
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
# NOTE(AR) The `-T 2C` enables multi-threaded builds below, faster, but may need to be disabled when diagnosing problems 
      - name: Maven Build
        run: mvn -V -B -q -T 2C -DskipTests=true "-Dmaven.javadoc.skip=true" install
      - name: Maven Test
        run: mvn -V -B clean verify
      - name: Maven Javadoc
        if: ${{ matrix.jdk == '8' }}
        run: mvn -V -B -q -T 2C javadoc:javadoc
  deploy:
        name: Publishing docker images
        runs-on: ubuntu-latest
        needs: build
        if: ${{ github.ref == ('refs/heads/develop' || 'refs/heads/master') }}
        steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 0
          - name: Set up JDK 8
            uses: actions/setup-java@v1
            with:
              java-version: '8'
          # TODO(DP): reuse artefacts from Build step
          - name: Maven Build
            run: mvn -V -B -q -T 2C -P \!mac-dmg-on-mac,\!codesign-mac-dmg,\!mac-dmg-on-unix,\!installer clean package -DskipTests -Ddependency-check.skip=true -Ddocker=true
          - name: Build and push latest images
            if: ${{ github.ref == 'refs/heads/develop' }}
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
              DOCKER_PASSWORD: $ {{ secrets.DOCKER_PASSWORD }}
            run: |
              cd exist-docker
              mvn -DskipTests -Ddocker.tag=latest -Ddocker.username=$DOCKER_USERNAME -Ddocker.password=$DOCKER_PASSWORD docker:build docker:push
              cd ..
          - name: Build and push release images
            if: ${{ github.ref == 'refs/heads/master' }}
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
              DOCKER_PASSWORD: $ {{ secrets.DOCKER_PASSWORD }}
            run: |
              cd exist-docker
              mvn -DskipTests -Ddocker.tag=release -Ddocker.username=$DOCKER_USERNAME -Ddocker.password=$DOCKER_PASSWORD docker:build docker:push
              cd ..       
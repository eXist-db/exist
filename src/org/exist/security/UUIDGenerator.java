/*
 *  eXist Open Source Native XML Database
 *  Copyright (C) 2001-07 The eXist Project
 *  http://exist-db.org
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 *  $Id$
 */

package org.exist.security;

import java.lang.reflect.Method;
import org.apache.log4j.Logger;

/**
 *  UUID or GUID generator. The random code is generated by java's
 * UUID-class (when available Java5+), safehaus' UUIDGenerator (when evailable)
 * or javaexchange's RandomGUID as a fallback. (code in exist available)
 *
 * <UL>
 * <LI><a href="http://en.wikipedia.org/wiki/UUID">UUID</a></LI>
 * <LI><a href="http://en.wikipedia.org/wiki/GUID">GUID</a></LI>
 * <LI><a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/UUID.html">java.util.UUID</a></LI>
 * <LI><a href="http://jug.safehaus.org/">Safehaus</a></LI>
 * <LI><a href="http://www.javaexchange.com/aboutRandomGUID.html">JavaExchange</a></LI>
 * </UL>
 * @author Dannes Wessels
 */
public class UUIDGenerator {
    
    private final static Logger LOG = Logger.getLogger(UUIDGenerator.class);
    
    // http://java.sun.com/j2se/1.5.0/docs/api/java/util/UUID.html
    private static String getJavaUUID(){
        
        // Check does the class exist?
        Class clazz = null;
        try {
            clazz=Class.forName("java.util.UUID");
            
        } catch (Exception ex) { // ClassNotFoundException
            // quick escape
            LOG.debug("java.util.UUID not found");
            return null;
        }
        
        // Get specific method
        Method method = null;
        try {
            method = clazz.getMethod("randomUUID", null);
        } catch (Exception ex) { // SecurityException and NoSuchMethodException
            // quick escape
            LOG.error("Method UUID.randomUUID not found.",ex);
            return null;
        }
        
        // Invoke method
        Object result = null;
        try {
            result = method.invoke(null, null);
            
        } catch (Exception ex) { //IllegalAccessException and InvocationTargetException
            // quick escape
            LOG.error("Could not invoke method randomUUID.",ex);
            return null;
        }
        
        return result.toString();
    }
    
    // http://jug.safehaus.org/
    private static String getSafehausUUID(){
        //return UUIDGenerator.getInstance().generateRandomBasedUUID().toString();
        // Check does the class exist?
        Class clazz = null;
        try {
            clazz=Class.forName("org.safehaus.uuid.UUIDGenerator");
            
        } catch (Exception ex) { // ClassNotFoundException
            // quick escape
            LOG.debug("org.safehaus.uuid.UUIDGenerator no found.");
            return null;
        }
        
        // Get specific method
        Method method = null;
        try {
            method = clazz.getMethod("getInstance", null);
        } catch (Exception ex) { // SecurityException and NoSuchMethodException
            // quick escape
            LOG.error("Method UUIDGenerator.getInstance not found.",ex);
            return null;
        }
        
        // Invoke method
        Object result = null;
        try {
            result = method.invoke(null, null);
            
        } catch (Exception ex) { //IllegalAccessException and InvocationTargetException
            // quick escape
            LOG.error("Could not invoke method UUIDGenerator.getInstance.",ex);
            return null;
        }
        
        // Get class from object
        Class clazz2 = result.getClass();
        
        // Get specific method
        Method method2 = null;
        try {
            method2 = clazz2.getMethod("generateRandomBasedUUID", null);
        } catch (Exception ex) { // SecurityException and NoSuchMethodException
            // quick escape
            LOG.error("Method generateRandomBasedUUID not found.",ex);
            return null;
        }
        
        // Invoke method
        Object result2 = null;
        try {
            result2 = method2.invoke(result, null);
            
        } catch (Exception ex) { //IllegalAccessException and InvocationTargetException
            // quick escape
            LOG.error("Could not invoke method generateRandomBasedUUID.",ex);;
            return null;
        }
        
        return result2.toString();
    }
    
    // http://www.javaexchange.com/aboutRandomGUID.html
    private static String getJavaExchangeGUID(){
        LOG.debug("Using org.exist.security.RandomGUID");
        RandomGUID rg = new RandomGUID(false);
        return rg.toString();
    }
    
    /**
     *  Generate random UUID code.
     *
     * @return UUID code, formatted as f271ec43-bf1f-4030-a269-b11576538f71
     */
    public static String getUUID(){
        
        String uuid = getJavaUUID();
        
        // Alternative implementation
        if(uuid==null){
            uuid=getSafehausUUID();
        }
        
        // Another alternative implementation
        if(uuid==null){
            uuid=getJavaExchangeGUID();
        }
        
        return uuid;
    }
}

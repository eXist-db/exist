// $ANTLR 2.7.4: XQuery.g -> XQueryTokenTypes.txt$
XQuery    // output token vocab name
QNAME=4
PREDICATE=5
FLWOR=6
PARENTHESIZED=7
ABSOLUTE_SLASH=8
ABSOLUTE_DSLASH=9
WILDCARD=10
PREFIX_WILDCARD=11
FUNCTION=12
UNARY_MINUS=13
UNARY_PLUS=14
XPOINTER=15
XPOINTER_ID=16
VARIABLE_REF=17
VARIABLE_BINDING=18
ELEMENT=19
ATTRIBUTE=20
ATTRIBUTE_CONTENT=21
TEXT=22
VERSION_DECL=23
NAMESPACE_DECL=24
DEF_NAMESPACE_DECL=25
DEF_COLLATION_DECL=26
DEF_FUNCTION_NS_DECL=27
GLOBAL_VAR=28
FUNCTION_DECL=29
PROLOG=30
OPTION=31
ATOMIC_TYPE=32
MODULE=33
ORDER_BY=34
GROUP_BY=35
POSITIONAL_VAR=36
BEFORE=37
AFTER=38
MODULE_DECL=39
MODULE_IMPORT=40
SCHEMA_IMPORT=41
ATTRIBUTE_TEST=42
COMP_ELEM_CONSTRUCTOR=43
COMP_ATTR_CONSTRUCTOR=44
COMP_TEXT_CONSTRUCTOR=45
COMP_COMMENT_CONSTRUCTOR=46
COMP_PI_CONSTRUCTOR=47
COMP_NS_CONSTRUCTOR=48
COMP_DOC_CONSTRUCTOR=49
PRAGMA=50
LITERAL_xpointer="xpointer"=51
LPAREN("opening parenthesis '('")=52
RPAREN("closing parenthesis ')'")=53
NCNAME("name")=54
LITERAL_xquery="xquery"=55
LITERAL_version="version"=56
SEMICOLON("semicolon ';'")=57
LITERAL_module="module"=58
LITERAL_namespace="namespace"=59
EQ("=")=60
STRING_LITERAL("string literal")=61
LITERAL_declare="declare"=62
LITERAL_default="default"=63
"boundary-space"=64
LITERAL_ordering="ordering"=65
LITERAL_construction="construction"=66
"base-uri"=67
"copy-namespaces"=68
LITERAL_option="option"=69
LITERAL_function="function"=70
LITERAL_variable="variable"=71
LITERAL_import="import"=72
LITERAL_encoding="encoding"=73
LITERAL_collation="collation"=74
LITERAL_element="element"=75
LITERAL_order="order"=76
LITERAL_empty="empty"=77
LITERAL_greatest="greatest"=78
LITERAL_least="least"=79
LITERAL_preserve="preserve"=80
LITERAL_strip="strip"=81
LITERAL_ordered="ordered"=82
LITERAL_unordered="unordered"=83
COMMA=84
"no-preserve"=85
LITERAL_inherit="inherit"=86
"no-inherit"=87
DOLLAR("dollar sign '$'")=88
LCURLY("opening curly brace '{'")=89
RCURLY("closing curly brace '{'")=90
COLON=91
LITERAL_external="external"=92
LITERAL_at="at"=93
LITERAL_schema="schema"=94
LITERAL_as="as"=95
"empty-sequence"=96
QUESTION("question mark '?'")=97
STAR("wildcard '*'")=98
PLUS("+")=99
LITERAL_item="item"=100
LITERAL_for="for"=101
LITERAL_let="let"=102
LITERAL_some="some"=103
LITERAL_every="every"=104
LITERAL_if="if"=105
LITERAL_typeswitch="typeswitch"=106
LITERAL_update="update"=107
LITERAL_replace="replace"=108
LITERAL_value="value"=109
LITERAL_insert="insert"=110
LITERAL_delete="delete"=111
LITERAL_rename="rename"=112
LITERAL_with="with"=113
LITERAL_into="into"=114
LITERAL_preceding="preceding"=115
LITERAL_following="following"=116
LITERAL_where="where"=117
LITERAL_return="return"=118
LITERAL_in="in"=119
LITERAL_by="by"=120
LITERAL_ascending="ascending"=121
LITERAL_descending="descending"=122
LITERAL_group="group"=123
LITERAL_satisfies="satisfies"=124
LITERAL_case="case"=125
LITERAL_then="then"=126
LITERAL_else="else"=127
LITERAL_or="or"=128
LITERAL_and="and"=129
LITERAL_instance="instance"=130
LITERAL_of="of"=131
LITERAL_treat="treat"=132
LITERAL_castable="castable"=133
LITERAL_cast="cast"=134
LT("<")=135
GT(">")=136
LITERAL_eq="eq"=137
LITERAL_ne="ne"=138
LITERAL_lt="lt"=139
LITERAL_le="le"=140
LITERAL_gt="gt"=141
LITERAL_ge="ge"=142
NEQ("!=")=143
GTEQ(">=")=144
LTEQ("<=")=145
LITERAL_is="is"=146
LITERAL_isnot="isnot"=147
ANDEQ("fulltext operator '&='")=148
OREQ("fulltext operator '|='")=149
LITERAL_to="to"=150
MINUS("-")=151
LITERAL_div="div"=152
LITERAL_idiv="idiv"=153
LITERAL_mod="mod"=154
PRAGMA_START=155
PRAGMA_END("pragma expression")=156
LITERAL_union="union"=157
UNION("union")=158
LITERAL_intersect="intersect"=159
LITERAL_except="except"=160
SLASH("single slash '/'")=161
DSLASH("double slash '//'")=162
LITERAL_text="text"=163
LITERAL_node="node"=164
LITERAL_attribute="attribute"=165
LITERAL_comment="comment"=166
"processing-instruction"=167
"document-node"=168
LITERAL_document="document"=169
SELF(".")=170
XML_COMMENT("XML comment")=171
XML_PI("processing instruction")=172
LPPAREN("opening brace '['")=173
RPPAREN("closing brace ']'")=174
AT("@ char")=175
PARENT("..")=176
LITERAL_child="child"=177
LITERAL_self="self"=178
LITERAL_descendant="descendant"=179
"descendant-or-self"=180
"following-sibling"=181
LITERAL_parent="parent"=182
LITERAL_ancestor="ancestor"=183
"ancestor-or-self"=184
"preceding-sibling"=185
DOUBLE_LITERAL=186
DECIMAL_LITERAL=187
INTEGER_LITERAL=188
END_TAG_START("XML end tag")=189
QUOT("double quote '\"'")=190
APOS("single quote '")=191
QUOT_ATTRIBUTE_CONTENT=192
ESCAPE_QUOT=193
APOS_ATTRIBUTE_CONTENT=194
ESCAPE_APOS=195
ELEMENT_CONTENT=196
XML_COMMENT_END("end of XML comment")=197
XML_PI_END("end of processing instruction")=198
XML_CDATA("CDATA section")=199
LITERAL_collection="collection"=200
LITERAL_validate="validate"=201
XML_PI_START("start of processing instruction")=202
XML_CDATA_START("CDATA section start")=203
XML_CDATA_END("end of CDATA section")=204
LETTER=205
DIGITS=206
HEX_DIGITS=207
NMSTART=208
NMCHAR=209
WS=210
EXPR_COMMENT("XQuery comment")=211
PREDEFINED_ENTITY_REF=212
CHAR_REF=213
S=214
NEXT_TOKEN=215
CHAR=216
BASECHAR=217
IDEOGRAPHIC=218
COMBINING_CHAR=219
DIGIT=220
EXTENDER=221

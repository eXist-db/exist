<?xml version="1.0" encoding="UTF-8"?>

<!-- ======================================================================= -->
<!-- eXist build file                                                        -->
<!-- ======================================================================= -->

<project basedir="../.." default="all" name="exist">

    <!-- setup properties -->
    <property file="${basedir}/build.properties" />

    <property name="jetty.dir" value="tools/jetty"/>
    <property name="src" value="./src"/>
    <property name="src.webapp" value="./webapp"/>
    <property name="samples" value="./samples/src"/>
    <property name="bin" value="./bin"/>

    <property name="build" value="./build"/>
    <property name="build.src" value="${build}/src"/>
    <property name="build.scripts" value="${build}/scripts"/>
    <property name="build.soap" value="${build}/soap"/>
    <property name="build.classes" value="${build}/classes"/>
    <property name="build.docs" value="${build}/docs"/>
    <property name="build.docs.src" value="${build.docs}/source"/>
    <property name="build.docs.html" value="${build.docs}/html"/>
    <property name="build.examples" value="${build}/examples"/>
    <property name="build.javadoc" value="${build}/javadoc"/>
    <property name="build.extensions" value="./extensions"/>
    <property name="dist" value="./dist"/>
    <property name="webapp.dir" value="${dist}/webapp"/>
    <property name="build.compiler" value="modern"/>
    <property name="build.compiler.source" value="1.5"/>
    <property name="build.compiler.target" value="1.5"/>
    <property name="build.debug" value="on"/>
    <property name="build.optimize" value="on"/>
    <property name="build.deprecation" value="on"/>
    <property name="jvmarg" value="-Xmx128000k -Xms32000k -Djetty.home=${jetty.dir} -Dexist.home=${basedir}"/>
    <property name="xmldb.src" value="undefined"/>
    <property name="dist.dir" value="${dist}/${project.name}-${project.version}"/>
        
    <!-- import common targets -->
    <!-- <import file="../../build.xml"/> -->
    <import file="git-support.xml"/>
    <import file="./junit.xml"/>
    <import file="./antlr3.xml"/>
    
    <!-- setup conditional properties -->
    <available file="${xmldb.src}" type="dir" property="has.xmldb.src"/>
    <available file="key.store" property="key.store.present"/>

    <!-- additional set of ant tasks -->
    <property name="asocat-exist.jar" location="${tools.ant}/lib/asocat-exist.jar"/>
    
    <!-- setup class path -->
    <path id="classpath.core">
        <fileset dir="${lib.core}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.optional}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.endorsed}">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="${lib.user}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.extensions}" erroronmissingdir="false">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="extensions" erroronmissingdir="false">
            <include name="**/lib/*.jar"/>
        </fileset>
        <fileset dir="${tools.ant}/lib">
            <include name="*.jar"/>
        </fileset>

        <pathelement path="exist.jar"/>
        <pathelement path="exist-optional.jar"/>

        <pathelement path="start.jar"/>
        <pathelement path="${java.class.path}"/>
    </path>

    <path id="classpath.jetty">
        <fileset dir="${jetty.dir}/lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <taskdef name="java2wsdl" classname="org.apache.axis.tools.ant.wsdl.Java2WsdlAntTask">
        <classpath refid="classpath.core"/>
    </taskdef>

    <taskdef name="wsdl2java" classname="org.apache.axis.tools.ant.wsdl.Wsdl2javaAntTask">
        <classpath refid="classpath.core"/>
    </taskdef>

    <taskdef name="axis-admin" classname="org.apache.axis.tools.ant.axis.AdminClientTask">
        <classpath refid="classpath.core"/>
    </taskdef>

    <taskdef classpath="${tools.aspectj}/lib/aspectjtools-1.8.2.jar" resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties"/>
    <path id="classpath.aspectj">
        <fileset dir="${tools.aspectj}/lib">
            <include name="*.jar"/>
        </fileset>
    </path>


    <!-- =================================================================== -->
    <!-- Prepare the build                                                   -->
    <!-- =================================================================== -->
    <target name="prepare" depends="git.details">

        <tstamp/>
        <property file="VERSION.txt"/>

        <echo message="-------------------------"/>
        <echo message="eXist ${project.version} build"/>
        <echo message="-------------------------"/>
        <echo message="Git commit ID: ${git.commit}"/>
        <echo message=""/>
        <echo message="${ant.version}"/>
        <echo message="-------------------------"/>
        <echo/>
        <echo message="basedir=${basedir}"/>

        <mkdir dir="${build.classes}"/>
        <mkdir dir="${jetty.dir}/logs"/>
        <mkdir dir="${jetty.dir}/work"/>

        <filter token="version" value="${project.version}-:${git.commit}-${DSTAMP}"/>
        <filter token="database" value="native"/>

        <copy file="${src.webapp}/xqts/config.xml.tmpl" tofile="${src.webapp}/xqts/config.xml"
            filtering="true" failonerror="false"/>

        <copy file="${basedir}/conf.xml.tmpl" tofile="${basedir}/conf.xml" filtering="true">
			<filterset>
				<filter token="dataDir" value="webapp/WEB-INF/data"/>
                <filter token="cacheSize" value="128"/>
			</filterset>
		</copy>
        <copy file="${basedir}/conf.xml.tmpl" tofile="${basedir}/installer/conf.xml" filtering="true">
			<filterset>
				<filter token="dataDir" value="$dataDir"/>
                <filter token="cacheSize" value="${cacheSize}"/>
			</filterset>
		</copy>
        <copy file="${basedir}/client.properties.tmpl" tofile="${basedir}/client.properties"
            filtering="true"/>
        <copy file="${basedir}/descriptor.xml.tmpl" tofile="${basedir}/descriptor.xml"
            filtering="true"/>
        <copy file="${basedir}/mime-types.xml.tmpl" tofile="${basedir}/mime-types.xml"
            filtering="true"/>
        <copy file="${basedir}/mime-types.xml" tofile="${src}/org/exist/util/mime-types.xml"/>
        
        <copy file="${src.webapp}/WEB-INF/web.xml.tmpl" tofile="${src.webapp}/WEB-INF/web.xml"
            filtering="true" overwrite="true"/>

        <!-- <ant antfile="build.xml" dir="extensions/indexes" target="prepare"/> -->
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the source code                                            -->
    <!-- =================================================================== -->
    <target name="compile" description="Compiles the source code">

        <echo
            message="Compiling with Java ${ant.java.version} from ${build.compiler.source} source to ${build.compiler.target} target, debug ${build.debug}, optimize ${build.optimize}, deprecation ${build.deprecation}"/>

        <javac includeAntRuntime="false" debug="${build.debug}" deprecation="${build.deprecation}" destdir="${build.classes}"
            encoding="UTF-8" optimize="${build.optimize}" srcdir="${src}"
            source="${build.compiler.source}" target="${build.compiler.target}"
            fork="true" memoryInitialSize="512m" memoryMaximumSize="1024m">

            <include name="org/**"/>
            <include name="org/exist/schema/**"/>
            <classpath>
                <path refid="classpath.core"/>
                <path refid="classpath.jetty"/>
                <path refid="classpath.aspectj"/>
            </classpath>
        </javac>

        <!-- <ant antfile="build.xml" dir="extensions/indexes" target="compile" /> -->
    </target>


    <!-- =================================================================== -->
    <!-- Check if aspectj needs to be called. If no source file is newer     -->
	<!-- than the last build of exist.jar, aspectj should not run.           -->
    <!-- =================================================================== -->
	<target name="check.aspects.uptodate">
    	<uptodate property="aspectj.uptodate" targetfile="exist.jar">
			<srcfiles dir= "${src}" includes="org/exist/security/*.java"/>
    	</uptodate>
  	</target>

	<!-- =================================================================== -->
    <!-- Compiles the aspects                                                -->
    <!-- =================================================================== -->
    <target name="compile-aspectj" depends="compile,check.aspects.uptodate" description="Compiles the aspects"
		unless="aspectj.uptodate">

        <echo
            message="Compiling aspects with Java ${ant.java.version} from ${build.compiler.source} source to ${build.compiler.target} target, debug ${build.debug}, optimize ${build.optimize}, deprecation ${build.deprecation}"/>

        <iajc debug="${build.debug}" deprecation="${build.deprecation}" destdir="${build.classes}"
            encoding="UTF-8" srcdir="${src}"
            source="${build.compiler.source}" target="${build.compiler.target}"
            fork="true" maxmem="1024m" showWeaveInfo="true">

            <include name="org/**"/>
            <!-- <include name="org/exist/security/**"/> -->

            <classpath>
                <path refid="classpath.aspectj"/>
                <path refid="classpath.core"/>
                <path refid="classpath.jetty"/>
            </classpath>
        </iajc>
    </target>

    <!-- =================================================================== -->
    <!-- Run antlr parser generator									   	   -->
    <!-- needs antlr distribution-directory in the classpath			   -->
    <!-- =================================================================== -->
    <target depends="prepare" name="antlr">
        <echo message="Running ANTLR to generate XQuery parser"/>
        <delete failonerror="false">
            <fileset dir="${src}/org/exist/xquery/parser">
                <include name="*.java"/>
                <include name="*.txt"/>
                <exclude name="XQuery*AST.java"/>
            </fileset>
        </delete>
        <antlr target="${src}/org/exist/xquery/parser/XQuery.g"
            outputdirectory="${src}/org/exist/xquery/parser" traceparser="${antlr.traceParser}"
            tracelexer="${antlr.traceLexer}">
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </antlr>
        <antlr target="${src}/org/exist/xquery/parser/XQueryTree.g"
            outputdirectory="${src}/org/exist/xquery/parser" tracetreewalker="${antlr.traceTreeWalker}">
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </antlr>
        <antlr target="${src}/org/exist/xquery/parser/DeclScanner.g"
            outputdirectory="${src}/org/exist/xquery/parser">
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </antlr>
        <antlr target="${src}/org/exist/xquery/xqdoc/parser/XQDocParser.g"
            outputdirectory="${src}/org/exist/xquery/xqdoc/parser">
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </antlr>
    </target>

    <target depends="antlr,jar" name="xquery"/>
    <target depends="XQueryTreeParser,jar" name="xquery-ng"/>

    <!-- ================================================================== -->
    <!-- Create jar files                    				    -->
    <!-- ================================================================== -->
    <target name="jar" depends="git.details,compile,compile-aspectj"
        description="Create eXist-db unsigned jar files">
        <filter token="version" value="${project.version}"/>
        <filter token="build" value="${DSTAMP}"/>
        <filter token="git.commit" value="${git.commit}"/>

        <!--copy file="${src}/CatalogManager.properties" todir="${build.classes}"/-->
        <copy todir="${build.classes}/org/exist/client">
            <fileset dir="${src}/org/exist/client">
		<include name="*.tmpl"/>
                <include name="icons/**.png"/>
                <include name="icons/**.gif"/>
                <include name="*.xsl"/>
                <include name="**/*.xconf"/>
            </fileset>
        </copy>
        <copy todir="${build.classes}/org/exist/xquery/lib">
            <fileset dir="${src}/org/exist/xquery/lib">
                <include name="**/*.xq*"/>
            </fileset>
        </copy>
        <copy todir="${build.classes}/org/exist/atom/modules">
            <fileset dir="${src}/org/exist/atom/modules">
                <include name="**.xq"/>
            </fileset>
        </copy>
        <copy todir="${build.classes}/org/exist/http">
            <fileset dir="${src}/org/exist/http">
                <include name="**.xq"/>
            </fileset>
        </copy>
        <copy todir="${build.classes}/org/exist/security/xacml/policies">
            <fileset dir="${src}/org/exist/security/xacml/policies">
                <include name="*.xml"/>
            </fileset>
        </copy>
        <copy file="${src}/org/exist/xquery/util/messages.properties"
            todir="${build.classes}/org/exist/xquery/util"/>
        <copy file="${src}/org/exist/ant/antlib.xml" todir="${build.classes}/org/exist/ant"/>

        <copy file="${src}/org/exist/start/start.config" todir="${build.classes}/org/exist/start"/>
        <copy file="${src}/org/exist/security/security.properties"
            todir="${build.classes}/org/exist/security"/>
        <copy file="${src}/org/exist/system.properties" todir="${build.classes}/org/exist"
            filtering="true" overwrite="true"/>
        <copy file="${src}/org/exist/util/mime-types.xml" todir="${build.classes}/org/exist/util"/>
        <copy todir="${build.classes}/org/exist/validation/internal/query">
            <fileset dir="${src}/org/exist/validation/internal/query">
                <include name="**.xq"/>
            </fileset>
        </copy>
        <copy file="${src}/org/exist/scheduler/impl/quartz.properties"
            todir="${build.classes}/org/exist/scheduler/impl"/>
        <copy todir="${build.classes}/org/exist/launcher">
            <fileset dir="${src}/org/exist/launcher">
                <include name="**.png"/>
                <include name="**.xsl"/>
                <include name="**.properties"/>
            </fileset>
        </copy>
        <copy todir="${build.classes}/org/exist/webstart/resources">
            <fileset dir="${src}/org/exist/webstart/resources">
                <include name="*.jpg"/>
                <include name="*.gif"/>
                <include name="*.png"/>
            </fileset>
        </copy>
        <!-- Convert native to ascii-->
        <native2ascii src="${src}/org/exist/client" dest="${build.classes}/org/exist/client"
            encoding="UTF-8" includes="messages*.properties"/>

        <echo message="Creating exist.jar ..."/>
        <jar basedir="${build.classes}" compress="true" jarfile="exist.jar">
            <manifest>
                <attribute name="Project-Name" value="${project.name}"/>
                <attribute name="Project-Version" value="${project.version}"/>
                <attribute name="Project-Build" value="${DSTAMP}"/>
                <attribute name="Project-CodeName" value="${project.codename}"/>
                <attribute name="Git-commit" value="${git.commit}"/>
            </manifest>
            <exclude name="org/exist/*.xsl"/>
            <exclude name="org/exist/ant/**"/>
            <exclude name="org/exist/atom/**"/>
            <exclude name="org/exist/http/**"/>
            <exclude name="org/exist/jetty/**"/>
            <exclude name="org/exist/jsp/**"/>
            <exclude name="org/exist/soap/**"/>
            <exclude name="org/exist/start/**"/>
            <exclude name="org/exist/webstart/**"/>
            <exclude name="org/exist/xquery/functions/request/**"/>
            <exclude name="org/exist/xquery/functions/response/**"/>
            <exclude name="org/exist/xquery/functions/session/**"/>
        </jar>
        <echo message="Creating start.jar ..."/>
        <jar basedir="${build.classes}" compress="true" jarfile="start.jar">
            <manifest>
                <attribute name="Main-Class" value="org.exist.start.Main"/>
                <attribute name="Package-Title" value="org.exist"/>
                <attribute name="Implementation-Title" value="eXist XML Database"/>
                <attribute name="Implementation-URL" value="http://exist-db.org"/>
                <attribute name="Project-Name" value="${project.name}"/>
                <attribute name="Project-Version" value="${project.version}"/>
                <attribute name="Project-Build" value="${DSTAMP}"/>
                <attribute name="Project-CodeName" value="${project.codename}"/>
                <attribute name="Git-commit" value="${git.commit}"/>
            </manifest>
            <include name="org/exist/start/**"/>
        </jar>
        <echo message="Creating exist-optional.jar ..."/>
        <jar basedir="${build.classes}" compress="true" jarfile="exist-optional.jar">
            <manifest>
                <attribute name="Project-Name" value="${project.name}"/>
                <attribute name="Project-Version" value="${project.version}"/>
                <attribute name="Project-Build" value="${DSTAMP}"/>
                <attribute name="Project-CodeName" value="${project.codename}"/>
                <attribute name="Git-commit" value="${git.commit}"/>
            </manifest>
            <include name="org/exist/*.xsl"/>
            <include name="org/exist/ant/**"/>
            <include name="org/exist/atom/**"/>
            <include name="org/exist/http/**"/>
            <include name="org/exist/jetty/**"/>
            <include name="org/exist/jsp/**"/>
            <include name="org/exist/soap/**"/>
            <include name="org/exist/webstart/**"/>
            <include name="org/exist/xquery/functions/request/**"/>
            <include name="org/exist/xquery/functions/response/**"/>
            <include name="org/exist/xquery/functions/session/**"/>
        </jar>
    </target>

    <!-- ================================================================== -->
    <!-- Build all                                                          -->
    <!-- ================================================================== -->
    <target name="all"
        depends="prepare,jar,wrapper,extension-betterform,extension-modules,extension-xprocxq,extensions-xar,test-compile"
        description="Build all">
        
        <!--  hand over build to extensions build -->
        <ant antfile="${build.scripts}/extensions-build.xml" target="all" inheritAll="false"/>
        
        <!--  this module must be built after the ldap extension -->
        <ant antfile="build.xml" dir="extensions/security/activedirectory" inheritall="false"/>
        
        <antcall target="sign"/>
    </target>

    <!-- ================================================================== -->
    <!-- Rebuild all                                                        -->
    <!-- ================================================================== -->
    <target name="rebuild" depends="clean,all" description="Rebuild all"/>


    <!-- ================================================================== -->
    <!-- Create javadoc                                                     -->
    <!-- ================================================================== -->
    <target name="javadocs" description="Create javadoc">
        <mkdir dir="${build.src}"/>

        <delete dir="${build.javadoc}"/>
        <mkdir dir="${build.javadoc}"/>
        
        <echo message="Generating Javadocs ..."/>
        <javadoc bottom="Copyright (C) The eXist-db Project. All rights reserved." destdir="${build.javadoc}"
            doctitle="eXist Javadocs" noindex="true" notree="true" access="public" maxmemory="1024M"
            source="${build.compiler.source}">
            <packageset dir="${src}">
                <include name="org/**"/>
            </packageset>
            <packageset dir="${build.src}">
                <include name="org/**"/>
            </packageset>
            <packageset dir="${build.extensions}/webdav/src">
                <include name="org/**"/>
            </packageset>
            <!--packageset dir="${build.extensions}/contentextraction/src">
                <include name="org/**"/>
            </packageset-->
            <packageset dir="${build.extensions}/fluent/src">
                <include name="org/**"/>
            </packageset>
            <!--packageset dir="${build.extensions}/modules/src">
                <include name="org/**"/>
            </packageset-->
            <classpath>
                <path refid="classpath.core"/>
                <path refid="classpath.jetty"/>
                <path refid="classpath.aspectj"/>                
            </classpath>
            <link href="http://xmldb.exist-db.org/javadoc/"/>
            <link href="http://java.sun.com/javase/7/docs/api/"/>
            <link href="http://java.sun.com/javaee/6/docs/api/"/>
            <link href="http://commons.apache.org/codec/apidocs"/>
            <link href="http://commons.apache.org/collections/api/"/>
            <link href="http://commons.apache.org/discovery/apidocs/"/>
            <link href="http://commons.apache.org/fileupload/apidocs/"/>
            <link href="http://commons.apache.org/io/api-release/"/>
            <link href="http://commons.apache.org/logging/apidocs/"/>
            <link href="http://commons.apache.org/pool/apidocs/"/>
            <link href="http://hc.apache.org/httpclient-legacy/apidocs/"/>
            <link href="http://jline.sourceforge.net/javadoc/"/>
            <link href="http://logging.apache.org/log4j/1.2/apidocs/"/>
            <link href="http://www.slf4j.org/api/"/>
            <link href="http://nekohtml.sourceforge.net/javadoc/"/>
            <link href="http://www.quartz-scheduler.org/api/1.8.5/"/>
            <link href="http://sunxacml.sourceforge.net/javadoc/"/>  
            <link href="http://ws.apache.org/axis/java/apiDocs/"/>
            <link href="http://ws.apache.org/xmlrpc/apidocs/"/>
            <link href="http://www.antlr2.org/javadoc/"/>          
            <link href="http://xerces.apache.org/xerces2-j/javadocs/api/"/>
            <link href="http://xerces.apache.org/xerces2-j/javadocs/xerces2/"/>
            <link href="http://xerces.apache.org/xerces2-j/javadocs/xni/"/>
            <link href="http://xml.apache.org/commons/components/apidocs/resolver/"/>
            <link href="http://xml.apache.org/xalan-j/apidocs/"/>
            <link href="http://java.sun.com/products/javamail/javadocs/"/>
            <link href="http://java.sun.com/javase/technologies/desktop/javabeans/glasgow/javadocs"/>   
            <link href="http://download.eclipse.org/jetty/stable-7/apidocs/"/> 
            <link href="http://www.saxonica.com/documentation/javadoc"/> 
            <link href="http://lucene.apache.org/java/2_9_4/api/all/"/>
        </javadoc>

        <ant antfile="${build.scripts}/extensions-build.xml" target="javadoc" inheritAll="false"/>

        <delete dir="${build.src}"/>
    </target>

    <!-- ================================================================== -->
    <!-- Create javadoc with UML diagrams                                   -->
    <!-- ================================================================== -->
    <target depends="prepare" name="javadocs-uml" description="Create javadoc with UML diagrams">
        <mkdir dir="${build.src}"/>
        <antcall target="copy-xapi"/>

        <!--delete dir="webapp/api"/>
        <mkdir dir="webapp/api"/-->
        <echo message="Generating Javadocs ..."/>
        <javadoc bottom="Copyright (C) Wolfgang Meier. All rights reserved." destdir="webapp/api"
            doctitle="eXist Javadocs" noindex="true" notree="true" access="public" maxmemory="1024M"
            source="${build.compiler.source}">
            <packageset dir="${src}">
                <include name="org/**"/>
            </packageset>
            <packageset dir="${build.src}">
                <include name="org/**"/>
            </packageset>
            <classpath>
                <path refid="classpath.core"/>
                <path refid="classpath.jetty"/>
            </classpath>
            <doclet name="org.umlgraph.doclet.UmlGraphDoc" path="${tools.ant}/lib/UMLGraph-5.2.jar">
                    <!-- Parameter definitions are at http://www.umlgraph.org/doc/cd-opt.html -->
                    <param name="-inferrel"/>
                    <param name="-inferdep"/>
                    <!-- param name="-attributes"/ -->
                    <!-- param name="-operations"/ -->
                    <param name="-hide" value="java.*"/>
                    <param name="-collpackages" value="java.util.*"/>
                    <param name="-qualify"/>
                    <param name="-postfixpackage"/>
                    <param name="-nodefontsize" value="9"/>
                    <param name="-nodefontpackagesize" value="7"/>
                    <param name="-link" value="http://java.sun.com/javase/6/docs/api/"/>
            </doclet>
            <link href="http://java.sun.com/javase/6/docs/api/"/>
            <link href="http://java.sun.com/javaee/5/docs/api/"/>
            <link href="http://commons.apache.org/codec/apidocs"/>
            <link href="http://commons.apache.org/collections/api/"/>
            <link href="http://commons.apache.org/discovery/apidocs/"/>
            <link href="http://commons.apache.org/fileupload/apidocs/"/>
            <link href="http://commons.apache.org/io/api-1.4/"/>
            <link href="http://commons.apache.org/logging/apidocs/"/>
            <link href="http://commons.apache.org/pool/apidocs/"/>
            <link href="http://hc.apache.org/httpclient-3.x/apidocs/"/>
            <link href="http://jline.sourceforge.net/javadoc/"/>
            <link href="http://logging.apache.org/log4j/1.2/apidocs/"/>
            <link href="http://nekohtml.sourceforge.net/javadoc/"/>
            <link href="http://www.quartz-scheduler.org/docs/api/"/>
            <link href="http://sunxacml.sourceforge.net/javadoc/"/>  
            <link href="http://ws.apache.org/axis/java/apiDocs/"/>
            <link href="http://ws.apache.org/xmlrpc/apidocs/"/>
            <link href="http://www.antlr2.org/javadoc/"/>
            <link href="http://www.jgroups.org/javagroupsnew/docs/javadoc/"/>          
            <link href="http://xerces.apache.org/xerces2-j/javadocs/api/"/>
            <link href="http://xerces.apache.org/xerces2-j/javadocs/xerces2/"/>
            <link href="http://xerces.apache.org/xerces2-j/javadocs/xni/"/>
            <link href="http://xml.apache.org/commons/components/apidocs/resolver/"/>
            <link href="http://xml.apache.org/xalan-j/apidocs/"/>
            <link href="http://java.sun.com/products/javamail/javadocs/"/>
            <link href="http://java.sun.com/javase/technologies/desktop/javabeans/glasgow/javadocs"/>   
        </javadoc>

        <ant antfile="build.xml" dir="extensions/fluent" target="javadoc"/>

        <delete dir="${build.src}"/>
    </target>

    <!-- ================================================================== -->
    <!-- Cleanup                                                            -->
    <!-- ================================================================== -->
    <target name="clean" description="Cleanup">
        <echo message="-------------------------"/>
        <echo message="Cleaning"/>
        <echo message="-------------------------"/>
        <delete dir="${build.classes}"/>
        <delete dir="${build.examples}"/>
        <delete dir="${build.javadoc}"/>
        <delete dir="${dist.dir}"/>
        <delete quiet="true" failonerror="false">
            <fileset dir="log" includes="*" />
            <fileset dir="tmp" includes="*"/>
        </delete>
        <delete quiet="true">
            <fileset dir="${src.webapp}/WEB-INF/logs" excludes=".DO_NOT_DELETE" includes="*"/>
        </delete>

        <delete dir="${junit.reports}/junit"/>
        <delete dir="${junit.reports}/pmd"/>
        <delete dir="${junit.reports}/jdepend"/>
        <delete dir="${junit.reports}/classes"/>

        <delete dir="samples/classes"/>
        <delete failonerror="no" file="examples.jar"/>
        <delete failonerror="no" file="exist.jar"/>
        <delete failonerror="no" file="exist-optional.jar"/>
        <delete failonerror="no" file="start.jar"/>
        <delete>
            <fileset dir="installer" includes="eXist-*.exe,eXist-*.jar,install.xml"/>
        </delete>

        <delete failonerror="no" dir="${dist}"/>
        
        <!-- XQTS files -->
        <delete failonerror="no">
            <fileset dir="${junit.reports}/external" includes="*.zip"/>
        </delete>
        <delete failonerror="no" dir="cat"/>
        
        <ant antfile="build.xml" dir="extensions/betterform" target="clean" inheritall="false"/>
        <ant antfile="build.xml" dir="extensions/modules" target="clean" inheritall="false"/>
        <ant antfile="build.xml" dir="extensions/security/activedirectory"  target="clean" inheritall="false"/>
        <ant antfile="build.xml" dir="extensions/xprocxq" target="clean" inheritall="false"/>
        <ant antfile="build.xml" dir="tools/wrapper" target="clean" inheritall="false"/>
        
        <ant antfile="${build.scripts}/extensions-build.xml" target="clean" inheritAll="false"/>
        
        <!-- fall back -->
        <delete failonerror="no">
            <fileset dir="${lib.extensions}" includes="*.jar"/>
        </delete> 
        
    </target>

    <target name="clean-conf" description="Cleanup config file">
        <delete failonerror="no" file="conf.xml"/>
    </target>

    <target name="clean-default-data-dir" description="Remove contents in default data directory">
        <!-- valuable data? -->
        <delete dir="${src.webapp}/WEB-INF/data/backup"/>
        <delete dir="${src.webapp}/WEB-INF/data/journal"/>
        <delete dir="${src.webapp}/WEB-INF/data/fs"/>
        <delete dir="${src.webapp}/WEB-INF/data/fs.journal"/>
        <delete dir="${src.webapp}/WEB-INF/data/lucene"/>
        <delete dir="${src.webapp}/WEB-INF/data/range"/>
        <delete dir="${src.webapp}/WEB-INF/data/sanity"/>
        <delete>
            <fileset dir="${src.webapp}/WEB-INF/data" includes="*.dbx,*.log,*.lck,spatial_index.*,counters,restxq.registry"
                excludes=".DO_NOT_DELETE"/>
        </delete>
        <delete dir="${src.webapp}/WEB-INF/expathrepo"/>
        <delete dir="${src.webapp}/WEB-INF/data/expathrepo"/>
    </target>

    <target name="clean-all" depends="clean-default-data-dir" description="Cleanup deeper, data is removed">
        <!-- javadoc -->
        <delete dir="${src.webapp}/api"/>
                <!-- derived files -->
        <delete failonerror="no" file="client.properties"/>
        <delete failonerror="no" file="conf.xml"/>
        <delete failonerror="no" file="descriptor.xml"/>
        <delete failonerror="no" file="mime-types.xml"/>
        <delete failonerror="no" file="${src.webapp}/WEB-INF/web.xml"/>

        <delete>
            <fileset dir="installer" includes="install.xml"/>
            <fileset dir="webapp" includes="header.xml"/>
            <fileset dir="webapp/xqts" includes="config.xml"/>
        </delete>

        <!-- more files -->
        <delete failonerror="no" file=".exist_history"/>
        <delete failonerror="no" file=".exist_query_history"/>

        <!-- autodeploy -->
        <delete failonerror="no" dir="autodeploy"/>
        
        <!-- XQTS files -->
        <delete failonerror="no">
            <fileset dir="${junit.reports}/src/org/exist/xquery/xqts" includes="*" excludes="QT3TS_case.java,QT3TS_To_junit.java,XQTS_case.java,XQTS_To_junit.java,config.xml,hacked-tests.xml,xqts.xql"/>
            <fileset dir="${junit.reports}/external" includes="*"/>
        </delete>
        <delete failonerror="no">
            <fileset dir="${jetty.dir}/tmp" includes="*"/>
        </delete> 
        <mkdir dir="${jetty.dir}/tmp"/>
		<ant antfile="build.xml" dir="extensions/modules" target="clean-all" inheritall="false"/>
    </target>

    <target name="wrapper" depends="jar">
        <ant antfile="build.xml" dir="tools/wrapper" inheritall="false"/>
    </target>

    <target name="extension-betterform" depends="jar">
        <ant antfile="build.xml" dir="extensions/betterform" inheritall="false"/>
    </target>

    <target name="extension-modules" depends="jar">
        <ant antfile="build.xml" dir="extensions/modules" inheritall="false"/>
    </target>
    
    <target name="extension-xprocxq" depends="jar">
        <ant antfile="build.xml" dir="extensions/xprocxq" inheritall="false"/>
    </target>
    
    <target name="samples" depends="jar" description="Build samples">
        <ant antfile="build.xml" dir="samples"/>
    </target>

    <target name="extensions-xar" depends="jar" if="${use.autodeploy.feature}" >
        <ant antfile="build/scripts/setup.xml" dir="." inheritall="false"/>
    </target>
    
    <target name="cleandocs">
        <replaceregexp>
            <regexp pattern="/\*.*Description of the Method.*\*/"/>
            <substitution expression=""/>
            <fileset dir="src/org/exist/xmldb">
                <include name="*.java"/>
            </fileset>
        </replaceregexp>
    </target>

    <!-- ============================================================================ -->
    <!-- Sign jar files for java webstart.                                            -->
    <!--                                                                              -->
    <!-- ============================================================================ -->
    <target name="sign" if="key.store.present">

        <!-- Only sign if key store exists. otherwise skip signing -->

        <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"/>
        <echo message="!! Signing jar files ..."/>
        <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"/>
        <ant antfile="build/scripts/jarsigner.xml" dir="." target="jnlp-sign-exist"/>

        <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"/>
        <echo message="!! Please run &apos;$EXIST_HOME/build.[bat|sh] -f build\scripts\jarsigner.xml&apos; "/>
        <echo message="!! once manually to use a default keystore to sign the core jars or put !!"/>
	    <echo message="!! your own certificate in $EXIST_HOME/key.store and sign for enabling webstart !!"/>
        <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"/>

        <!-- the core jars can NOT be signed in this build.xml file because -->
        <!-- the jars are some how locked by ant (classpath.core)-->

    </target>
    

    <!-- ============================================================================ -->
    <!-- Download additional files                                                    -->
    <!-- ============================================================================ -->
    <target name="download-additional-jars" description="Download optional third-party jar files."
            depends="download-icu4j"/>


    <target name="download-icu4j" description="Download optional third-party jar files.">
        <!-- International Components for Unicode  http://www.icu-project.org/          -->
        <property name="icu4j.version" value="${lib.user}/saxon.zip"/>
        <get src="http://download.icu-project.org/files/icu4j/4.8.1.1/icu4j-4_8_1_1.jar"
            dest="${lib.user}" verbose="true" usetimestamp="true"/>
    </target>


</project>

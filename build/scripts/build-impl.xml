<?xml version="1.0" encoding="UTF-8"?>

<!-- ======================================================================= -->
<!-- eXist build file                                                        -->
<!-- ======================================================================= -->

<project basedir="../.." default="all" name="exist">

    <!-- setup properties -->
    <property file="${basedir}/build.properties" />

    <property name="jetty.dir" value="tools/jetty"/>
    <property name="src" value="./src/main/java"/>
    <property name="src.test" value="./src/test/java"/>
    <property name="src.webapp" value="./webapp"/>
    <property name="samples" value="./samples/src"/>
    <property name="bin" value="./bin"/>

    <property name="target" value="./target"/>
    <property name="build" value="./build"/>
    <property name="build.scripts" value="${build}/scripts"/>
    <property name="build.soap" value="${build}/soap"/>
    <property name="build.classes" value="${target}/classes"/>
    <property name="build.test.classes" value="${target}/test-classes"/>
    <property name="build.docs" value="${build}/docs"/>
    <property name="build.docs.src" value="${build.docs}/source"/>
    <property name="build.docs.html" value="${build.docs}/html"/>
    <property name="build.examples" value="${build}/examples"/>
    <property name="build.javadoc" value="${build}/javadoc"/>
    <property name="build.extensions" value="./extensions"/>
    <property name="dist" value="./dist"/>
    <property name="webapp.dir" value="${dist}/webapp"/>
    <property name="build.compiler" value="modern"/>
    <property name="build.compiler.source" value="1.8"/>
    <property name="build.compiler.target" value="1.8"/>
    <property name="build.debug" value="on"/>
    <property name="build.optimize" value="on"/>
    <property name="build.deprecation" value="on"/>
    <property name="jvmarg" value="-Xmx128000k -Xms32000k -Djetty.home=${jetty.dir} -Dexist.home=${basedir}"/>
    <property name="xmldb.src" value="undefined"/>



    <!-- import common targets -->
    <!-- <import file="../../build.xml"/> -->
    <import file="git-support.xml"/>
    <import file="./junit.xml"/>
    <import file="./jmh.xml"/>
    <import file="./antlr3.xml"/>

    <!-- setup conditional properties -->
    <available file="${xmldb.src}" type="dir" property="has.xmldb.src"/>
    <available file="${keystore.file}" property="key.store.present"/>

    <!-- additional set of ant tasks -->
    <property name="asocat-exist.jar" location="${tools.ant}/lib/asocat-exist-1.0.jar"/>

    <path id="classpath.external">
        <fileset dir="${lib.core}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.optional}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.endorsed}">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="${lib.user}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.extensions}" erroronmissingdir="false">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="extensions" erroronmissingdir="false">
            <include name="**/lib/*.jar"/>
        </fileset>
        <fileset dir="${tools.ant}/lib">
            <include name="*.jar"/>
        </fileset>
        <pathelement path="tools/yajsw/wrapper.jar"/>
        <fileset dir="tools/yajsw/lib/core/commons">
            <include name="commons-configuration*.jar"/>
        </fileset>
    </path>

    <!-- setup class path -->
    <path id="classpath.core">
        <path refid="classpath.external"/>

        <pathelement path="exist.jar"/>
        <pathelement path="exist-optional.jar"/>

        <pathelement path="start.jar"/>
        <pathelement path="${java.class.path}"/>
    </path>

    <path id="classpath.jetty">
        <fileset dir="${jetty.dir}/lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <taskdef classpath="${tools.aspectj}/lib/aspectjtools-1.9.2.jar" resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties"/>
    <path id="classpath.aspectj">
        <fileset dir="${tools.aspectj}/lib">
            <include name="*.jar"/>
        </fileset>
    </path>


    <!-- =================================================================== -->
    <!-- Prepare the build                                                   -->
    <!-- =================================================================== -->
    <target name="prepare" depends="git.details">

        <tstamp/>
        <property file="VERSION.txt"/>

        <echo message="--------------------------------------------"/>
        <echo message="eXist ${project.version}${build.label} build"/>
        <echo message="--------------------------------------------"/>

        <if>
            <and>
                <isset property="git.revision"/>
                <not><equals arg1="${git.revision}" arg2=""/></not>
            </and>
            <then>
                <echo message="Git commit: ${git.revision}"/>
            </then>
        </if>
        <if>
            <or>
                <not><isset property="git.branch.full"/></not>
                <equals arg1="${git.branch.full}" arg2=""/>
            </or>
            <then>
                <if>
                    <or>
                        <not><isset property="git.tag.full"/></not>
                        <equals arg1="${git.tag.full}" arg2=""/>
                    </or>
                    <then>
                        <echo message="Built from Installed build: ${project.version}"/>
                    </then>
                    <else>
                        <echo message="Git tag: '${git.tag.full}'"/>
                    </else>
                </if>
            </then>
            <else>
                <echo message="Git branch: ${git.branch.full}"/>
            </else>
        </if>
        <echo message=""/>
        <echo message="Java Vendor: ${java.vendor}"/>
        <echo message="Java Version: ${java.runtime.version}"/>
        <echo message="Java VM: ${java.vm.name} ${java.vm.version}"/>
        <echo message="${ant.version}"/>
        <echo message="---------------------------------------------"/>
        <echo/>
        <echo message="basedir=${basedir}"/>

        <mkdir dir="${module.exist-core}/${build.classes}"/>
        <mkdir dir="${module.exist-start}/${build.classes}"/>
        <mkdir dir="${module.exist-testkit}/${build.classes}"/>
        <mkdir dir="${jetty.dir}/logs"/>
        <mkdir dir="${jetty.dir}/work"/>

        <filter token="version" value="${project.version}"/>
        <filter token="database" value="native"/>

        <copy file="${basedir}/conf.xml.tmpl" tofile="${basedir}/conf.xml" filtering="true">
            <filterset>
                <filter token="dataDir" value="${config.dataDir}"/>
                <filter token="journalDir" value="${config.journalDir}"/>
                <filter token="cacheSize" value="${config.cacheSize}"/>
                <filter token="collectionCacheSize" value="${config.collectionCacheSize}"/>
            </filterset>
        </copy>
        <copy file="${basedir}/conf.xml.tmpl" tofile="${basedir}/installer/conf.xml" filtering="true">
            <filterset>
                <filter token="dataDir" value="${config.dataDir}"/>
                <filter token="journalDir" value="${config.journalDir}"/>
                <filter token="cacheSize" value="${config.cacheSize}"/>
                <filter token="collectionCacheSize" value="${config.collectionCacheSize}"/>
            </filterset>
        </copy>
        <copy file="${basedir}/client.properties.tmpl" tofile="${basedir}/client.properties"
            filtering="true"/>
        <copy file="${basedir}/descriptor.xml.tmpl" tofile="${basedir}/descriptor.xml"
            filtering="true"/>
        <copy file="${basedir}/mime-types.xml.tmpl" tofile="${basedir}/mime-types.xml"
            filtering="true"/>
        <copy file="${basedir}/mime-types.xml" tofile="${module.exist-core}/${build.classes}/org/exist/util/mime-types.xml"/>

        <copy file="${src.webapp}/WEB-INF/web.xml.tmpl" tofile="${src.webapp}/WEB-INF/web.xml"
            filtering="true" overwrite="true"/>

        <!-- <ant antfile="build.xml" dir="extensions/indexes" target="prepare"/> -->
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the source code                                            -->
    <!-- =================================================================== -->
    <target name="compile" description="Compiles the source code">

        <echo
            message="Compiling with Java ${ant.java.version} from ${build.compiler.source} source to ${build.compiler.target} target, debug ${build.debug}, optimize ${build.optimize}, deprecation ${build.deprecation}"/>

        <javac includeAntRuntime="false" debug="${build.debug}" deprecation="${build.deprecation}" destdir="${module.exist-start}/${build.classes}"
               encoding="UTF-8" optimize="${build.optimize}" srcdir="${module.exist-start}/${src}"
               source="${build.compiler.source}" target="${build.compiler.target}"
               fork="true" memoryInitialSize="512m" memoryMaximumSize="1024m">

            <include name="org/**"/>

            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </javac>

        <javac includeAntRuntime="false" debug="${build.debug}" deprecation="${build.deprecation}" destdir="${module.exist-core}/${build.classes}"
            encoding="UTF-8" optimize="${build.optimize}" srcdir="${module.exist-core}/${src}"
            source="${build.compiler.source}" target="${build.compiler.target}"
            fork="true" memoryInitialSize="512m" memoryMaximumSize="1024m">

            <include name="org/**"/>

            <!-- Do not compile Aspects here, compiled below by iajc -->
            <exclude name="org/exist/security/PermissionRequiredAspect.java"/>
            <exclude name="org/exist/storage/lock/EnsureLockingAspect.java"/>

            <classpath>
                <path refid="classpath.core"/>
                <path refid="classpath.jetty"/>
                <path refid="classpath.aspectj"/>
                <path path="${module.exist-start}/${build.classes}"/>
            </classpath>
        </javac>

        <!-- <ant antfile="build.xml" dir="extensions/indexes" target="compile" /> -->
    </target>

    <target name="compile-testkit" depends="prepare,compile" description="Compiles the Test Kit source code">
        <mkdir dir="${module.exist-testkit}/${build.classes}"/>

        <echo
                message="Compiling with Java ${ant.java.version} from ${build.compiler.source} source to ${build.compiler.target} target, debug ${build.debug}, optimize ${build.optimize}, deprecation ${build.deprecation}"/>

        <javac includeAntRuntime="false" debug="${build.debug}" deprecation="${build.deprecation}" destdir="${module.exist-testkit}/${build.classes}"
               encoding="UTF-8" optimize="${build.optimize}" srcdir="${module.exist-testkit}/${src}"
               source="${build.compiler.source}" target="${build.compiler.target}"
               fork="true" memoryInitialSize="512m" memoryMaximumSize="1024m">

            <include name="org/exist/ant/**"/>
            <include name="org/exist/test/**"/>
            <include name="org/exist/TestUtils.java"/>
            <include name="xquery/TestRunner.java"/>
            <include name="xquery/TestRunnerMain.java"/>

            <classpath>
                <path path="${module.exist-core}/${build.classes}"/>
                <fileset dir="${lib.core}">
                    <include name="*.jar"/>
                </fileset>
                <path refid="classpath.external"/>
                <path refid="classpath.jetty"/>
                <path refid="classpath.test-libs"/>
            </classpath>
        </javac>

        <copy todir="${module.exist-testkit}/${build.classes}/org/exist/test/runner">
            <fileset dir="${module.exist-testkit}/${resources.main}/org/exist/test/runner">
                <include name="*.xq"/>
            </fileset>
        </copy>

    </target>


    <!-- =================================================================== -->
    <!-- Check if aspectj needs to be called. If no source file is newer     -->
    <!-- than the last build of exist.jar, aspectj should not run.           -->
    <!-- =================================================================== -->
    <target name="check.aspects.uptodate">
        <uptodate property="aspectj.uptodate" targetfile="exist.jar">
            <srcfiles dir="${module.exist-core}/${src}" includes="org/exist/security/PermissionRequiredAspect.java"/>
            <srcfiles dir="${module.exist-core}/${src}" includes="org/exist/storage/lock/EnsureLockingAspect.java"/>
        </uptodate>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the aspects                                                -->
    <!-- =================================================================== -->
    <target name="compile-aspectj" depends="compile,check.aspects.uptodate" description="Compiles the aspects"
        unless="aspectj.uptodate">

        <echo
            message="Compiling aspects with Java ${ant.java.version} from ${build.compiler.source} source to ${build.compiler.target} target, debug ${build.debug}, optimize ${build.optimize}, deprecation ${build.deprecation}"/>

        <path id="classpath.compile-aspectj">
            <path refid="classpath.aspectj"/>
            <path refid="classpath.external"/>
            <path refid="classpath.jetty"/>
        </path>

        <iajc debug="${build.debug}" deprecation="${build.deprecation}" destdir="${module.exist-core}/${build.classes}"
            encoding="UTF-8" srcdir="${module.exist-core}/${src}"
            source="${build.compiler.source}" target="${build.compiler.target}"
            fork="true" maxmem="1024m" showWeaveInfo="true" inpath="${module.exist-core}/${build.classes}">

            <include name="org/exist/security/PermissionRequiredAspect.java"/>

            <!-- can be enabled in local.build.properties -->
            <include name="org/exist/storage/lock/EnsureLockingAspect.java" if="${enable.ensurelocking.aspect}" />

            <classpath refid="classpath.compile-aspectj"/>
        </iajc>
    </target>

    <!-- =================================================================== -->
    <!-- Run antlr parser generator                                          -->
    <!-- needs antlr distribution-directory in the classpath                 -->
    <!-- =================================================================== -->
    <target depends="prepare" name="antlr">
        <echo message="Running ANTLR to generate XQuery parser"/>
        <delete failonerror="false">
            <fileset dir="${module.exist-core}/${src}/org/exist/xquery/parser">
                <include name="*.java"/>
                <include name="*.txt"/>
                <exclude name="XQuery*AST.java"/>
            </fileset>
        </delete>
        <antlr target="${module.exist-core}/${resources.main}/org/exist/xquery/parser/XQuery.g"
            outputdirectory="${module.exist-core}/${src}/org/exist/xquery/parser" traceparser="${antlr.traceParser}"
            tracelexer="${antlr.traceLexer}">
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </antlr>
        <antlr target="${module.exist-core}/${resources.main}/org/exist/xquery/parser/XQueryTree.g"
            outputdirectory="${module.exist-core}/${src}/org/exist/xquery/parser" tracetreewalker="${antlr.traceTreeWalker}">
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </antlr>
        <antlr target="${module.exist-core}/${resources.main}/org/exist/xquery/parser/DeclScanner.g"
            outputdirectory="${module.exist-core}/${src}/org/exist/xquery/parser">
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </antlr>
        <antlr target="${module.exist-core}/${resources.main}/org/exist/xquery/xqdoc/parser/XQDocParser.g"
            outputdirectory="${module.exist-core}/${src}/org/exist/xquery/xqdoc/parser">
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </antlr>
    </target>

    <target depends="antlr,jar" name="xquery"/>
    <target depends="XQueryTreeParser,jar" name="xquery-ng"/>

    <!-- ================================================================== -->
    <!-- Create jar files                                                   -->
    <!-- ================================================================== -->
    <target name="jar" depends="git.details,compile,compile-testkit,compile-aspectj"
        description="Create eXist-db unsigned jar files">
        <filter token="version" value="${project.version}"/>
        <filter token="build" value="${DSTAMP}${TSTAMP}"/>
        <filter token="git.branch" value="${git.branch.full}"/>
        <filter token="git.commit" value="${git.revision}"/>

        <copy todir="${module.exist-core}/${build.classes}/org/exist/client">
            <fileset dir="${module.exist-core}/${resources.main}/org/exist/client">
                <include name="*.tmpl"/>
                <include name="icons/**.png"/>
                <include name="icons/**.gif"/>
                <include name="*.xsl"/>
                <include name="**/*.xconf"/>
            </fileset>
        </copy>
        <copy todir="${module.exist-core}/${build.classes}/org/exist/xquery/lib">
            <fileset dir="${module.exist-core}/${resources.main}/org/exist/xquery/lib">
                <include name="**/*.xq*"/>
            </fileset>
        </copy>
        <copy todir="${module.exist-core}/${build.classes}/org/exist/http">
            <fileset dir="${module.exist-core}/${resources.main}/org/exist/http">
                <include name="**.xq"/>
            </fileset>
        </copy>
        <copy file="${module.exist-core}/${resources.main}/org/exist/xquery/util/messages.properties"
            todir="${module.exist-core}/${build.classes}/org/exist/xquery/util"/>
        <copy file="${module.exist-core}/${resources.main}/org/exist/ant/antlib.xml" todir="${module.exist-core}/${build.classes}/org/exist/ant"/>

        <copy file="${module.exist-start}/${resources.main}/org/exist/start/start.config" todir="${module.exist-start}/${build.classes}/org/exist/start"/>
        <copy file="${module.exist-core}/${resources.main}/org/exist/security/security.properties"
            todir="${module.exist-core}/${build.classes}/org/exist/security"/>
        <copy file="${module.exist-core}/${resources.main}/org/exist/system.properties" todir="${module.exist-core}/${build.classes}/org/exist"
            filtering="true" overwrite="true"/>
        <copy todir="${module.exist-core}/${build.classes}/org/exist/validation/internal/query">
            <fileset dir="${module.exist-core}/${resources.main}/org/exist/validation/internal/query">
                <include name="**.xq"/>
            </fileset>
        </copy>
        <copy file="${module.exist-core}/${resources.main}/org/exist/scheduler/impl/quartz.properties"
            todir="${module.exist-core}/${build.classes}/org/exist/scheduler/impl"/>
        <copy todir="${module.exist-core}/${build.classes}/org/exist/launcher">
            <fileset dir="${module.exist-core}/${resources.main}/org/exist/launcher">
                <include name="**.png"/>
                <include name="**.xsl"/>
                <include name="**.properties"/>
            </fileset>
        </copy>
        <copy todir="${module.exist-core}/${build.classes}/org/exist/webstart/resources">
            <fileset dir="${module.exist-core}/${resources.main}/org/exist/webstart/resources">
                <include name="*.jpg"/>
                <include name="*.gif"/>
                <include name="*.png"/>
            </fileset>
        </copy>
        <!-- Convert native to ascii-->
        <native2ascii src="${module.exist-core}/${resources.main}/org/exist/client" dest="${module.exist-core}/${build.classes}/org/exist/client"
            encoding="UTF-8" includes="messages*.properties"/>

        <echo message="Creating exist.jar ..."/>
        <jar basedir="${module.exist-core}/${build.classes}" compress="true" jarfile="exist.jar">
            <manifest>
                <attribute name="Implementation-Title" value="${project.name} Core"/>
                <attribute name="Implementation-Version" value="${project.version}"/>
                <attribute name="Implementation-Vendor" value="The eXist Project"/>
                <attribute name="Implementation-Vendor-Id" value="org.exist-db"/>
                <attribute name="Implementation-URL" value="https://github.com/exist-db/exist"/>

                <attribute name="Specification-Title" value="${project.name} Core"/>
                <attribute name="Specification-Version" value="${project.version}"/>
                <attribute name="Specification-Vendor" value="The eXist Project"/>

                <attribute name="Source-Repository" value="scm:git:https://github.com/exist-db/exist.git"/>
                <attribute name="Git-Commit" value="${git.revision.full}"/>
                <attribute name="Git-Commit-Abbrev" value="${git.revision}"/>
                <attribute name="Build-Tag" value="${git.branch.full}"/>
                <attribute name="Build-Timestamp" value="${DSTAMP}${TSTAMP}"/>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Build-Jdk" value="${java.version}"/>

                <attribute name="Description" value="eXist XML Native Database"/>
                <attribute name="Created-By" value="${ant.version}"/>
            </manifest>
            <exclude name="org/exist/*.xsl"/>
            <exclude name="org/exist/ant/**"/>
            <exclude name="org/exist/http/**"/>
            <exclude name="org/exist/jetty/**"/>
            <exclude name="org/exist/jsp/**"/>
            <exclude name="org/exist/soap/**"/>
            <exclude name="org/exist/start/**"/>
            <exclude name="org/exist/webstart/**"/>
            <exclude name="org/exist/xquery/functions/request/**"/>
            <exclude name="org/exist/xquery/functions/response/**"/>
            <exclude name="org/exist/xquery/functions/session/**"/>
        </jar>

        <echo message="Creating start.jar ..."/>
        <jar basedir="${module.exist-start}/${build.classes}" compress="true" jarfile="start.jar">
            <manifest>
                <attribute name="Main-Class" value="org.exist.start.Main"/>
                <attribute name="Package-Title" value="org.exist"/>

                <attribute name="Implementation-Title" value="${project.name} Bootstrap"/>
                <attribute name="Implementation-Version" value="${project.version}"/>
                <attribute name="Implementation-Vendor" value="The eXist Project"/>
                <attribute name="Implementation-Vendor-Id" value="org.exist-db"/>
                <attribute name="Implementation-URL" value="https://github.com/exist-db/exist"/>

                <attribute name="Specification-Title" value="${project.name} Bootstrap"/>
                <attribute name="Specification-Version" value="${project.version}"/>
                <attribute name="Specification-Vendor" value="The eXist Project"/>

                <attribute name="Source-Repository" value="scm:git:https://github.com/exist-db/exist.git"/>
                <attribute name="Git-Commit" value="${git.revision.full}"/>
                <attribute name="Git-Commit-Abbrev" value="${git.revision}"/>
                <attribute name="Build-Tag" value="${git.branch.full}"/>
                <attribute name="Build-Timestamp" value="${DSTAMP}${TSTAMP}"/>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Build-Jdk" value="${java.version}"/>

                <attribute name="Description" value="eXist XML Native Database"/>
                <attribute name="Created-By" value="${ant.version}"/>
            </manifest>
            <include name="org/exist/start/**"/>
        </jar>

        <echo message="Creating exist-optional.jar ..."/>
        <jar basedir="${module.exist-core}/${build.classes}" compress="true" jarfile="exist-optional.jar">
            <manifest>
                <attribute name="Implementation-Title" value="${project.name} Optional"/>
                <attribute name="Implementation-Version" value="${project.version}"/>
                <attribute name="Implementation-Vendor" value="The eXist Project"/>
                <attribute name="Implementation-Vendor-Id" value="org.exist-db"/>
                <attribute name="Implementation-URL" value="https://github.com/exist-db/exist"/>

                <attribute name="Specification-Title" value="${project.name} Optional"/>
                <attribute name="Specification-Version" value="${project.version}"/>
                <attribute name="Specification-Vendor" value="The eXist Project"/>

                <attribute name="Source-Repository" value="scm:git:https://github.com/exist-db/exist.git"/>
                <attribute name="Git-Commit" value="${git.revision.full}"/>
                <attribute name="Git-Commit-Abbrev" value="${git.revision}"/>
                <attribute name="Build-Tag" value="${git.branch.full}"/>
                <attribute name="Build-Timestamp" value="${DSTAMP}${TSTAMP}"/>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Build-Jdk" value="${java.version}"/>

                <attribute name="Description" value="eXist XML Native Database"/>
                <attribute name="Created-By" value="${ant.version}"/>
            </manifest>
            <include name="org/exist/*.xsl"/>
            <include name="org/exist/ant/**"/>
            <include name="org/exist/http/**"/>
            <include name="org/exist/jetty/**"/>
            <include name="org/exist/jsp/**"/>
            <include name="org/exist/soap/**"/>
            <include name="org/exist/webstart/**"/>
            <include name="org/exist/xquery/functions/request/**"/>
            <include name="org/exist/xquery/functions/response/**"/>
            <include name="org/exist/xquery/functions/session/**"/>
        </jar>

        <echo message="Creating exist-testkit.jar ..."/>
        <jar compress="true" jarfile="exist-testkit.jar">
            <manifest>
                <attribute name="Implementation-Title" value="${project.name} Test Kit"/>
                <attribute name="Implementation-Version" value="${project.version}"/>
                <attribute name="Implementation-Vendor" value="The eXist Project"/>
                <attribute name="Implementation-Vendor-Id" value="org.exist-db"/>
                <attribute name="Implementation-URL" value="https://github.com/exist-db/exist"/>

                <attribute name="Specification-Title" value="${project.name} Test Kit"/>
                <attribute name="Specification-Version" value="${project.version}"/>
                <attribute name="Specification-Vendor" value="The eXist Project"/>

                <attribute name="Source-Repository" value="scm:git:https://github.com/exist-db/exist.git"/>
                <attribute name="Git-Commit" value="${git.revision.full}"/>
                <attribute name="Git-Commit-Abbrev" value="${git.revision}"/>
                <attribute name="Build-Tag" value="${git.branch.full}"/>
                <attribute name="Build-Timestamp" value="${DSTAMP}${TSTAMP}"/>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Build-Jdk" value="${java.version}"/>

                <attribute name="Description" value="eXist XML Native Database Test Kit"/>
                <attribute name="Created-By" value="${ant.version}"/>
            </manifest>
            <fileset dir="${module.exist-testkit}/${build.classes}">
                <include name="org/exist/ant/**"/>
                <include name="org/exist/TestUtils.class"/>
                <include name="org/exist/test/**"/>
                <include name="xquery/TestRunner.class"/>
                <include name="xquery/TestRunnerMain.class"/>
                <include name="org/exist/xquery/lib/xqsuite/xqsuite.xql"/>
            </fileset>
        </jar>
    </target>

    <!-- ================================================================== -->
    <!-- Build all                                                          -->
    <!-- ================================================================== -->
    <target name="all"
        depends="prepare,jar,wrapper,extension-betterform,extension-modules,extensions-xar,test-compile"
        description="Build all">

        <!--  this module must be built after the ldap extension -->
        <ant antfile="build.xml" dir="extensions/security/activedirectory" inheritall="false"/>

        <antcall target="sign"/>
    </target>

    <!-- ================================================================== -->
    <!-- Rebuild all                                                        -->
    <!-- ================================================================== -->
    <target name="rebuild" depends="clean,all" description="Rebuild all"/>


    <!-- ================================================================== -->
    <!-- Create javadoc                                                     -->
    <!-- ================================================================== -->
    <target name="javadocs" description="Create javadoc">
        <delete dir="${build.javadoc}"/>
        <mkdir dir="${build.javadoc}"/>

        <echo message="Generating Javadocs ..."/>
        <javadoc bottom="Copyright (C) The eXist-db Project. All rights reserved." destdir="${build.javadoc}"
            doctitle="eXist Javadocs" noindex="true" notree="true" access="public" maxmemory="1024M"
            source="${build.compiler.source}">
            <packageset dir="${module.exist-core}/${src}">
                <include name="org/**"/>
            </packageset>
            <packageset dir="${build.extensions}/webdav/src">
                <include name="org/**"/>
            </packageset>
            <!--packageset dir="${build.extensions}/contentextraction/src">
                <include name="org/**"/>
            </packageset-->
            <packageset dir="${build.extensions}/fluent/src">
                <include name="org/**"/>
            </packageset>
            <!--packageset dir="${build.extensions}/modules/src">
                <include name="org/**"/>
            </packageset-->
            <classpath>
                <path refid="classpath.core"/>
                <path refid="classpath.jetty"/>
                <path refid="classpath.aspectj"/>
            </classpath>
            <link href="http://xmldb.exist-db.org/javadoc/"/>
            <link href="http://java.sun.com/javase/7/docs/api/"/>
            <link href="http://java.sun.com/javaee/6/docs/api/"/>
            <link href="http://commons.apache.org/codec/apidocs"/>
            <link href="http://commons.apache.org/collections/api/"/>
            <link href="http://commons.apache.org/discovery/apidocs/"/>
            <link href="http://commons.apache.org/fileupload/apidocs/"/>
            <link href="http://commons.apache.org/io/api-release/"/>
            <link href="http://commons.apache.org/logging/apidocs/"/>
            <link href="http://commons.apache.org/pool/apidocs/"/>
            <link href="http://hc.apache.org/httpclient-legacy/apidocs/"/>
            <link href="http://jline.sourceforge.net/javadoc/"/>
            <link href="http://logging.apache.org/log4j/2.x/log4j-api/apidocs/"/>
            <link href="http://www.slf4j.org/api/"/>
            <link href="http://nekohtml.sourceforge.net/javadoc/"/>
            <link href="http://www.quartz-scheduler.org/api/1.8.5/"/>
            <link href="http://ws.apache.org/xmlrpc/apidocs/"/>
            <link href="http://www.antlr2.org/javadoc/"/>
            <link href="http://xerces.apache.org/xerces2-j/javadocs/api/"/>
            <link href="http://xerces.apache.org/xerces2-j/javadocs/xerces2/"/>
            <link href="http://xerces.apache.org/xerces2-j/javadocs/xni/"/>
            <link href="http://xml.apache.org/commons/components/apidocs/resolver/"/>
            <link href="http://xml.apache.org/xalan-j/apidocs/"/>
            <link href="http://java.sun.com/products/javamail/javadocs/"/>
            <link href="http://java.sun.com/javase/technologies/desktop/javabeans/glasgow/javadocs"/>
            <link href="http://download.eclipse.org/jetty/stable-7/apidocs/"/>
            <link href="http://www.saxonica.com/documentation/javadoc"/>
            <link href="http://lucene.apache.org/java/2_9_4/api/all/"/>
        </javadoc>

        <ant antfile="${build.scripts}/extensions-build.xml" target="javadoc" inheritAll="false"/>
    </target>

    <!-- ================================================================== -->
    <!-- Create javadoc with UML diagrams                                   -->
    <!-- ================================================================== -->
    <target depends="prepare" name="javadocs-uml" description="Create javadoc with UML diagrams">
        <antcall target="copy-xapi"/>

        <!--delete dir="webapp/api"/>
        <mkdir dir="webapp/api"/-->
        <echo message="Generating Javadocs ..."/>
        <javadoc bottom="Copyright (C) Wolfgang Meier. All rights reserved." destdir="webapp/api"
            doctitle="eXist Javadocs" noindex="true" notree="true" access="public" maxmemory="1024M"
            source="${build.compiler.source}">
            <packageset dir="${src}">
                <include name="org/**"/>
            </packageset>
            <classpath>
                <path refid="classpath.core"/>
                <path refid="classpath.jetty"/>
            </classpath>
            <doclet name="org.umlgraph.doclet.UmlGraphDoc" path="${tools.ant}/lib/UMLGraph-5.2.jar">
                    <!-- Parameter definitions are at http://www.umlgraph.org/doc/cd-opt.html -->
                    <param name="-inferrel"/>
                    <param name="-inferdep"/>
                    <!-- param name="-attributes"/ -->
                    <!-- param name="-operations"/ -->
                    <param name="-hide" value="java.*"/>
                    <param name="-collpackages" value="java.util.*"/>
                    <param name="-qualify"/>
                    <param name="-postfixpackage"/>
                    <param name="-nodefontsize" value="9"/>
                    <param name="-nodefontpackagesize" value="7"/>
                    <param name="-link" value="http://java.sun.com/javase/6/docs/api/"/>
            </doclet>
            <link href="http://java.sun.com/javase/6/docs/api/"/>
            <link href="http://java.sun.com/javaee/5/docs/api/"/>
            <link href="http://commons.apache.org/codec/apidocs"/>
            <link href="http://commons.apache.org/collections/api/"/>
            <link href="http://commons.apache.org/discovery/apidocs/"/>
            <link href="http://commons.apache.org/fileupload/apidocs/"/>
            <link href="http://commons.apache.org/io/api-1.4/"/>
            <link href="http://commons.apache.org/logging/apidocs/"/>
            <link href="http://commons.apache.org/pool/apidocs/"/>
            <link href="http://hc.apache.org/httpclient-3.x/apidocs/"/>
            <link href="http://jline.sourceforge.net/javadoc/"/>
            <link href="http://logging.apache.org/log4j/2.x/log4j-api/apidocs/"/>
            <link href="http://nekohtml.sourceforge.net/javadoc/"/>
            <link href="http://www.quartz-scheduler.org/docs/api/"/>
            <link href="http://ws.apache.org/xmlrpc/apidocs/"/>
            <link href="http://www.antlr2.org/javadoc/"/>
            <link href="http://www.jgroups.org/javagroupsnew/docs/javadoc/"/>
            <link href="http://xerces.apache.org/xerces2-j/javadocs/api/"/>
            <link href="http://xerces.apache.org/xerces2-j/javadocs/xerces2/"/>
            <link href="http://xerces.apache.org/xerces2-j/javadocs/xni/"/>
            <link href="http://xml.apache.org/commons/components/apidocs/resolver/"/>
            <link href="http://xml.apache.org/xalan-j/apidocs/"/>
            <link href="http://java.sun.com/products/javamail/javadocs/"/>
            <link href="http://java.sun.com/javase/technologies/desktop/javabeans/glasgow/javadocs"/>
        </javadoc>

        <ant antfile="build.xml" dir="extensions/fluent" target="javadoc"/>
    </target>

    <!-- ================================================================== -->
    <!-- Cleanup                                                            -->
    <!-- ================================================================== -->
    <target name="clean" description="Cleanup">
        <echo message="-------------------------"/>
        <echo message="Cleaning"/>
        <echo message="-------------------------"/>
        <delete dir="${build.examples}"/>
        <delete dir="${build.javadoc}"/>
        <delete dir="${dist.dir}"/>
        <delete quiet="true" failonerror="false">
            <fileset dir="log" includes="*" />
            <fileset dir="tmp" includes="*"/>
        </delete>
        <delete quiet="true">
            <fileset dir="${src.webapp}/WEB-INF/logs" excludes=".DO_NOT_DELETE" includes="*"/>
        </delete>

        <delete dir="${junit.reports}/junit"/>
        <delete dir="${junit.reports}/pmd"/>
        <delete dir="${junit.reports}/jdepend"/>
        <delete dir="${junit.reports}/classes"/>

        <delete dir="${module.exist-core}/${target}"/>
        <delete dir="${module.exist-start}/${target}"/>
        <delete dir="${module.exist-testkit}/${target}"/>

        <delete dir="samples/classes"/>
        <delete failonerror="no" file="examples.jar"/>
        <delete failonerror="no" file="exist.jar"/>
        <delete failonerror="no" file="exist-optional.jar"/>
        <delete failonerror="no" file="exist-testkit.jar"/>
        <delete failonerror="no" file="start.jar"/>
        <delete>
            <fileset dir="installer" includes="eXist-*.jar,install.xml"/>
        </delete>
        <delete failonerror="no" dir="installer/scripts/eXist-db.app"/>

        <delete failonerror="no" dir="${dist}"/>

        <ant antfile="build.xml" dir="extensions/betterform" target="clean" inheritall="false"/>
        <ant antfile="build.xml" dir="extensions/security/activedirectory"  target="clean" inheritall="false"/>
        <ant antfile="build.xml" dir="tools/yajsw" target="clean" inheritall="false"/>

        <ant antfile="${build.scripts}/extensions-build.xml" target="clean" inheritAll="false"/>

        <!-- fall back -->
        <delete failonerror="no">
            <fileset dir="${lib.extensions}" includes="*.jar"/>
        </delete>

    </target>

    <target name="clean-conf" description="Cleanup config file">
        <delete failonerror="no" file="conf.xml"/>
    </target>

    <target name="clean-default-data-dir" description="Remove contents in default data directory">
        <!-- valuable data? -->
        <delete failonerror="no">
            <fileset dir="${src.webapp}/WEB-INF/data/journal"/>
        </delete>
        <delete failonerror="no" dir="${src.webapp}/WEB-INF/data/blob"/>
        <delete failonerror="no" dir="${src.webapp}/WEB-INF/data/lucene"/>
        <delete failonerror="no" dir="${src.webapp}/WEB-INF/data/metadata"/>
        <delete failonerror="no" dir="${src.webapp}/WEB-INF/data/range"/>
        <delete failonerror="no" dir="${src.webapp}/WEB-INF/data/sanity"/>
        <delete failonerror="no">
            <fileset dir="${src.webapp}/WEB-INF/data" includes="*.dbx,*.log,*.lck,spatial_index.*,counters,restxq.registry"
                excludes=".DO_NOT_DELETE"/>
        </delete>
        <delete failonerror="no" dir="${src.webapp}/WEB-INF/expathrepo"/>
        <delete failonerror="no" dir="${src.webapp}/WEB-INF/data/expathrepo"/>
    </target>

    <target name="clean-all" depends="clean-default-data-dir" description="Cleanup deeper, data is removed">
        <!-- javadoc -->
        <delete dir="${src.webapp}/api"/>
                <!-- derived files -->
        <delete failonerror="no" file="client.properties"/>
        <delete failonerror="no" file="conf.xml"/>
        <delete failonerror="no" file="descriptor.xml"/>
        <delete failonerror="no" file="mime-types.xml"/>
        <delete failonerror="no" file="${src.webapp}/WEB-INF/web.xml"/>

        <delete failonerror="no">
            <fileset dir="installer" includes="install.xml"/>
            <fileset dir="webapp" includes="header.xml"/>
        </delete>

        <!-- more files -->
        <delete failonerror="no" file=".exist_history"/>
        <delete failonerror="no" file=".exist_query_history"/>

        <!-- autodeploy -->
        <delete failonerror="no" dir="autodeploy"/>

        <delete failonerror="no">
            <fileset dir="${jetty.dir}/tmp">
                <exclude name=".DO_NOT_DELETE"/>
            </fileset>
        </delete>

    </target>

    <target name="wrapper" depends="jar">
        <ant antfile="build.xml" dir="tools/yajsw" inheritall="false">
             <property environment="env." name="env.EXIST_HOME"  value="${basedir}" />
        </ant>
    </target>

    <target name="extension-betterform" depends="jar">
        <ant antfile="build.xml" dir="extensions/betterform" inheritall="false"/>
    </target>

    <target name="extension-modules" depends="jar">

        <!--  hand over build to extensions build -->
        <ant antfile="${build.scripts}/extensions-build.xml" target="all" inheritAll="false"/>

    </target>

    <target name="samples" depends="jar" description="Build samples">
        <ant antfile="build.xml" dir="samples"/>
    </target>

    <target name="extensions-xar" depends="jar" if="${use.autodeploy.feature}" >
        <ant antfile="build/scripts/setup.xml" dir="." inheritall="false"/>
    </target>

    <target name="cleandocs">
        <replaceregexp>
            <regexp pattern="/\*.*Description of the Method.*\*/"/>
            <substitution expression=""/>
            <fileset dir="${module.core}/${src}/org/exist/xmldb">
                <include name="*.java"/>
            </fileset>
        </replaceregexp>
    </target>

    <!-- ============================================================================ -->
    <!-- Sign jar files for java webstart.                                            -->
    <!--                                                                              -->
    <!-- ============================================================================ -->
    <target name="sign" if="key.store.present">

        <!-- Only sign if key store exists. otherwise skip signing -->

        <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"/>
        <echo message="!! Signing jar files ..."/>
        <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"/>
        <ant antfile="build/scripts/jarsigner.xml" dir="." target="jnlp-all"/>

    </target>


    <!-- ============================================================================ -->
    <!-- Download additional files                                                    -->
    <!-- ============================================================================ -->
    <target name="download-additional-jars" description="Download optional third-party jar files."/>


</project>

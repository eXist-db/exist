<?xml version="1.0" encoding="UTF-8"?>

<!-- ======================================================================= -->
<!-- eXist build file : Subversion                                            -->
<!-- ======================================================================= -->
<!-- $Id$ -->

<project basedir="../.." name="SubVersion">

  <description>Subversion tasks</description>

  <property name="svn.svnkit.jar" value="${tools.ant}/lib/svnkit.jar"/>
  <property name="svn.svnkitcli.jar" value="${tools.ant}/lib/svnkit-cli.jar"/>
  <property name="svn.download.zip" value="${tools.ant}/lib/download.zip"/>

  <property name="svn.patch.file" value="exist.patch"/>

  <property name="javasvn.jar" location="${svn.svnkit.jar}"/>
  <available file="${javasvn.jar}" property="svn-present"/>

  <!-- 
    Try to read SVN info from entries-file (if file exist).
    Fallback to VERSION.txt if subversion is not available.
  -->
  <target name="svn-prepare" if="svn-present">
    <taskdef name="svninfo" classname="nl.ow.dilemma.ant.svn.SubversionInfoTask">
      <classpath refid="classpath.core"/>
    </taskdef>

    <tstamp/>

    <svninfo url="https://exist.svn.sourceforge.net/svnroot/exist/branches/eXist-stable-1.2" username="anonymous"
      password="anonymous"/>

    <propertyfile file="VERSION.txt" comment="eXist build info (updated using svnkit)">
      <entry key="project.version" value="${project.version}"/>
      <entry key="project.build" value="${DSTAMP}"/>
      <entry key="svn.revision" value="${svn.revision}"/>
    </propertyfile>
  </target>

  <!-- 
    Download jar files from maven2 repository. Typically this is an older version
    of the library, but the download size is significantly smaller.
  -->
  <target name="svn-download" description="Download SVN library from maven.">
    <get src="http://repo1.maven.org/maven2/com/svnkit/svnkit/1.1.0/svnkit-1.1.0.jar"
      dest="${svn.svnkit.jar}" verbose="true"/>
    <get src="http://repo1.maven.org/maven2/com/svnkit/svnkit-cli/1.1.0/svnkit-cli-1.1.0.jar"
      dest="${svn.svnkitcli.jar}" verbose="true"/>
  </target>

  <!-- 
    Download jar files the author website. This is newest version of the library, 
    if the URL is updated in time. The download size is significantly larger.
  -->
  <target name="svn-download2" description="Download latest SVN library.">
    <get src="http://www.svnkit.com/org.tmatesoft.svn_1.1.4.standalone.zip"
      dest="${svn.download.zip}" verbose="true"/>

    <unzip src="${svn.download.zip}" dest="${tools.ant}/lib">
      <patternset>
        <include name="**/svnkit.jar"/>
        <include name="**/svnkit-cli.jar"/>
      </patternset>
      <mapper type="flatten"/>
    </unzip>

    <delete file="${svn.download.zip}"/>
  </target>

  <!-- 
    Create patch; unfortunately VERSION.txt is included as well.
  -->
  <target name="svn-diff" description="Make patch.">

    <echo>Generating patch file '${svn.patch.file}'....</echo>
    <java classname="org.tmatesoft.svn.cli.SVN" dir="." fork="true" output="eXist.patch">
      <arg value="diff"/>
      <arg value="."/>
      <classpath>
        <pathelement location="${svn.svnkit.jar}"/>
        <pathelement location="${svn.svnkitcli.jar}"/>
      </classpath>
    </java>
    <echo>Reminder: please remove all VERSION.txt diffs from the file '${svn.patch.file}'.</echo>
  </target>

  <!-- 
    Check out / update sources from subversion code archive.
  -->
  <target name="svn-update" description="Update project from SubVersion archive.">
    <property name="source-root" value="."/>
    <property name="repository.URL" value="https://exist.svn.sourceforge.net/svnroot/exist/branches/eXist-stable-1.2"/>
    <java classname="org.tmatesoft.svn.cli.SVN"
       dir="." fork="true">
      <arg value="co"/>
      <arg value="${repository.URL}/trunk/eXist"/>
      <arg value="${source-root}"/>
      <classpath>
        <pathelement location="${svn.svnkit.jar}"/>
        <pathelement location="${svn.svnkitcli.jar}"/>
      </classpath>
    </java>
  </target>

</project>

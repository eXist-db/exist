<?xml version="1.0" encoding="UTF-8"?>

<!-- ======================================================================= -->
<!-- eXist build file : Subversion                                            -->
<!-- ======================================================================= -->

<!-- $Id$ -->

<!-- 
  Note: 
  Both svnkit jar files are written into the user.lib directory. Unfortunately
  not all ant tasks can find the jar files via the classpath. As a work around in
  build.sh and build.xml the jar files are added to the LOCALCLASSPATH variable.
  
  I realize that this is not the best solution, we'll need to think of a better way.
  [e.g. copy jars into both lib/user and ant/lib] 
  
  
  Note:
  svnkit 1.7.0 has some more jar-dependancies compared to 1.3.x ; therefore it probably
  a better idea to download the complete jar set using a tool like ivy.
-->

<project basedir="../.." name="SubVersion">

  <description>Subversion tasks</description>
  
  <property name="svnkit.repo"    value="http://maven.tmatesoft.com/content/repositories/releases"/>
  <property name="svnkit.version" value="1.3.7"/>

  <property name="svn.svnkit.jar" value="${lib.user}/svnkit.jar"/>
  <property name="svn.tmp.svnkit.jar" value="${lib.user}/svnkit-${svnkit.version}.jar"/>
  
  <property name="svn.svnkitcli.jar" value="${lib.user}/svnkit-cli.jar"/>
  <property name="svn.tmp.svnkitcli.jar" value="${lib.user}/svnkit-cli-${svnkit.version}.jar"/>
  
  <property name="svn.patch.file" value="exist.patch"/>
  

 
  <available classname="org.tmatesoft.svn.cli.SVN" property="svn-present"/>
   

  <!-- 
    Try to read SVN info from entries-file (if file exist).
    Fallback to VERSION.txt if subversion is not available.
  -->
  <target name="svn-prepare" if="svn-present">
    <echo>Determining local SVN revision</echo>
    
    <taskdef name="svninfo" classname="nl.ow.dilemma.ant.svn.SubversionInfoTask"/>

    <tstamp/>

    <svninfo username="anonymous" password="anonymous"/>

    <echo>Updating VERSION.txt</echo>
    <propertyfile file="VERSION.txt" comment="eXist build info (updated using svnkit)">
      <entry key="project.version" value="${project.version}"/>
      <entry key="project.build" value="${DSTAMP}"/>
      <entry key="svn.revision" value="${svn.revision}"/>
    </propertyfile>
  </target>


  <!-- 
    Download jar files the author website. This is newest version of the library, 
    if the URL is updated in time. The download size is significantly larger.
  -->
  <target name="svn-download" description="Download latest SVN library.">

		<taskdef name="fetch" classname="nl.ow.dilemma.ant.fetch.FetchTask"/>
    
    <!--echo>Old svnkit files will be remove automagically from "${lib.user}"</echo>
    <delete verbose="true">
      <fileset dir="${lib.user}" includes="svnkit*jar" excludes="svnkit*${svnkit.version}*jar"></fileset>
    </delete-->
    
    <!-- Get file and rename  -->
		<fetch  dest="${lib.user}" 
		  url="${svnkit.repo}/org/tmatesoft/svnkit/svnkit-cli/${svnkit.version}/svnkit-cli-${svnkit.version}.jar" classname="org.tmatesoft.svn.cli.SVN"/>
    
    <move file="${svn.tmp.svnkitcli.jar}" tofile="${svn.svnkitcli.jar}" failonerror="false"/>
    
    <!-- Get file and rename  -->
    <fetch classpathref="classpath.core" dest="${lib.user}" 
      url="${svnkit.repo}/org/tmatesoft/svnkit/svnkit/${svnkit.version}/svnkit-${svnkit.version}.jar" classname="org.tmatesoft.svn.util.Version"/>

    <move file="${svn.tmp.svnkit.jar}" tofile="${svn.svnkit.jar}" failonerror="false"/>
  </target>

  <!-- 
    Create patch; unfortunately VERSION.txt is included as well.
  -->
  <target name="svn-diff" description="Make patch.">

    <echo>Generating patch file '${svn.patch.file}'....</echo>
    <java classname="org.tmatesoft.svn.cli.SVN" dir="." fork="true" output="${svn.patch.file}">
      <arg value="diff"/>
      <arg value="."/>
      <classpath>
        <pathelement location="${svn.svnkit.jar}"/>
        <pathelement location="${svn.svnkitcli.jar}"/>
      </classpath>
    </java>
    <echo>Reminder: please remove all VERSION.txt diffs from the file '${svn.patch.file}'.</echo>
  </target>

  <!-- 
    Check out / update sources from subversion code archive.
  -->
  <target name="svn-update" description="Update project from SubVersion archive.">
    <property name="source-root" value="."/>
    <property name="repository.URL" value="https://exist.svn.sourceforge.net/svnroot/exist"/>
    <java classname="org.tmatesoft.svn.cli.SVN" dir="." fork="true">
      <arg value="co"/>
      <arg value="${repository.URL}/trunk/eXist"/>
      <arg value="${source-root}"/>
      <classpath>
        <pathelement location="${svn.svnkit.jar}"/>
        <pathelement location="${svn.svnkitcli.jar}"/>
      </classpath>
    </java>
  </target>

</project>

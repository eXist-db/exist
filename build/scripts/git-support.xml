<?xml version="1.0" encoding="UTF-8" ?>
<project basedir="../.." name="git" default="git.details">
        
        <available file="${basedir}/.git" type="dir" property="git.present"/>

        <target name="git.details" description="Setup ${git.branch}, ${git.revision} and ${git.description} properties" depends="git.details.from-git-repo,git.details.no-repo">
                <!-- meta target which depends on two mutually exclusive targets -->
        </target>

        <target name="git.details.no-repo" description="Sets basic git details from static properties when git isn't present" unless="git.present">
                <tstamp>
                        <format property="TSTAMP" pattern="HHmmss" timezone="UTC"/>
                </tstamp>

                <!-- The BUILD label from our Semantic Versioning scheme -->
                <property name="build.label" value="-SNAPSHOT+${DSTAMP}${TSTAMP}"/>
        </target>

        <target name="git.details.from-git-repo" description="Gets git details from the local repo" if="git.present">
                <exec executable="git" outputproperty="git.branch.full" errorproperty="git.branch.full.error" failifexecutionfails="false">
                        <arg value="symbolic-ref"/>
                        <arg value="-q"/>
                        <arg value="--short"/>
                        <arg value="HEAD"/>
                </exec>

                <exec executable="git" outputproperty="git.tag.full" errorproperty="git.tag.error" failifexecutionfails="false">
                        <arg value="describe"/>
                        <arg value="--tags"/>
                        <arg value="--exact-match"/>
                </exec>

                <!-- if we are not on a branch, we are on a tag, so set the branch to the tag path -->
                <if>
                        <or>
                                <not><isset property="git.branch.full"/></not>
                                <equals arg1="${git.branch.full}" arg2=""/>
                        </or>
                        <then>
                                <property name="git.branch" value="refs/tags/${git.tag.full}"/>
                        </then>
                        <else>
                                <property name="git.branch" value="${git.branch.full}"/>
                        </else>
                </if>

                <exec executable="git" outputproperty="git.revision.full" failifexecutionfails="false">
                        <arg value="rev-parse"/>
                        <arg value="HEAD"/>
                </exec>

                <exec executable="git" outputproperty="git.revision" failifexecutionfails="false">
                        <arg value="rev-parse"/>
                        <arg value="--short"/>
                        <arg value="HEAD"/>
                </exec>
                
                <exec executable="git" outputproperty="git.description" failifexecutionfails="false">
                        <arg value="describe"/>
                        <arg value="--tags"/>
                        <arg value="HEAD"/>
                </exec>
                
                <condition property="git.commit" value="${git.commit}" else="${git.branch}-${git.revision}">
                        <isset property="git.commit" />      
                </condition>

                <tstamp>
                        <format property="TSTAMP" pattern="HHmmss" timezone="UTC"/>
                </tstamp>

                <!-- The BUILD label from our Semantic Versioning scheme -->
                <condition property="build.label" value="+${DSTAMP}${TSTAMP}">
                        <matches string="${project.version}" pattern="^[0-9]+\.[0-9]+\.[0-9]+-SNAPSHOT$"/>
                </condition>
                <condition property="build.label" value="">
                        <not><isset property="build.label"/></not>
                </condition>

                
                <copy file="${basedir}/VERSION.txt.tmpl" tofile="${basedir}/VERSION.txt" overwrite="true" filtering="true">
                        <filterset>
                                <filter token="version" value="${project.version}"/>
                                <filter token="timestamp" value="${DSTAMP}${TSTAMP}"/>
                                <filter token="scm.branch" value="${git.branch}"/>
                                <filter token="scm.revision" value="${git.revision}"/>
                        </filterset>
                </copy>
                
                <!-- propertyfile file="${basedir}/VERSION.txt">
                        <entry key="project.build" value="${DSTAMP}"/>
                        <entry key="scm.branch" value="${git.branch}"/>
                        <entry key="scm.revision" value="${git.revision}"/>
                </propertyfile -->
        </target>
        
</project>
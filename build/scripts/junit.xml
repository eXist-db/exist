<?xml version="1.0" encoding="UTF-8"?>

<!-- ======================================================================= -->
<!-- eXist-db build file : Run jUnit tests                                    -->
<!-- ======================================================================= -->
<!-- $Id$ -->

<project basedir="../.." default="test" name="jUnit tests">
	
    <description>jUnit tests for eXist-db</description>
    
    <!-- import common targets -->
    <import file="../../build.xml"/>

    <path id="classpath.junit">
        <pathelement path="${junit.reports}/classes"/>
    </path>

     <path id="classpath.test-libs">
         <fileset dir="${lib.test}">
            <include name="*.jar"/>
        </fileset>
    </path>


    <target name="test"
        depends="test-prepare, test-local, test-extensions, test-jetty, test-concurrent, test-remote, test-recovery, test-wrapup, test-ant"
            description="Run jUnit tests"/>

    <!-- jetty.port and jetty.port.ssl with defaults. /ljo -->
    <property name="jetty.port" value="8080" />
    <property name="jetty.port.ssl" value="8443" />
    <!-- Or shall we rather have two, eg
	 jetty.port.jetty and jetty.port.standalone
	 with jetty.port pointing to jetty.port.jetty? /ljo -->
    <property name="jetty.port.jetty" value="8080" />
    <property name="jetty.port.ssl.jetty" value="8443" />
    <property name="jetty.port.standalone" value="8088" />
    <property name="jetty.port.ssl.standalone" value="8451" />

    <!-- Extra jUnit properties -->
    <property name="junit.reports.dat" value="${junit.reports}/junit/data"/>
    <property name="junit.reports.html" value="${junit.reports}/junit/html"/>
    <property name="junit.reports.temp" value="${junit.reports}/temp"/>

    <target name="test-compile">
        <mkdir dir="${junit.reports}/classes"/>

         <echo
            message="Compiling with Java ${ant.java.version} from ${build.compiler.source} source to ${build.compiler.target} target, debug ${build.debug}, optimize ${build.optimize}, deprecation ${build.deprecation}"/>
            
        <javac includeAntRuntime="false" debug="${build.debug}" deprecation="${build.deprecation}"
            destdir="${junit.reports}/classes" encoding="UTF-8"
            optimize="${build.optimize}" srcdir="${junit.reports}/src"
            source="${build.compiler.source}" target="${build.compiler.target}">
            <classpath>
                <path refid="classpath.core"/>
                <path refid="classpath.jetty"/>
                <path refid="classpath.test-libs"/>
            </classpath>
        </javac>
        <copy todir="${junit.reports}/classes/org/exist/performance/ant"
              file="${junit.reports}/src/org/exist/performance/ant/antlib.xml"/>
        <copy todir="${junit.reports}/classes/org/exist/performance"
            file="${junit.reports}/src/org/exist/performance/log2html.xql"/>
        <copy todir="${junit.reports}/classes/org/exist/config/mapping"
            file="${junit.reports}/src/org/exist/config/mapping/Mapping.xml"/>
       <!-- <ant antfile="build.xml" dir="extensions/indexes" target="compile-tests"/>
        <ant antfile="build.xml" dir="extensions/xqdoc" target="compile-tests"/>
        <ant antfile="build.xml" dir="extensions/xslt" target="compile-tests"/>  -->
    </target>

    <!-- Seperate target for creating folders -->
    <target name="test-prepare" depends="jar,test-compile">
        <delete failonerror="false">
            <fileset dir="webapp/WEB-INF/data" includes="*.dbx,*.log"/>
        </delete>

        <delete dir="${junit.reports.temp}"/>
        <delete dir="${junit.reports.dat}"/>
        <delete dir="${junit.reports.html}"/>

        <!--mkdir dir="${junit.reports}"/-->
        <mkdir dir="${junit.reports}/classes"/>
        <mkdir dir="${junit.reports.dat}"/>
        <mkdir dir="${junit.reports.html}"/>
    </target>

    <!-- Generate HTML reports -->
    <target name="test-wrapup">
        <echo message="-----------------------------"/>
        <echo message="Creating jUnit reports, please wait"/>
        <echo message="-----------------------------"/>
        <junitreport todir="${junit.reports.dat}">
            <fileset dir="${junit.reports.dat}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.reports.html}"/>
        </junitreport>
    </target>

    <!-- Test set 1 : local database instance -->
    <target name="test-local">
        <echo message="------------------------------------------"/>
        <echo message="Running tests on a local database instance"/>
        <echo message="------------------------------------------"/>

        <junit haltonfailure="false" printsummary="yes" showoutput="${junit.output}" 
            maxmemory="${junit.forked.VM.maxmemory}">
            <sysproperty key="exist.home" value="${basedir}" />
	    <!-- local database, so should not be needed. /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            
            <formatter type="plain"/>
            <formatter type="xml"/>

            <!-- xquery smoke tests //-->
            <test fork="yes" name="xquery.CoreTests" todir="${junit.reports.dat}"/>
            <test fork="yes" name="xquery.dates.DateTests" todir="${junit.reports.dat}"/>
            <test fork="yes" name="xquery.expathrepo.ExpathRepoTests" todir="${junit.reports.dat}"/>
            <!--test fork="yes" name="xquery.indexing.IndexingTests" todir="${junit.reports.dat}"/-->
            <test fork="yes" name="xquery.util.UtilTests" todir="${junit.reports.dat}"/>
            <test fork="yes" name="xquery.xinclude.XIncludeTests" todir="${junit.reports.dat}"/>
            <!--test fork="yes" name="xquery.xmlcalabash.XMLCalabashTests" todir="${junit.reports.dat}"/-->
            <!--test fork="yes" name="xquery.xproc.XProcTests" todir="${junit.reports.dat}"/-->
            <test fork="yes" name="xquery.xquery3.XQuery3Tests" todir="${junit.reports.dat}"/>
            <test fork="yes" name="xquery.optimizer.OptimizerTests" todir="${junit.reports.dat}"/>

            <!--  //-->            
            <test fork="yes" name="org.exist.util.SortTests" todir="${junit.reports.dat}"/>
            <test fork="yes" name="org.exist.xmldb.XmldbLocalTests" todir="${junit.reports.dat}"/>
            <test fork="yes" name="org.exist.xupdate.AllXupdateTests" todir="${junit.reports.dat}"/>
            <test fork="yes" name="org.exist.xquery.AllXqueryTests" todir="${junit.reports.dat}"/>
            <test fork="yes" name="org.exist.xquery.OptimizerTest" todir="${junit.reports.dat}"/>
	    	<test fork="yes" name="org.exist.collections.triggers.AllTriggerTests" todir="${junit.reports.dat}"/>
	    	<test fork="yes" name="org.exist.collections.AllCollectionTests" todir="${junit.reports.dat}"/>
	    	<!-- <test fork="yes" name="org.exist.fulltext.AllFulltextTests" todir="${junit.reports.dat}"/> -->
            <test fork="yes" name="org.exist.security.XMLDBSecurityTest" todir="${junit.reports.dat}"/>

            <!-- Execute all other tests except those that have to be called manually.   -->
            <batchtest fork="yes" todir="${junit.reports.dat}">
                <fileset dir="${junit.reports}/src">
                    <include name="**/*Test.java"/>
                    <include name="org/exist/*/*Test.java"/>
                    <exclude name="**/concurrent/**/*.java"/>
                    <exclude name="**/xmldb/*.java"/>
                    <exclude name="**/xupdate/*.java"/>
                    <exclude name="**/xquery/*.java"/>
                    <exclude name="**/xmlrpc/*.java"/>
                    <exclude name="**/http/*.java"/>
                    <exclude name="**/storage/*.java"/>
                    <exclude name="**/storage/serializers/*.java"/>
                    <exclude name="**/storage/lock/*.java"/>
                    <exclude name="**/soap/*.java"/>
                    <exclude name="**/numbering/*.java"/>
		    		<exclude name="**/collections/*.java"/>
                    <exclude name="**/security/*.java"/>
                    <exclude name="org/exist/*.java"/>
                    <exclude name="**/fulltext/**/*.java"/>
		    		<exclude name="org/exist/http/underheavyload/*.java"/>
		    		<exclude name="org/exist/util/hashtable/Abstract*.java"/>
                    <exclude name="xquery/**/*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
	
    <!-- Test set 2 : Jetty Server -->
    <target name="test-jetty">
        <echo message="------------------------------------------"/>
        <echo message="Running tests on a remote Jetty Server"/>
        <echo message="------------------------------------------"/>

        <junit haltonfailure="false" printsummary="yes" showoutput="${junit.output}" maxmemory="${junit.forked.VM.maxmemory}">
            <sysproperty key="exist.home" value="${basedir}" />
	    <!-- fixme! - jetty.port.jetty /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            
            <formatter type="plain"/>
            <formatter type="xml"/>

            <batchtest fork="yes" todir="${junit.reports.dat}">
                <fileset dir="${junit.reports}/src">
                    <include name="org/exist/soap/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>


    <!-- Test set 3 : concurrent tests -->
    <target name="test-concurrent">
        <delete failonerror="false">
            <fileset dir="webapp/WEB-INF/data" includes="*.dbx"/>
        </delete>
        <echo message="-----------------"/>
        <echo message="Concurrency tests on local database"/>
        <echo message="-----------------"/>
        <junit haltonfailure="false" printsummary="on" showoutput="${junit.output}" fork="no">
            <sysproperty key="exist.home" value="${basedir}" />
	    <!-- local database, so should not be needed. /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            
            <formatter type="plain"/>
            <formatter type="xml"/>
            <test name="org.exist.xmldb.concurrent.AllConcurrentTests" todir="${junit.reports.dat}"/>
        </junit>
    </target>

    <!-- Test set 4 : recovery tests -->
    <target name="test-recovery">
        <echo message="--------------"/>
        <echo message="Recovery tests"/>
        <echo message="--------------"/>
        <junit haltonfailure="false" printsummary="on" showoutput="${junit.output}" fork="yes" maxmemory="${junit.forked.VM.maxmemory}">
            <sysproperty key="exist.home" value="${basedir}" />
	    <!-- local database, so should not be needed. /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            <formatter type="plain"/>
            <formatter type="xml"/>
            <test name="org.exist.storage.AllStorageTests" todir="${junit.reports.dat}"/>
        </junit>
    </target>

    <!-- Test set 5: tests on custom index modules -->
    <target name="test-extensions">
        <ant antfile="${build.scripts}/extensions-build.xml" target="test" inheritAll="false"/>
    </target>


    <!-- Helper target for starting Standalone Server -->
    <target name="start-server">
        <echo message="---------------------------------------"/>
        <echo message="Starting remote Standalone Server..."/>
        <echo message="---------------------------------------"/>
        <delete failonerror="false">
            <fileset dir="webapp/WEB-INF/data" includes="*.dbx"/>
        </delete>
        <java classname="org.exist.jetty.StandaloneServer">
            <sysproperty key="exist.home" value="${basedir}" />
	    <!-- fixme! - jetty.port.standalone /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port.standalone}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl.standalone}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <!--arg value="-d"/-->
        </java>
        <echo>Standalone Server started.</echo>
    </target>

    <!-- Test set 5 : tests on remote server -->
    <target name="test-remote" depends="jar">
        <mkdir dir="${junit.reports}"/>
        <echo message="--------------------------------"/>
        <echo message="Running tests on remote database"/>
        <echo message="--------------------------------"/>
        <junit haltonfailure="false" printsummary="yes" showoutput="${junit.output}" maxmemory="${junit.forked.VM.maxmemory}">
            <sysproperty key="exist.home" value="${basedir}" />
	    <!-- fixme! - jetty.port.standalone /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port.standalone}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl.standalone}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            <formatter type="plain"/>
            <formatter type="xml"/>

            <test fork="yes" name="org.exist.xmlrpc.AllXmlRpcTests" todir="${junit.reports.dat}"/>

            <test fork="yes" name="org.exist.xmldb.XmldbRemoteTests" todir="${junit.reports.dat}"/>
            <test fork="yes" name="org.exist.xquery.XqueryRemoteTests" todir="${junit.reports.dat}"/>
            <test fork="yes" name="org.exist.http.RESTServiceTest" todir="${junit.reports.dat}"/>
            <test fork="yes" name="org.exist.storage.XIncludeSerializerTest" todir="${junit.reports.dat}"/>
        </junit>
    </target>

    
        <!-- Test set 6 : tests on eXist-db ant tasks -->
    <target name="test-ant" depends="jar">
        <mkdir dir="${junit.reports}"/>
        <echo message="--------------------------------"/>
        <echo message="Running antunit tests on eXist-db ant tasks"/>
        <echo message="--------------------------------"/>
        <junit haltonfailure="false" printsummary="yes" showoutput="${junit.output}" maxmemory="${junit.forked.VM.maxmemory}">
            <sysproperty key="exist.home" value="${basedir}" />
	    <!-- local database, so should not be needed. /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            <formatter type="plain"/>
            <formatter type="xml"/>

            <test fork="yes" name="org.exist.ant.AntUnitTestRunner" todir="${junit.reports.dat}"/>
        </junit>
    </target>

    <target name="extra-tests">
        <echo message="------------------------------------------"/>
        <echo message="Running additional tests, which may take some time"/>
        <echo message="------------------------------------------"/>

        <junit haltonfailure="false" printsummary="yes" showoutput="${junit.output}" maxmemory="${junit.forked.VM.maxmemory}">
            <sysproperty key="exist.home" value="${basedir}" />
	    <!-- fixme! - jetty.port.jetty /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            
            <formatter type="plain"/>
            <formatter type="xml"/>
            <test fork="yes" name="org.exist.xquery.XQueryUpdateTest" todir="${junit.reports.dat}"/>
        </junit>
    </target>

    <!-- Helper target for stopping remote Standalone Server -->
    <!-- This target must be called after all tests because it shutsdown -->
    <!-- the current Jvm -->
    <target name="test-shutdown-server">
      <!-- Register Ant tasks for eXist-db -->
      <typedef resource="org/exist/ant/antlib.xml" uri="http://exist-db.org/ant">

	<!-- fixme! -  jetty.port.standalone.
	     But no need to pass in here in shutdown. 
	     And no .ssl needed. /ljo -->
        <sysproperty key="jetty.port" value="${jetty.port.standalone}" />
        <classpath refid="classpath.core"/>
        <classpath refid="classpath.junit"/>
        <classpath refid="classpath.jetty"/>
      </typedef>
      
      <echo message="Shutting down the Standalone Server ..."/>
      <xmldb:shutdown xmlns:xmldb="http://exist-db.org/ant"
                      uri="xmldb:exist://localhost:${jetty.port.standalone}/xmlrpc/db"
                      user="admin" password=""/>
      <sleep seconds="10"/>
    </target>
    
    <!-- External tests -->

    <available file="${junit.reports}/external/XQTS_1_0_3" property="xqts.present"/>

    <target name="download-xqts" description="Download XQTS file." unless="xqts.present">
        <mkdir dir="${junit.reports}/external"/>

        <!-- XML Query Test Suite -->
        <!-- http://www.w3.org/XML/Query/test-suite/          -->
        <get src="http://dev.w3.org/2006/xquery-test-suite/PublicPagesStagingArea/XQTS_1_0_3.zip"
            dest="${junit.reports}/external/XQTS_1_0_3.zip" verbose="true" usetimestamp="true"/>

        <unzip src="${junit.reports}/external/XQTS_1_0_3.zip" dest="${junit.reports}/external/XQTS_1_0_3"/>
    </target>

    <available file="${junit.reports}/src/org/exist/xquery/xqts/XQTS_1_0_3" property="xqts_junit.present"/>

    <target name="prepare-xqts" depends="download-xqts" unless="xqts_junit.present">
        <echo message="---------------------------------------"/>
        <echo message="Generating junit tests from XQTS ......"/>
        <echo message="---------------------------------------"/>
        <delete failonerror="false">
            <fileset dir="${junit.reports}/src/org/exist/xquery/xqts/" excludes="XQTS_case.java,XQTS_To_junit.java,QT3TS_case.java,QT3TS_To_junit.java"/>
        </delete>
    	<!-- workaround include bug -->
    	<copy todir="${basedir}/cat">
    		<fileset dir="${junit.reports}/external/XQTS_1_0_3/cat"/>
    	</copy>
        <java classname="org.exist.xquery.xqts.XQTS_To_junit">
            <sysproperty key="exist.home" value="${basedir}" />
            <sysproperty key="exist.jmxagent" value="" />
	    	<!-- fixme! - jetty.port.jetty /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
        </java>
        <delete dir="${basedir}/cat" failonerror="false"/>
        <echo>JUnit tests generated.</echo>
    </target>

    <available file="${junit.reports}/external/XSLTS_1_1_0" property="xslts.present"/>
    
    <target name="download-xslts" description="Download XSLTS file." unless="xslts.present">
        <mkdir dir="${junit.reports}/external"/>
        
        <!-- XML XSL Test Suite -->
        <!-- http://www.w3.org/XML/Group/xslt20-test/PublishedTestSuites/XSLTS_1_1_0.zip          -->
        <get src="http://www.w3.org/XML/Group/xslt20-test/PublishedTestSuites/XSLTS_1_1_0.zip"
            dest="${junit.reports}/external/XSLTS_1_1_0.zip" verbose="true" usetimestamp="true"/>
        
        <unzip src="${junit.reports}/external/XSLTS_1_1_0.zip" dest="${junit.reports}/external/XSLTS_1_1_0"/>
    </target>
    
    <available file="extensions/xslt/test/src/org/exist/xsl/xslts_1_1_0/" property="xslts_junit.present"/>
    
    <path id="classpath.xslts">
        <pathelement path="extensions/xslt/test/classes"/>
    </path>

    <target name="prepare-xslts" depends="download-xslts"> <!-- unless="xslts_junit.present" -->
        <!--
            <delete>
            <fileset dir="${junit.reports}/src/org/exist/xsl/xslts/"/>
            </delete>
        -->
        
        <echo message="---------------------------------------"/>
        <echo message="Generating junit tests from XSLTS"/>
        <echo message="---------------------------------------"/>
        <delete failonerror="false">
            <fileset dir="extensions/xslt/test/src/org/exist/xslt/xslts_1_1_0/"/>
        </delete>
        <mkdir dir="extensions/xslt/test/src/org/exist/xslt/xslts_1_1_0"/>
        <java classname="org.exist.xslt.XSLTStoJUnit">
            <sysproperty key="exist.home" value="${basedir}" />
            <sysproperty key="exist.jmxagent" value="" />
	    <!-- fixme! - jetty.port.jetty /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.xslts"/>
        </java>
        <echo>tests generated, compiling ...</echo>
        <mkdir dir="extensions/xslt/test/classes"/>
        <javac includeAntRuntime="false" debug="${build.debug}" deprecation="${build.deprecation}"
            destdir="extensions/xslt/test/classes" encoding="UTF-8"
            optimize="${build.optimize}" srcdir="extensions/xslt/test/src"
            source="${build.compiler.source}" target="${build.compiler.target}">
            <classpath>
                <path refid="classpath.core"/>
                <path refid="classpath.aspectj"/>
                <path refid="classpath.junit"/>
                <path refid="classpath.test-libs"/>
                <path refid="classpath.xslts"/>
            </classpath>
        </javac>
        <echo>JUnit tests generated.</echo>
    </target>
    
    <property name="ant.dir" value="tools/ant"/>

    <path id="classpath.ant_launcher">
        <fileset dir="${ant.dir}/lib">
            <include name="ant-launcher.jar"/>
        </fileset>
    </path>

    <!-- Test XQTS : XML Query Test Suite -->
    <target name="test-xqts" depends="prepare-xqts, test-prepare">
        <echo message="--------------"/>
        <echo message="XQTS tests    "/>
        <echo message="--------------"/>
        <junit haltonfailure="false" printsummary="on" showoutput="${junit.output}" fork="yes" maxmemory="${junit.forked.VM.maxmemory.external}">
            <sysproperty key="exist.home" value="${basedir}" />
	    <!-- fixme! - jetty.port.jetty /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.ant_launcher"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            <formatter type="plain"/>
            <formatter type="xml"/>
            <test name="org.exist.xquery.xqts.XQTS_1_0_3.AllTests" todir="${junit.reports.dat}"/>
        </junit>
    </target>

    <path id="classpath.xslts">
        <pathelement path="./extensions/xslt/test/classes"/>
    </path>

    <!-- Test XSLTS : XSL Test Suite -->
    <target name="test-xslts" depends="prepare-xslts, test-prepare, test-compile">
        <echo message="--------------"/>
        <echo message="XSLTS tests    "/>
        <echo message="--------------"/>
        <junit haltonfailure="false" printsummary="on" showoutput="${junit.output}" fork="yes" maxmemory="${junit.forked.VM.maxmemory.external}">
            <sysproperty key="exist.home" value="${basedir}" />
	    <!-- fixme! - jetty.port.jetty /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.ant_launcher"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            <classpath refid="classpath.xslts"/>
            <formatter type="plain"/>
            <formatter type="xml"/>
            <test name="org.exist.xslt.xslts_1_1_0.AllTests" todir="${junit.reports.dat}"/>
        </junit>
    </target>
    
    <!-- QT3 tests -->
    <available file="${junit.reports}/external/QT3-test-suite" property="qt3.present"/>

    <target name="download-qt3" description="Download QT3 file." unless="qt3.present">
        <mkdir dir="${junit.reports}/external"/>

        <get src="https://dl.dropbox.com/u/69715939/QT3-test-suite-121020.zip"
            dest="${junit.reports}/external/QT3-test-suite-121020.zip" verbose="true" usetimestamp="true"/>

        <unzip src="${junit.reports}/external/QT3-test-suite-121020.zip" dest="${junit.reports}/external"/>
    </target>

    <available file="${junit.reports}/src/org/exist/xquery/xqts/qt3" property="qt3_junit.present"/>
    
    <target name="prepare-qt3" depends="download-qt3" unless="qt3_junit.present">

        <echo message="---------------------------------------"/>
        <echo message="Generating junit tests from QT3 ......"/>
        <echo message="---------------------------------------"/>
        <delete failonerror="false">
            <fileset dir="${junit.reports}/org/exist/xquery/xqts/qt3/"/>
        </delete>
        <java classname="org.exist.xquery.xqts.QT3TS_To_junit">
            <sysproperty key="exist.home" value="${basedir}" />
            <sysproperty key="exist.jmxagent" value="" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
        </java>
        <echo>JUnit tests generated.</echo>
    </target>
    
    <!-- Test QT3: Query 3 Test Suite -->
    <target name="test-qt3" depends="prepare-qt3, test-prepare">
        <echo message="--------------"/>
        <echo message="QT3 tests    "/>
        <echo message="--------------"/>
        <junit haltonfailure="false" printsummary="on" showoutput="${junit.output}" fork="yes" maxmemory="${junit.forked.VM.maxmemory.external}">
            <sysproperty key="exist.home" value="${basedir}" />

            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.ant_launcher"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            
            <formatter type="plain"/>
            <formatter type="xml"/>

            <batchtest fork="yes" todir="${junit.reports.dat}">
                <fileset dir="${junit.reports}/src">
                    <include name="org/exist/xquery/xqts/qt3/**/*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    
    <!-- Build and test for travis service -->
    <target name="travis" depends="clean,clean-all,all,test-prepare,test-local,test-wrapup"/>
        
</project>

<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="all" name="metadata-sleepycat">

   <property file="../../local.build.properties"/>
   <property file="../../build.properties"/>

   <property name="extension.name" value="${ant.project.name}"/>
   <property name="existhome.dir" location="../../.."/>
   
   <property name="luceneIndex.dir" location="../../indexes/lucene"/>
   
   <property name="extension.include" value="${include.feature.metadata.sleepycat}"/>

   <!-- specific overrules -->
   <property name="src.dir" location="src/main/java"/>
   <property name="test.src.dir" location="src/test/java"/>

   <!-- required due to dependency on interface -->
   <path id="classpath.extension.custom">
      <fileset dir="${existhome.dir}/lib/extensions">
         <include name="exist-metadata-interface.jar"/>
         <include name="exist-index-lucene.jar"/>
      </fileset>
      <fileset dir="${luceneIndex.dir}/lib">
         <include name="lucene-core-4.3.1.jar"/>
         <include name="lucene-queries-4.3.1.jar"/>
         <include name="lucene-analyzers-common-4.3.1.jar"/>
      </fileset>
   </path>

   <!-- import common.xml here -->
   <import file="${existhome.dir}/build/scripts/extensions-common.xml"/>


   <!-- 
      ToDo: it is better to define the classpath.extension.custom in this
      extensions.xml file, and have it used in extensions-commons.xml in a generic way/
      Need to find out how, when a component does not require additional
      jar (=no path set), extension-common.xml can handle this 'missing' path info. 
      In the mean time: implement compile-src locally
   -->
   <target name="compile-src" description="Compile sources" if="${extension.include}">

      <echo>Compiling sources '${extension.name}'</echo>

      <mkdir dir="${build.classes.dir}"/>

      <javac includeAntRuntime="false" debug="${build.debug}" deprecation="${build.deprecation}"
         destdir="${build.classes.dir}" encoding="UTF-8" optimize="${build.optimize}" srcdir="${src.dir}"
         source="${build.compiler.source}" target="${build.compiler.target}">
         <classpath>
            <path refid="classpath.core"/>
            <path refid="classpath.extension.custom"/>
         </classpath>
      </javac>
   </target>

   <target name="download-3rd-party" description="Download thirdparty jar files" if="${extension.include}">
      <taskdef name="fetch" classname="nl.ow.dilemma.ant.fetch.FetchTask" classpathref="classpath.core"/>

      <fetch classpathref="classpath.core" dest="${existhome.dir}/${lib.user}"
         url="http://download.oracle.com/maven/com/sleepycat/je/5.0.58/je-5.0.58.jar"
         classname="com.sleepycat.je.Database" usecache="true"/>
   </target>

   <target name="clean-3rd-party" description="Remove thirdparty jar files">
      <echo>Removing 3rd party jar files '${extension.name}'</echo>
      <delete includeemptydirs="true">
         <fileset dir="${existhome.dir}/${lib.user}" includes="je-*.jar"/>
      </delete>
   </target>

</project>

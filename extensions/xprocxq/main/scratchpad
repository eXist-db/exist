----------------------------------------
priority
----------------------------------------

    viewport and all path iterators (p:viewport,p:for-each)
    implement p:outputs
    implement params & options
    implement xproc xpath functions
    serialization
    error assertions


----------------------------------------
current issues
----------------------------------------

* u:replace-matching-elements does not match attributes (optional p:hash)
* sequence issue with input to choose
* dont forget I changed p namespace and p1 namespace in util.xqm
* fix p:choose deal with xpath-context, each subpipeline must have the same output signature (static check)
* need to check eq and = throughout the codebase to ensure we are testing equality properly
* migrate errors from string to QName
* inputs in nested p:declare-steps need fixing due to $allcomp in xproc:explicitnames
* create namespace module to manage namespace fixups
* target main eXist scenarios
	- form handler
	- the same applies to all apps where a user needs to log in first
	- how about a simple wizard-style example, e.g. along the lines of the "number guessing" example in eXist. I think the page flow logic could all be done in xproc.
* in p:escape-markup / p:unescape-markup lose top level text() ... amend so it doesn't get stripped

------------------------------
complex/container steps
------------------------------
	p:viewport - treewalker and then apply ext:eval-step to node

------------------------------
standard steps
------------------------------
	p:add-xml-base
	p:make-absolute-uris
	p:namespace-rename
	p:parameters

------------------------------
optional steps
------------------------------
	p:exec - anywhere in eXist a util:exec function (require java binding to be enabled )
	p:hash - problem with XSLTMATCHPATTERN with handling attributes
	p:www-form-urldecode - easy
	p:www-form-urlencode - easy

------------------------------
extension functions
------------------------------
    string/boolean p:system-property(string property)
    boolean p:step-available(string step-type)
    integer p:iteration-position()
    integer p:iteration-size()
    string p:base-uri()
    string p:base-uri(Node node)
    string p:resolve-uri(String relative)
    string p:resolve-uri(String relative, String base)

------------------------------
components
------------------------------
	p:serialisation
	p:log
	p:pipeinfo

------------------------------
other
------------------------------
    provide validation switch to xproc:run func signature and use annotated relaxNG schema
to validate against

----------------------------------------
spec reminders
----------------------------------------

parameters are like options, names until runtime (good to use with p:xslt).
Variables are created in compound steps and are immutable
Options can be declared on atomic or compound steps.
Parameters, unlike options and variables, have names that can be computed at runtime.



----------------------------------------------------------------------
27/12/10
----------------------------------------------------------------------

prob with validxsd-006
prob with rename-004
prob with add-xml-base
prob with Test delete-002

64 normal pass
273 normal fail

337 total normal required tests

8 normal pass
250 normal fail
258 total normal err required tests

12% pass rate

----------------------------------------------------------------------
31/12/10 TESTS
----------------------------------------------------------------------
-----------------------------
required (338)
-----------------------------
* pass  80
* fail  258
required - err (258)
* pass  8
* fail  250

-----------------------------
optional required ()
-----------------------------
* pass
* fail
optional - err ()
* pass
* fail
-----------------------------

<?xml version="1.0" encoding="UTF-8"?>
<p:pipeline xmlns:p="http://www.w3.org/ns/xproc"
name="pipeline" xmlns:ix="http://www.innovimax.fr/xproc/ns">
    
    <p:declare-step name="main" type="ix:sort">
        <p:input port="source" sequence="true"/>
        <p:output port="result" sequence="true"/>
        <p:option name="test"/>       
        <p:count name="indicator" ix:limit="2"/>
        <p:choose name="choose">
            <p:xpath-context>
                <p:empty/>
            </p:xpath-context>
            <p:variable name="indicator" select="."/>
            <p:when test="$indicator &lt; 2">
                <p:output port="result" sequence="true"/>
                <p:identity>
                    <p:input port="source">
                        <p:pipe port="source" step="main"/>
                    </p:input>
                </p:identity>
            </p:when>
            <p:otherwise>
                <p:output port="result" sequence="true">
                    <p:pipe port="result" step="lower-or-equal"/>
                    <p:pipe port="alternate" step="head-tail"/>
                    <p:pipe port="result" step="upper"/>
                </p:output>
                <p:split-sequence name="head-tail" test="position() &gt; 1">
                    <p:input port="source">
                        <p:pipe port="source" step="main"/>
                    </p:input>
                </p:split-sequence>
                <p:group>
                    <p:variable name="pivot-test" select="$test">
                        <p:pipe step="head-tail" port="alternate"/>
                    </p:variable>
                    <p:split-sequence name="dispatch">
                        <p:with-option name="test" select="concat($test, ' &lt;= ', $pivot-test)">
                            <p:empty/>
                        </p:with-option>
                    </p:split-sequence>
                    <ix:sort name="lower-or-equal">
                        <p:with-option name="test" select="$test">
                            <p:empty/>
                        </p:with-option>
                    </ix:sort>
                    <ix:sort name="upper">
                        <p:input port="input">
                            <p:pipe port="alternate" step="dispatch"/>
                        </p:input>
                        <p:with-option name="test" select="$test">
                            <p:empty/>
                        </p:with-option>
                    </ix:sort>
                </p:group>
            </p:otherwise>
        </p:choose>
    </p:declare-step>
    
    <p:for-each>
        <p:iteration-source select="/root/introduction | /root/chapter | /root/toc"/>
        <p:output port="result"/>
        <p:identity/>
    </p:for-each>
    
    <p:documentation>Here, I have each document wrapped in one doc</p:documentation>
    
    <p:split-sequence name="introduction" test="not(/introduction)"/>

    <p:split-sequence name="toc" test="not(/toc)"/>

    <ix:sort name="sorted-content" test="/chapter/@rank"/>
    
    <p:wrap-sequence name="content" wrapper="content"/>
    
    <p:wrap-sequence name="book" wrapper="book">
        <p:input port="source">
            <p:pipe port="alternate" step="introduction"/>
            <p:pipe port="result" step="content"/>
            <p:pipe port="toc" step="toc"/>
        </p:input>
    </p:wrap-sequence>
    
</p:pipeline>

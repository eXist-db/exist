<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="all" name="range">

 <property file="../local.build.properties"/>
 <property file="../build.properties"/>

 <property name="extension.name" value="index-${ant.project.name}"/>
 <property name="existhome.dir" location="../../.."/>

    <!-- required due to dependency on interface -->
    <path id="classpath.extension.custom">
        <fileset dir="${existhome.dir}/lib/extensions">
            <include name="exist-index-lucene.jar"/>
        </fileset>
        <fileset dir="../lucene/lib">
            <include name="*.jar"/>
        </fileset>
    </path>

 <property name="extension.include" value="${include.index.range}"/>

 <!-- import common.xml here -->
 <import file="${existhome.dir}/build/scripts/extensions-common.xml"/>

    <!--
      ToDo: it is better to define the classpath.extension.custom in this
      extensions.xml file, and have it used in extensions-commons.xml in a generic way/
      Need to find out how, when a component does not require additional
      jar (=no path set), extension-common.xml can handle this 'missing' path info.
      In the mean time: implement compile-src locally
   -->
    <target name="compile-src" description="Compile sources" if="${extension.include}">

        <echo>Compiling sources '${extension.name}'</echo>

        <mkdir dir="${build.classes.dir}"/>

        <javac includeAntRuntime="false" debug="${build.debug}" deprecation="${build.deprecation}"
               destdir="${build.classes.dir}" encoding="UTF-8" optimize="${build.optimize}" srcdir="${src.dir}"
               source="${build.compiler.source}" target="${build.compiler.target}">
            <classpath>
                <path refid="classpath.core"/>
                <path refid="classpath.extension.custom"/>
            </classpath>
        </javac>
    </target>
</project>

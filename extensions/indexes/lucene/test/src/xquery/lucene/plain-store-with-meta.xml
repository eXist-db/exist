<?xml version="1.0" encoding="UTF-8"?>
<TestSet>
    <testName>nonXML data with metadata indexing tests</testName>
    
    <description>
        <p>nonXML with metadata tests</p>
        <author>Dannes Wessels</author>
        <author>Dmitriy Shabanov</author>
    </description>
    
    <setup>
        <create-collection parent="/db/system" name="config"/>
        <create-collection parent="/db/system/config" name="db"/>
        <store collection="/db/system/config/db" name="collection.xconf">
            <collection xmlns="http://exist-db.org/collection-config/1.0">
                <index>
                    <!-- Disable the standard full text index -->
                    <fulltext default="none" attributes="false"></fulltext>
                    <analyzer class="org.apache.lucene.analysis.standard.StandardAnalyzer"/>
                    <analyzer id="nl" class="org.apache.lucene.analysis.nl.DutchAnalyzer"/>
                    
                    <fieldType id="author" analyzer="nl"/>
                    <fieldType id="para" analyzer="nl" store="yes"/>
            
                    <fieldType id="title" store="yes"/>
                    <fieldType id="speech" store="yes"/>
                </index>
            </collection>
        </store>
        <create-collection parent="/db" name="morebinary"/>
        <store collection="/db/morebinary" name="index1.txt" type="text/plain">AAAAAA</store>
        <store collection="/db/morebinary" name="index2.txt" type="text/plain">BBBBBB</store>
        <store collection="/db/morebinary" name="index3.txt" type="text/plain">CCCCCC</store>
    </setup>
    
    <tearDown>
        <!--remove-collection collection="/db/morebinary"/-->
        <remove-document collection="/db/system/config/db" name="collection.xconf"/>
    </tearDown>

    <test output="xml" > <!-- trace="yes" -->
        <task>Store index document 1</task>
        <code><![CDATA[
        let $path := "/db/morebinary/index1.txt"
        let $temp := md:set-value-by-url($path, "status", "in_review")
        
        return
        ft:index( $path, 
        <doc>
            <field name="author" store="yes">Dannes Wessels</field>
            <field name="para">Some text for a paragraph</field>
        </doc> )
        ]]>
        </code>
    </test>     
    
    <test output="xml" > <!-- trace="yes" -->
        <task>Store index document 2</task>
        <code><![CDATA[
        let $path := "/db/morebinary/index2.txt"
        let $temp := md:set-value-by-url($path, "status", "in_progress")

        return
        ft:index( $path, 
        <doc>
            <field name="author">Adam Retter</field>
            <field name="para">Some text for a paragraph Some text for a paragraph Some text for a paragraph.</field>
        </doc> )
        ]]>
        </code>
    </test> 
    
    <test output="xml" > <!-- trace="yes" -->
        <task>Store index document 3</task>
        <code><![CDATA[
        let $path := "/db/morebinary/index3.txt"
        let $temp := md:set-value-by-url($path, "status", "done")

        return
        ft:index( $path, 
        <doc>
            <field name="author">Harry Potter</field>
            <field name="para">Some blah for a paragraph Some blah for a paragraph Some blah for a paragraph paragraph paragraph.</field>
        </doc> )
        ]]>
        </code>
    </test> 

    <!--
    
    Query for "text" in para. only 1 documents should provide a hit
    
    -->
    <test output="text" > 
        <task>Query for text in para</task>
        <code><![CDATA[ 
        for $uri in ft:search("/db/morebinary/", "para:text AND status:in_review")//@uri/xs:string(.) order by $uri return $uri
        ]]></code>
        <expected>/db/morebinary/index1.txt</expected>
    </test>
    
    <test output="text" > 
        <task>Query for text in para</task>
        <code><![CDATA[ 
        for $uri in ft:search("/db/morebinary/", "para:text AND status:in_progress")//@uri/xs:string(.) order by $uri return $uri 
        ]]></code>
        <expected>/db/morebinary/index2.txt</expected>
    </test>

    <test output="text" > 
        <task>Remove collection</task>
        <code><![CDATA[
            xmldb:remove("/db/morebinary"),
            for $uri in ft:search("/db/morebinary", "status:in_review")//@uri/xs:string(.) order by $uri return $uri 
        ]]></code>
        <expected/>
    </test>
    
</TestSet>
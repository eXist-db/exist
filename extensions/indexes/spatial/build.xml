<project name="spatial-index">    
<!-- $Id$ -->    
    <import file="../common.xml"/>
    
    <property name="resources.dir" value="./test/resources"/>
    <property name="lib.dir" value="./lib"/>
    
    <!-- 
        existdb-contrib fetch task import used for downloading and extracting jar/class from zip
    -->
    <taskdef name="fetch" classname="nl.ow.dilemma.ant.fetch.FetchTask" classpathref="classpath.core" />
	
    <target name="prepare-libs" > <!-- unless="libs.available" -->
		<mkdir dir="${lib.dir}"/>
	    <echo message="------------------------------------------------------"/>
	    <echo message="Downloading libraries required by the spatial index..."/>
	    <echo message="------------------------------------------------------"/>
	    
        <fetch classpathref="classpath.core" dest="${lib.dir}" usecache="true"
	        url="http://lists.refractions.net/m2/org/opengis/geoapi-nogenerics/2.1.1/geoapi-nogenerics-2.1.1.jar" 
	        classname="org.opengis.geometry.Geometry"/>
	        
		<!--get src="http://lists.refractions.net/m2/org/opengis/geoapi-nogenerics/2.1.1/geoapi-nogenerics-2.1.1.jar" 
			dest="${lib.dir}/geoapi-nogenerics-2.1.1.jar" verbose="true" usetimestamp="true" /-->
	    
        <fetch classpathref="classpath.core" dest="${lib.dir}"  usecache="true"
	        url="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-api/2.4.5/gt2-api-2.4.5.jar" 
	        classname="org.geotools.event.GTRoot"/>
		
	    <!--get src="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-api/2.4.5/gt2-api-2.4.5.jar" 
			dest="${lib.dir}/gt2-api-2.4.5.jar" verbose="true" usetimestamp="true" /-->
	    
        <fetch classpathref="classpath.core" dest="${lib.dir}"  usecache="true"
            url="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-epsg-extension/2.4.5/gt2-epsg-extension-2.4.5.jar" 
            classname="org.geotools.referencing.factory.epsg.EsriExtension"/>
	    
		<!--get src="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-epsg-extension/2.4.5/gt2-epsg-extension-2.4.5.jar" 
			dest="${lib.dir}/gt2-epsg-extension-2.4.5.jar" verbose="true" usetimestamp="true" /-->
	    
        <fetch classpathref="classpath.core" dest="${lib.dir}"  usecache="true"
            url="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-epsg-wkt/2.4.5/gt2-epsg-wkt-2.4.5.jar" 
            classname="org.geotools.referencing.crs.EPSGCRSAuthorityFactory"/>
        
	    <!--get src="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-epsg-wkt/2.4.5/gt2-epsg-wkt-2.4.5.jar" 
	    dest="${lib.dir}/gt2-epsg-wkt-2.4.5.jar" verbose="true" usetimestamp="true" /-->
        
        <fetch classpathref="classpath.core" dest="${lib.dir}"  usecache="true"
            url="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-main/2.4.5/gt2-main-2.4.5.jar" 
            classname="org.geotools.factory.BasicFactories"/>
	    
		<!--get src="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-main/2.4.5/gt2-main-2.4.5.jar"
			dest="${lib.dir}/gt2-main-2.4.5.jar" verbose="true" usetimestamp="true" /-->
	    
        <fetch classpathref="classpath.core" dest="${lib.dir}"  usecache="true"
            url="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-metadata/2.4.5/gt2-metadata-2.4.5.jar" 
            classname="org.geotools.metadata.AbstractMetadata"/>
        
		<!--get src="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-metadata/2.4.5/gt2-metadata-2.4.5.jar" 
		dest="${lib.dir}/gt2-metadata-2.4.5.jar" verbose="true" usetimestamp="true" /-->
        
        <fetch classpathref="classpath.core" dest="${lib.dir}"  usecache="true"
            url="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-referencing/2.4.5/gt2-referencing-2.4.5.jar" 
            classname="org.geotools.referencing.Console"/>
	    
		<!--get src="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-referencing/2.4.5/gt2-referencing-2.4.5.jar" 
			dest="${lib.dir}/gt2-referencing-2.4.5.jar" verbose="true" usetimestamp="true" /-->
	    
        <fetch classpathref="classpath.core" dest="${lib.dir}"  usecache="true"
            url="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-xml/2.4.5/gt2-xml-2.4.5.jar" 
            classname="org.geotools.xml.DocumentFactory"/>
        
		<!--get src="http://download.osgeo.org/webdav/geotools/org/geotools/gt2-xml/2.4.5/gt2-xml-2.4.5.jar" 
			dest="${lib.dir}/gt2-xml-2.4.5.jar" verbose="true" usetimestamp="true" /-->
	    
		<!-- hsqldb-1.8.0.7.jar -->
	    
        <fetch classpathref="classpath.core" dest="${lib.dir}"  usecache="true"
            url="http://download.osgeo.org/webdav/geotools/javax/units/jsr108/0.01/jsr108-0.01.jar" 
            classname="javax.units.SI"/>
        
		<!--get src="http://download.osgeo.org/webdav/geotools/javax/units/jsr108/0.01/jsr108-0.01.jar"
			dest="${lib.dir}/jsr108-0.01.jar" verbose="true" usetimestamp="true" /-->
	    
        <fetch classpathref="classpath.core" dest="${lib.dir}" usecache="true"
            url="http://download.osgeo.org/webdav/geotools/com/vividsolutions/jts/1.8/jts-1.8.jar" 
            classname="com.vividsolutions.jts.JTSVersion"/>
        
		<!--get src="http://download.osgeo.org/webdav/geotools/com/vividsolutions/jts/1.8/jts-1.8.jar" 
			dest="${lib.dir}/jts-1.8.jar" verbose="true" usetimestamp="true" /-->
	    
        <fetch classpathref="classpath.core" dest="${lib.dir}"  usecache="true"
            url="http://download.osgeo.org/webdav/geotools/java3d/vecmath/1.3.1/vecmath-1.3.1.jar" 
            classname="javax.vecmath.GVector"/>
        
		<!--get src="http://download.osgeo.org/webdav/geotools/java3d/vecmath/1.3.1/vecmath-1.3.1.jar"
			dest="${lib.dir}/vecmath-1.3.1.jar" verbose="true" usetimestamp="true" /-->
	</target>

	<target name="jar" depends="prepare-libs, compile">
        <jar destfile="${top.dir}/${lib.extensions}/exist-spatial-module.jar" basedir="${module.classes}">    
	        <manifest>
                <attribute name="Project-Name" value="${project.name}"/>
                <attribute name="Project-Version" value="${project.version}"/>
                <attribute name="Project-Build" value="${DSTAMP}"/>
                <attribute name="SVN-Revision" value="${svn.revision}"/>
            </manifest>
		</jar>
    </target>
    
    <target name="prepare-test-tresources">
        <mkdir dir="${resources.dir}"/>
        <antcall target="download-15385-SS7886-5i1"/>
    </target>
    
    <available file="${resources.dir}/15385-SS7886-5i1.gml" property="15385-SS7886-5i1.present"/>
    
    <target name="download-15385-SS7886-5i1" unless="15385-SS7886-5i1.present">
       
        <!-- Download, unzip and cleanup data set -->
        <get src="http://data.exist-db.org/spatial/os-mastermap-topography-layer-sample-data.gz" 
            dest="${resources.dir}/15385-SS7886-5i1.gz" verbose="true"/>
        <gunzip src="${resources.dir}/15385-SS7886-5i1.gz" 
            dest="${resources.dir}/15385-SS7886-5i1.gml"/>
        <delete file="${resources.dir}/15385-SS7886-5i1.gz" />
        
        <!-- Retrieve copy of the license -->
        <get src="http://data.exist-db.org/spatial/ordnance-survey-discover-data-licence.pdf"
            dest="${resources.dir}"/>
        <get src="http://data.exist-db.org/spatial/README.txt"
            dest="${resources.dir}"/>
	</target>
    
    <target name="test" depends="compile-tests, prepare-test-tresources">        
        <!-- <junit fork="yes" haltonfailure="false" printsummary="yes" showoutput="${junit.output}" maxmemory="${junit.forked.VM.maxmemory}"> -->
        <junit fork="yes" haltonfailure="false" printsummary="yes" showoutput="${junit.output}" maxmemory="300m">

            <classpath refid="classpath.core"/>
            <classpath refid="classpath.junit"/>

            <formatter type="plain"/>
            <formatter type="xml"/>

            <test name="org.exist.indexing.spatial.AllSpatialTests"
                todir="${junit.index.reports}" />
        </junit>
    </target>
    
    <target name="clean">
        <delete file="${top.dir}/${lib.extensions}/exist-spatial-module.jar" failonerror="false"/> 
        <delete dir="${module.classes}" failonerror="false"/>
        <delete dir="${test.classes}" failonerror="false"/>
    </target>
    
    <target name="all-clean">
        <delete dir="${resources.dir}"/>
        <delete>
            <fileset dir="${lib.dir}">
                <exclude name="hsqldb-*.jar"/>
            </fileset>
        </delete>
    </target>
</project>

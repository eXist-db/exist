<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id$ -->
<project basedir="." default="jar" name="xslt">
    
    <property name="src" value="./src"/>
    <property name="classes" value="./classes"/>
    <property name="test.src" value="./test/src"/>
    <property name="test.classes" value="./test/classes"/>
    <property name="top.dir" value="../.."/>
    
    <property file="${top.dir}/build.properties"/>

    <property file="../local.build.properties"/>
    <property file="../build.properties"/>
    
    <condition property="include.feature.xslt.config">
        <istrue value="${include.feature.xslt}"/>
    </condition>
    
    <path id="classpath.core">
        <fileset dir="${top.dir}/${lib.core}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${top.dir}/${lib.optional}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${top.dir}/${lib.endorsed}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${top.dir}/${lib.user}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${top.dir}/tools/ant/lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${top.dir}/extensions">
            <include name="**/lib/*.jar"/>
        </fileset>
        <pathelement path="${top.dir}/exist.jar"/>
        <pathelement path="${top.dir}/exist-optional.jar"/>
        <pathelement path="${top.dir}/start.jar"/>
        <pathelement path="${java.class.path}"/>
    </path>
    
    <target name="compile" if="include.feature.xslt.config">
        <echo message="---------------------------"/>
        <echo message="Compiling XLST module"/>
        <echo message="---------------------------"/>
        
        <echo
            message="Compiling with Java ${ant.java.version} from ${build.compiler.source} source to ${build.compiler.target} target, debug ${build.debug}, optimize ${build.optimize}, deprecation ${build.deprecation}"/>
        
        <mkdir dir="${classes}"/>
        <javac includeAntRuntime="false" debug="${build.debug}" deprecation="${build.deprecation}" 
            destdir="${classes}" encoding="UTF-8"
            optimize="${build.optimize}" srcdir="${src}" 
            source="${build.compiler.source}" target="${build.compiler.target}">
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </javac>
    </target>
    
    <path id="classpath.junit">
        <pathelement path="../../test/classes"/>
    </path>

	<path id="classpath.test-libs">
		<fileset dir="${top.dir}/${lib.test}">
			<include name="*.jar"/>
		</fileset>
    </path>

    <target name="compile-tests" depends="jar" if="include.feature.xslt.config">
        <echo message="---------------------------"/>
        <echo message="Compiling XLST module tests"/>
        <echo message="---------------------------"/>
        
        <echo
            message="Compiling with Java ${ant.java.version} from ${build.compiler.source} source to ${build.compiler.target} target, debug ${build.debug}, optimize ${build.optimize}, deprecation ${build.deprecation}"/>
        
        <mkdir dir="${test.classes}"/>
        <javac includeAntRuntime="false" debug="${build.debug}" deprecation="${build.deprecation}" 
            destdir="${test.classes}" encoding="UTF-8"
            optimize="${build.optimize}" srcdir="${test.src}" 
            source="${build.compiler.source}" target="${build.compiler.target}">
            <classpath>
                <path refid="classpath.core"/>
                <path refid="classpath.junit"/>
                <path refid="classpath.test-libs"/>
            </classpath>
        </javac>
    </target>

    <target name="jar" depends="compile" if="include.feature.xslt.config">
        <echo message="Creating exist-xslt.jar ..."/>
        <jar basedir="${classes}" jarfile="${top.dir}/${lib.extensions}/exist-xslt.jar">  
            <manifest>
                <attribute name="Project-Name" value="${project.name}"/>
                <attribute name="Project-Version" value="${project.version}"/>
                <attribute name="Project-Build" value="${DSTAMP}"/>
                <attribute name="SVN-Revision" value="${svn.revision}"/>
            </manifest>
        </jar>
    </target>
    
    <target name="clean">
        <delete dir="${classes}"/>
        <delete dir="${test.classes}"/>
        <delete file="${top.dir}/${lib.extensions}/exist-xslt.jar" failonerror="false"/>
    </target>
</project>
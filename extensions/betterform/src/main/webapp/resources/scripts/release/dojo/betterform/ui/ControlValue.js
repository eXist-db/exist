/*
	Copyright (c) 2004-2009, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/


if(!dojo._hasResource["betterform.ui.ControlValue"]){dojo._hasResource["betterform.ui.ControlValue"]=true;dojo.provide("betterform.ui.ControlValue");dojo.require("dijit._Widget");dojo.require("dijit._Templated");dojo.require("dojo._base.fx");dojo.declare("betterform.ui.ControlValue",[dijit._Widget,dijit._Templated],{id:null,name:"",xfControl:null,incremental:false,currentValue:"",focused:false,applyProperties:function $DA2P_(_1,_2){this.xfControl=_1;if(dojo.attr(_2,"incremental")!=undefined&&dojo.attr(_2,"incremental")!=""){this.incremental=eval(dojo.attr(_2,"incremental"));}else{this.incremental=false;}if(dojo.attr(_2,"tabIndex")){this.tabIndex=eval(dojo.attr(_2,"tabindex"));}},setCurrentValue:function $DA2Q_(_3){if(_3!=undefined){this.currentValue=_3;}else{this.currentValue=this.getControlValue();}},_handleDOMFocusIn:function $DA2R_(){this.focused=true;this.domNode.focus();},handleOnFocus:function $DA2S_(){fluxProcessor.currentControlId=this.xfControl.id;if(!this.focused){fluxProcessor.dispatchEventType(this.xfControl.id,"DOMFocusIn");}this.focused=true;if(this.xfControl.isValid()){dojo.publish("/xf/valid",[this.xfControl.id,"onFocus"]);}else{dojo.publish("/xf/invalid",[this.xfControl.id,"onFocus"]);}},handleOnBlur:function $DA2T_(){this.focused=false;if(this.xfControl.isValid()){dojo.publish("/xf/valid",[this.xfControl.id,"onBlur"]);}else{dojo.publish("/xf/invalid",[this.xfControl.id,"onBlur"]);}if(!this.incremental){this.setControlValue();}fluxProcessor.dispatchEventType(this.xfControl.id,"DOMFocusOut");},applyState:function $DA2U_(){if(this.xfControl.isReadonly()){this.attr("disabled",true);this.attr("readonly",true);}else{this.attr("disabled",false);this.attr("readonly",false);}},setControlValue:function $DA2V_(_4){if(_4!=undefined&&this.currentValue!=_4){this.currentValue=_4;this._handleSetControlValue(_4);}var _5=this.getControlValue();if(this.currentValue!=_5){this.xfControl.setControlValue(_5);this.currentValue=_5;}},_setLabel:function $DA2W_(_6){var _7=dojo.byId(this.xfControl.id+"-label");if(_7!=undefined&&_6!=undefined){_7.innerHTML=_6;}},_handleSetControlValue:function $DA2X_(_8){console.error("betterform.ui.ControlValue: abstract methods _handleSetControlValue() must be implemented by extending class ",this);},getControlValue:function $DA2Y_(){console.error("betterform.ui.ControlValue: abstract methods getControlValue() must be implemented by extending class ",this);}});}
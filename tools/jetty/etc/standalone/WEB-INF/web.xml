<?xml version="1.0" encoding="UTF-8"?>

<!--+
    | Plain configuration file for the web application. This configuration is limited
    | to the XML-RPC, REST and WebDAV servlets, plus XQueryURLRewrite for the URL
    | handling. Use this configuration if you need a minimum setup with web content
    | stored in the db.
    | $Id$
    +-->

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" version="2.4">
    
    <description>eXist-db â€“ Open Source Native XML Database</description>
    <display-name>eXist-db XML Database</display-name>

    <!-- 
        Initialize Log4j using a servlet.
        Only needed when eXist is deployed as a .war file in e.g. Tomcat.
    -->
    <servlet>
        <servlet-name>log4j-init</servlet-name>
        <servlet-class>org.exist.http.servlets.Log4jInit</servlet-class>

        <init-param>
            <param-name>log4j-init-file</param-name>
            <param-value>WEB-INF/log4j.xml</param-value>
        </init-param>
        
        <init-param>
            <param-name>log4j-log-dir</param-name>
            <param-value>WEB-INF/logs</param-value>
        </init-param>

        <load-on-startup>1</load-on-startup>
    </servlet>


    <!--
        RpcServlet provides XML-RPC access to eXist
    -->
    <servlet>
        <servlet-name>org.exist.xmlrpc.RpcServlet</servlet-name>
        <servlet-class>org.exist.xmlrpc.RpcServlet</servlet-class>
        <init-param>
          <param-name>enabledForExtensions</param-name>
          <param-value>true</param-value>
        </init-param>
    </servlet>

    <!-- 
        EXistServlet provides Rest access to eXist-db
	DatabaseAdminServlet: this servlet can be used to ensure that
        eXist-db is running in the background. Just set the start-parameter 
        to true and load-on-startup to 1 
    -->
    <servlet>
        <servlet-name>EXistServlet</servlet-name>
        <servlet-class>org.exist.http.servlets.EXistServlet</servlet-class>
    
        <!--
            where to find eXist-db's configuration file relative to the basedir 
            of the web-application.
        -->
        <init-param>
            <param-name>configuration</param-name>
            <param-value>conf.xml</param-value>
        </init-param>

        <!-- 
            eXist-db's home directory. All file names in the configuration file 
            will be relative to this directory.
        -->
        <init-param>
            <param-name>basedir</param-name>
            <param-value>WEB-INF/</param-value>
        </init-param>

        <init-param>
            <param-name>start</param-name>
            <param-value>true</param-value>
        </init-param>

        <load-on-startup>2</load-on-startup>

        <!-- Default user -->
	<!-- If none is specified the guest user 
	     with *default password* is chosen.   -->
        <!-- Names changed for 1.5 trunk Jetty 7, December 2009 
	     this was for previous Jetty version configured in
	     EXIST_HOME/server.xml:                         
	     <param name="use-default-user" value="true"/>
	     <param name="default-user-username" value="default-user-username"/>
	     <param name="default-user-password" value="default-user-password"/>
        -->
	<!--
	<init-param>
            <param-name>use-default-user</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>user</param-name>
            <param-value>default-user-username</param-value>
        </init-param>
        <init-param>
            <param-name>password</param-name>
            <param-value>default-user-password</param-value>
        </init-param>
	-->


    </servlet>

    <!--
        Milton provides the WebDAV interface
    -->
    <servlet>
        <servlet-name>milton</servlet-name>
        <servlet-class>org.exist.webdav.MiltonWebDAVServlet</servlet-class>
        
        <!-- Don't change this value -->
        <init-param>
            <param-name>resource.factory.class</param-name>
            <param-value>org.exist.webdav.ExistResourceFactory</param-value>
        </init-param>
        
        <!-- 
            Some WebDAV clients send a "Expect: 100-continue" header before 
            uploading body data. Servlet containers (like tomcat and jetty) handle 
            the header in a wrong way, making a client not work OK.
            Set value to TRUE to restore old behavior (FALSE is the new default 
            value, hardcoded in MiltonWebDAVServlet).       
        -->
        <!-- 
            <init-param>
            <param-name>enable.expect.continue</param-name>
            <param-value>false</param-value>
            </init-param>
        -->
        
        <!-- Uncomment to enable debugging -->
        <!--
            <init-param>
            <param-name>filter_0</param-name>
            <param-value>com.bradmcevoy.http.DebugFilter</param-value>
            </init-param>
        -->
    </servlet>
    
    <!-- 
        Old webDAV access to eXist 
    -->
    <!--servlet>
        <servlet-name>WebDAVServlet</servlet-name>
        <servlet-class>org.exist.http.servlets.WebDAVServlet</servlet-class>

        <init-param>
            <param-name>authentication</param-name>
            <param-value>basic</param-value>
        </init-param>
    </servlet-->
	
    <servlet>
        <servlet-name>XQueryURLRewrite</servlet-name>
        <servlet-class>org.exist.http.urlrewrite.XQueryURLRewrite</servlet-class>

        <!-- Defines the location of the controller-config.xml file, which defines
             the root mappings. -->
        <init-param>
            <param-name>config</param-name>
            <param-value>WEB-INF/controller-config.xml</param-value>
        </init-param>
    </servlet>
    
    <servlet>
        <servlet-name>XSLTServlet</servlet-name>
        <servlet-class>org.exist.http.servlets.XSLTServlet</servlet-class>
    </servlet>

    <!-- Atom Atom Publishing Protocol -->
    <servlet>
        <servlet-name>AtomServlet</servlet-name>
        <servlet-class>org.exist.atom.http.AtomServlet</servlet-class>
    </servlet>
    
    <!--
        EXQuery - RESTXQ
    -->
    <servlet>
        <servlet-name>RestXqServlet</servlet-name>
        <servlet-class>org.exist.extensions.exquery.restxq.impl.RestXqServlet</servlet-class>
    </servlet>

    <!-- Enabled dynamic GZip of server responses

        Standard approach is to use org.eclipse.jetty.servlets.GZipFilter, the
        javadoc describes the init-params and the conditions under which gzip encoding
        is applied - http://download.eclipse.org/jetty/stable-7/apidocs/org/eclipse/jetty/servlets/GzipFilter.html

        A more flexible approach can be gained by using org.eclipse.jetty.servlets.IncludableGzipFilter,
        the javadoc can be found here - http://download.eclipse.org/jetty/stable-7/apidocs/org/eclipse/jetty/servlets/IncludableGzipFilter.html
    -->
    <!--
    <filter>
      <filter-name>GzipFilter</filter-name>
      <filter-class>org.eclipse.jetty.servlets.GzipFilter</filter-class>
      <init-param>
        <param-name>mimeTypes</param-name>
        <param-value>text/html,text/plain,text/xml,application/xml,application/xhtml+xml,text/css,application/javascript,image/svg+xml</param-value>
      </init-param>
    </filter>
    <filter-mapping>
      <filter-name>GzipFilter</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>
    -->

    
    <!-- ====================== URL space mappings ======================= -->
    
    <!-- IMPORTANT: the XQueryURLRewrite servlet filter does now serve as a single
         entry point into the web application. All eXist-related URL
         mappings are handled by XQueryURLRewrite (see controller-config.xml). 
         The servlet mappings below are thus commented out. We keep them here 
         for documentation purposes. If you need to switch to the old setup, 
         you can re-enable the mappings below and disable them in 
         controller-config.xml. However, please note that some features of the
         website will only work if XQueryURLRewrite controls the /rest servlet
         (EXistServlet). -->
    <servlet-mapping>
        <servlet-name>XQueryURLRewrite</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
</web-app>
